<!DOCTYPE html>
<!-- saved from url=(0089)https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/ -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">


<meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">

<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Advanced Graphics with Core Animation</title>
<link href="./Advanced Graphics with Core Animation_files/css" rel="stylesheet" type="text/css">
<link href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation" rel="canonical">
<meta name="description" content="Animation is one of the cornerstones of the UI experience on iOS, and thanks to the animation APIs in UIKit, it is incredibly easy. Howeve…">
<meta name="google-site-verification" content="V61I6JaPDNM_SLXv4YaUU-madBffKP6UAAy5Brm6crg">

<meta name="twitter:site" content="@realm">
<meta name="twitter:creator" content="timoliverau">
<meta name="twitter:image" content="http://images.ctfassets.net/s72atsk5w5jo/asset_603/d536a7543f49371481121dcc730a64f4/tryswift-tim-oliver-cover">
<meta name="twitter:card" content="summary_large_image">
<meta name="twitter:description" content="Animation is one of the cornerstones of the UI experience on iOS, and thanks to the animation APIs in UIKit, it is incredibly easy. Howeve…">
<meta name="twitter:title" content="Advanced Graphics with Core Animation">

<meta property="og:image" content="http://images.ctfassets.net/s72atsk5w5jo/asset_603/d536a7543f49371481121dcc730a64f4/tryswift-tim-oliver-cover">
<meta property="og:type" content="Article">
<meta property="og:url" content="http://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/">
<meta name="og:description" content="Animation is one of the cornerstones of the UI experience on iOS, and thanks to the animation APIs in UIKit, it is incredibly easy. Howeve…">
<meta property="og:title" content="Advanced Graphics with Core Animation">
<meta name="application-name" content="Developer videos, articles and tutorials from top conferences, top authors, and community leaders.">
<meta name="msapplication-TileColor" content="#1C233F">
<meta name="msapplication-TileImage" content="/assets/favicons/favicon-144x144.png">

<link rel="shortcut icon" type="image/x-icon" href="https://academy.realm.io/assets/favicons/favicon-0b92cc5a5e461d6f56e61708fb9bf561d65e65b4f18a9038c4f174eaa75f8abd.ico">
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://academy.realm.io/assets/favicons/favicon-57x57-8fab910309f3aae1e407e9dd9c364b2cb1b4c439a0709b7f5e02520157012028.png" sizes="57x57">
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://academy.realm.io/assets/favicons/favicon-72x72-7c4d3cda83729d015e7b39acb39370d78c389cb10451873c1c7f692a0762260a.png" sizes="72x72">
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://academy.realm.io/assets/favicons/favicon-114x114-c444f03eb5b60043779eaa076a482a1237b180ac3a0a5ec50402a804c50f9814.png" sizes="114x114">
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://academy.realm.io/assets/favicons/favicon-120x120-c22b788ca04f74f3b378250f866a39c8858b26f717a829c4f1cd87a4f1ed2d30.png" sizes="120x120">
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://academy.realm.io/assets/favicons/favicon-144x144-fc2d5bb3b3c6e0e1d1d094f871bfc2b2a491f0053270cbbc5eeac1d4dd17dca6.png" sizes="144x144">
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://academy.realm.io/assets/favicons/favicon-152x152-6a56403a0aa1bdfeb6c0efb983d77b27ecc4067c9bcbd19f85a71df2c9c3a88e.png" sizes="152x152">
<link rel="apple-touch-icon-precomposed" type="image/png" href="https://academy.realm.io/images/favicons/favicon-180x180.png" sizes="180x180">
<link rel="icon" type="image/png" href="https://academy.realm.io/assets/favicons/favicon-16x16-b85e948f36ff5911ed132b3d43cca8bdcdbe1ecd0171e9f74a15f48f1f070cf1.png" sizes="16x16">
<link rel="icon" type="image/png" href="https://academy.realm.io/assets/favicons/favicon-32x32-68ea476d0e0bd62899a2adfdd78221038bd93628d76363a59fec786827e7350e.png" sizes="32x32">
<link rel="alternate" type="application/rss+xml" title="Realm News" href="https://academy.realm.io/blog/feed.xml">


<script type="text/javascript" src="./Advanced Graphics with Core Animation_files/pd.js"></script><script type="text/javascript" async="" src="./Advanced Graphics with Core Animation_files/insight.min.js"></script><script type="text/javascript" async="" src="./Advanced Graphics with Core Animation_files/57c0b3e503f61e6a9600001a.js"></script><script src="./Advanced Graphics with Core Animation_files/584900264991316" async=""></script><script async="" src="./Advanced Graphics with Core Animation_files/fbevents.js"></script><script type="text/javascript" async="" src="./Advanced Graphics with Core Animation_files/insight.min(1).js"></script><script type="text/javascript" async="" src="https://static.ads-twitter.com/uwt.js"></script><script type="text/javascript" async="" src="./Advanced Graphics with Core Animation_files/analytics.js"></script><script src="./Advanced Graphics with Core Animation_files/1837.js" async="" type="text/javascript"></script><script async="" src="./Advanced Graphics with Core Animation_files/gtm.js"></script><script type="text/javascript" async="" src="./Advanced Graphics with Core Animation_files/mixpanel-2-latest.min.js"></script><script src="./Advanced Graphics with Core Animation_files/application-f9d8e5ce8f528d997d58156ff5f8c1d4b0741ac22b367a6a6294b3c7e9758e96.js"></script>
<meta name="csrf-param" content="authenticity_token">
<meta name="csrf-token" content="PBT7yRkQGy7TMWoc85UJVNU4DNTnrupxGlf9bvI0fmGMgvN4o7hwEXHn9+MFB4zT1b2m/9hQO2U1ILPO/9yX9w==">
<script type="text/javascript" src="./Advanced Graphics with Core Animation_files/jquery.min.js"></script>
<script type="text/javascript" src="./Advanced Graphics with Core Animation_files/jquery-migrate-1.2.1.min.js"></script>
<script src="./Advanced Graphics with Core Animation_files/bootstrap-e8f48d8c081fd7bf6bcfd5ebd0d6da3e0fa909f66bfaf6c3d067f82abc336fc3.js"></script>

<link rel="stylesheet" media="screen" href="./Advanced Graphics with Core Animation_files/bootstrap-88e2307061f6d67fbf6979f505a4898eee2de33c8ba661ae08589370c849c522.css">
<link rel="stylesheet" media="screen" href="./Advanced Graphics with Core Animation_files/site-7fa3d75c8753984fd1f7ebcfd0a632843dce3b765704a3693c1265630aae72f4.css">
<script src="./Advanced Graphics with Core Animation_files/news-6d26db860121a6cf7063b4fa31ac675fe4c1dec4baf482b42df67bca67aa7e57.js"></script>

<script async="" src="./Advanced Graphics with Core Animation_files/mediaelement.min.js"></script>
<link rel="stylesheet" media="screen" href="./Advanced Graphics with Core Animation_files/academy_post-0de902d41c8d8ca886972bcdaf78bd20845f817f041326f134d1310c6d19141e.css">
<script src="./Advanced Graphics with Core Animation_files/home-bfd89ab0c4c27002b24b3722b7cac67bfe16ac4f03f1af34afea9f0ec5ade6ff.js"></script>

<script src="./Advanced Graphics with Core Animation_files/slick-4b41e1fc66238a172f7c23b12a6dd6cc76c6e255c3291271e673e288d35cc249.js"></script>
<script type="text/javascript" src="./Advanced Graphics with Core Animation_files/userinfo.min.js"></script>
<script src="./Advanced Graphics with Core Animation_files/realm-a993eae423c36a9655f9794e60c477eb829c1320621ea70d933fb2f63629a24b.js"></script>

<script type="text/javascript">
    piAId = '211132';
    piCId = '1214';

    (function() {
        function async_load(){
            var s = document.createElement('script'); s.type = 'text/javascript';
            s.src = ('https:' == document.location.protocol ? 'https://pi' : 'http://cdn') + '.pardot.com/pd.js';
            var c = document.getElementsByTagName('script')[0]; c.parentNode.insertBefore(s, c);
        }
        if(window.attachEvent) { window.attachEvent('onload', async_load); }
        else { window.addEventListener('load', async_load, false); }
    })();
</script>

<script type="text/javascript">(function(e,a){if(!a.__SV){var b=window;try{var c,l,i,j=b.location,g=j.hash;c=function(a,b){return(l=a.match(RegExp(b+"=([^&]*)")))?l[1]:null};g&&c(g,"state")&&(i=JSON.parse(decodeURIComponent(c(g,"state"))),"mpeditor"===i.action&&(b.sessionStorage.setItem("_mpcehash",g),history.replaceState(i.desiredHash||"",e.title,j.pathname+j.search)))}catch(m){}var k,h;window.mixpanel=a;a._i=[];a.init=function(b,c,f){function e(b,a){var c=a.split(".");2==c.length&&(b=b[c[0]],a=c[1]);b[a]=function(){b.push([a].concat(Array.prototype.slice.call(arguments,
    0)))}}var d=a;"undefined"!==typeof f?d=a[f]=[]:f="mixpanel";d.people=d.people||[];d.toString=function(b){var a="mixpanel";"mixpanel"!==f&&(a+="."+f);b||(a+=" (stub)");return a};d.people.toString=function(){return d.toString(1)+".people (stub)"};k="disable time_event track track_pageview track_links track_forms register register_once alias unregister identify name_tag set_config reset people.set people.set_once people.increment people.append people.union people.track_charge people.clear_charges people.delete_user".split(" ");
    for(h=0;h<k.length;h++)e(d,k[h]);a._i.push([b,c,f])};a.__SV=1.2;b=e.createElement("script");b.type="text/javascript";b.async=!0;b.src="undefined"!==typeof MIXPANEL_CUSTOM_LIB_URL?MIXPANEL_CUSTOM_LIB_URL:"file:"===e.location.protocol&&"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js".match(/^\/\//)?"https://cdn.mxpnl.com/libs/mixpanel-2-latest.min.js":"//cdn.mxpnl.com/libs/mixpanel-2-latest.min.js";c=e.getElementsByTagName("script")[0];c.parentNode.insertBefore(b,c)}})(document,window.mixpanel||[]);
mixpanel.init("449d47e4fac4e6b03a98df14b2aaf5c6");</script>

<noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-NDCSRV"
                  height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-NDCSRV');</script>


<script type="text/javascript">
setTimeout(function(){var a=document.createElement("script");
var b=document.getElementsByTagName("script")[0];
a.src=document.location.protocol+"//script.crazyegg.com/pages/scripts/0066/1837.js?"+Math.floor(new Date().getTime()/3600000);
a.async=true;a.type="text/javascript";b.parentNode.insertBefore(a,b)}, 1);
</script>
<script type="text/javascript" async="" src="./Advanced Graphics with Core Animation_files/tagjs"></script><img src="./Advanced Graphics with Core Animation_files/saved_resource" width="1" height="1" border="0"><img src="./Advanced Graphics with Core Animation_files/saved_resource(1)" width="1" height="1" border="0"><img src="./Advanced Graphics with Core Animation_files/saved_resource(2)" width="1" height="1" border="0"><img src="./Advanced Graphics with Core Animation_files/saved_resource(3)" width="1" height="1" border="0"><img src="./Advanced Graphics with Core Animation_files/saved_resource(4)" width="1" height="1" border="0"><img src="./Advanced Graphics with Core Animation_files/saved_resource(5)" width="1" height="1" border="0"><img src="./Advanced Graphics with Core Animation_files/saved_resource(6)" width="1" height="1" border="0"><img src="./Advanced Graphics with Core Animation_files/seg" width="1" height="1" border="0"><script type="application/ld+json">{"@context":"http://schema.org/","@id":"https://fast.wistia.net/embed/iframe/uz6oa6alkp","@type":"VideoObject","duration":"PT29M51S","name":"trySwift09 Tim Oliver EN Dub","thumbnailUrl":"https://embed-ssl.wistia.com/deliveries/ba5886f7e893a4afa4daa0bb9169d04a49001e1a.jpg?image_crop_resized=960x540","embedUrl":"https://fast.wistia.net/embed/iframe/uz6oa6alkp","uploadDate":"2016-04-06","transcript":"- Alrighty, let's begin.\n\nGood afternoon, everyone.\n\nMy name is Tim Oliver and\ntoday I'd like to talk to you\n\nabout advanced graphics\nwith Core Animation.\n\nCore Animation is one of my\nfavorite frameworks in iOS,\n\nand although, ostensibly,\nthe API hasn't changed\n\nall that much between\nObjective-C and Swift,\n\nI get the feeling it's\nthe sort of framework that\n\na lot of developers don't know about,\n\nas it's not really necessary\nwhen you're developing apps.\n\nThat being said, once\nyou actually get to know\n\nhow to use it, you can create\nsome really nice effects,\n\nwhich is what we're going\nto be talking about today.\n\nThank you very much for\nletting me speak here today.\n\n(applause)\n\nOkay, so before we start, I'll\njust go over a really quick\n\noverview of the things we'll\nbe talking about today.\n\nFirst of all, I'll provide\na very brief introduction\n\nto what Core Animation is\n\nand how it differs to UIkit.\n\nThis will include things\nlike introducing the concept\n\nof a CA layout object,\nand what kind of effects\n\nyou can apply to these layer objects\n\nto create new effects not\notherwise possible with UIkit.\n\nSecondly, I'll talk about\nhow to actually go about\n\ndoing animations on the\nCore Animation level,\n\nwhat kind of APIs are available,\n\nand what kind of effects you can achieve.\n\nFinally, I'll go into detail about some of\n\nthe system level CALayer subclass APIs\n\nthat are available and what\nsort of GPU level effects\n\nthey can actually let\nyou do with your app.\n\nBefore all that, I'll just do\na really quick introduction.\n\nAs you can see, that is my\nTwitter handle, @TimOliverAU.\n\nI'm originally from Perth,\n\nthe capital city of Western Australia.\n\nLike my colleague Mr. Kishikawa said,\n\nI joined Realm about a year ago.\n\nI absolutely love doing iOS development\n\nand I've been doing it for\nabout six years on and off,\n\never since I got my iPhone 3G.\n\nThat being said, I moved\nto doing full-time iOS\n\ndevelopment work, and I've been doing that\n\nfor about three years now.\n\nOne more thing, I love karaoke!\n\nbut I just don't like that,\n\nsomething else I really, really\nlike is cheesy dad jokes.\n\nJust as a quick translator note,\n\nin reference to this picture,\nthe word for naan bread\n\nand \"nan\" in Japanese is the same.\n\nThis turns out to become,\n\"Is this naan bread?\"\n\nAs well as, \"What is this?\"\n\nIt's amazing.\n\nI feel I should also mention\nmy relationship with Japan.\n\nI've come to Japan quite\na few times in the past\n\nand I often get asked why\nI chose to study Japanese.\n\nAbout 20 years ago, in 1996,\n\non account of my father's work,\n\nmy entire family moved to\nthe Chiba region of Japan\n\nand lived there for about six months.\n\nAlong that time, my sister\nand I actually attended\n\na Japanese elementary school\nfor that entire period.\n\nWe made a lot of friends,\n\nwe made a lot of good connections,\n\nand we fell in love with the country.\n\nWe've loved it ever since.\n\nSo when we came back from Japan,\n\nmy sister and I decided\nto start studying Japanese\n\nand we never stopped.\n\nAfter that, in 2007, I came back to Japan\n\non a working holiday visa, where I worked\n\nat a ski resort in Niigata for four months\n\nand then taught English in\nOsaka for another four months.\n\nThen most recently, three years ago,\n\nI came and lived in Tokyo for a year,\n\nwhile I worked as an iOS developer\n\nat a company called Pixiv,\n\nthe social illustrating\nnetworking service.\n\nAside from that, as a\nbit of a side project,\n\nI'm actually working on a DRM-free\n\ncomic reader app for iOS.\n\nThe app itself is called iComics.\n\nThe goal of it is you buy comics\nyourself off the internet,\n\nput them into your iOS device,\n\nand then you can read\nthem anywhere you want.\n\nFor example, there are a\nlot of archive websites\n\nthat serve to republish old comics\n\nthat have lost their copyrighted status,\n\nas well as a lot of new\nsites like Humble Bundle\n\nand Image Comics.\n\nOn the Japanese side, Mangatoshokan Z,\n\nwhere you can actually\nbuy comics that have been\n\nput out in a DRM-free format.\n\nWith that being said, it's a\npretty challenging thing to do,\n\nbecause when you have an app that relies\n\non user input data, you usually can't tell\n\nwhat format the enter data will come in.\n\nSometimes it's really small,\nbut more often than not,\n\nit's really big and needs to be treated\n\nbefore it can actually\nbe effectively rendered\n\non an iOS device.\n\nAs a result, I've spent a\nlot of time over the years\n\nplaying with various techniques,\n\nimage scaling, image rendering,\n\na lot of playing with Core Animation\n\nto get this stuff to work.\n\nThis is where I'm coming from\nwith my presentation today.\n\nI would like to show you\neverything I've learned\n\nfrom my experience with this.\n\nJust as a last point, I'm happy to say\n\nthat iComics also uses Realm.\n\nSo even though I work at the company,\n\ncoming from a customer\nperspective, it's really good.\n\nI really recommend it.\n\nYay.\n\nSo, what is Core Animation?\n\nI'm assuming everyone here already knows\n\nwhat UIkit is, right?\n\nRight?\n\nThere's no one here who doesn't?\n\nOkay, okay, that's good.\n\nWe're off to a good start then. (laughs)\n\nCore Animation was\noriginally introduced in OS10\n\nas an optional component.\n\nYou could opt in to it if you wanted\n\nthat sort of performance\nfor your graphics.\n\nWhereas in iOS, it is one\nlevel lower than UIkit,\n\nbut it's an integral part of the system.\n\nEssentially, it is the graphics rendering\n\nand animations system available in iOS\n\nand it's very deeply\nintegrated with UIkit.\n\nWhen I say deeply integrated,\nI'm really not kidding.\n\nThere's a lot of properties in UIkit,\n\nespecially in UIView\nobjects, that map directly\n\nto properties in Core Animation.\n\nThe two are linked together so closely\n\nthat accessing a property\nin one would automatically\n\nupdate the property in the other one.\n\nIt's also worth noting that\na lot of Core Animation\n\nis not actually executed on the CPU.\n\nMore their commands are\noffloaded to the GPU\n\nand used to actually create the graphics\n\nthat are shown on the screen,\n\npowered by the GPU hardware.\n\nIn relation to that,\n\nI like to think of it as\nakin to game development.\n\nBack in the days when I did a lot of\n\nmodding of game engines, a lot of the UI\n\nwas exactly the same hierarchy.\n\nYou had a series of GPU-backed squares,\n\nquads, on the screen.\n\nThey call them quads.\n\nThat is literally just\ntexture bit-mapped polygons\n\nand you were just manipulating\nthem on the GPU level.\n\nI think it's very, very\nappropriate to actually\n\nthink of it in terms of game development\n\nwhen you're actually doing\nthis level of graphics in iOS.\n\nIn fact, dare I say it, if\nyou have actually done some\n\nlow level graphics\nprogramming in the past,\n\nfor example, for game development\n\nor even other types of technologies\n\nthat you incorporate OpenGL,\na lot of these properties\n\nin Core Animation will\nseem very familiar to you.\n\nHaving an understanding\nof this will make it\n\na lot easier to work with the graphics\n\ntechnology on this level.\n\nWhile I was thinking that when\nI was writing these slides,\n\nI was thinking that's sort of a blunt\n\nsort of way of looking at it.\n\nIs it actually possible to make a game\n\non top of Core Animation?\n\nSo I actually went away and\nhad a look for some games\n\nand actually found out that Disney\n\nactually does quite a few of their games\n\non top of Core Animation.\n\nNo game engine, no Unity, no Unreal.\n\nEven if you just turn debugging mode on,\n\nyou can even see the layer shapes\n\nand transformations\nhappening in real time.\n\nCore Animation is completely applicable\n\nto just make games on top of.\n\nThat being said and\ndone, why is it actually\n\ngood to know about Core Animation?\n\nI mean, this is not a\nfundamental framework\n\nyou have to be aware of\nwhen you actually make apps,\n\nand you can totally make functional\n\nand well-designed apps without needing it.\n\nBut knowing it really helps you empower\n\nthe quality of your apps,\n\nbecause you understand inherently\n\nwhat is happening in the back end\n\nand how content is being\ndrawn to the screen.\n\nThis can be potentially of great benefit\n\nwhen you're making UI layouts that are\n\nquite possibly more complex than normal.\n\nIf you have a lot of\neffects and a lot of layers\n\nblended over each other, the performance\n\ncan drop really heavily if you\ndon't know what you're doing\n\nand don't know where the bottlenecks are.\n\nIn this case, by learning more\nabout how the system works,\n\nyou can actually optimize your\nanimations and your graphics\n\nand ensure that your apps\nrun at 60 frames per second.\n\nNot only that, the amount\nof Core Animation's\n\nfunctionality that's exposed to UIkit\n\nis actually pretty limited.\n\nThere's actually a lot more you can do\n\nwhen you actually drop down to that level\n\nand start accessing the APIs yourself.\n\nThe outcome of all of\nthis is it can help you\n\nmake a very polished app,\none that performs smoothly,\n\nlooks nice, and can contain\neffects that wouldn't\n\notherwise be in the native\nsystem implementation,\n\nwhich is the sort of\nstuff that users love.\n\nBefore I continue, there was one thing\n\nthat screwed me up quite a bit when I was\n\nlearning iOS at the beginning.\n\nHow is Core Animation not\nthe same as Core Graphics?\n\nI mean, Core Animation's supposed to be\n\nthe graphics system of the framework,\n\nbut there's also this other\nframework called Core Graphics.\n\nIt turns out the differences\nare very, very obvious.\n\nFor example, here's a\npile of Core Graphics code\n\nI wrote really quickly in Swift.\n\nWhen you execute it, this is what happens.\n\nHey, the try Swift logo!\n\nAs you can, it's an\nentirely CPU-bound framework\n\nthat actually lets you\nrender complicated shapes\n\nand then rasterize them to a bitmap.\n\nThis is completely different\nto how Core Animation works\n\nbecause this is entirely done on the CPU\n\nand cannot be performed on the GPU.\n\nOn that note, something I\nalways try and keep in mind\n\nis that because it's an\nentirely CPU-bound operation,\n\nit's sometimes a lot\nslower on older devices,\n\nsuch as the iPad 2 or\nthe iPad 3rd Generation.\n\nThis is something you need to keep in mind\n\nwhen you're actually\nusing it in your apps.\n\nBut the good thing about Core Graphics\n\nis you can combine it with Core Animation.\n\nYou can get Core Graphics\nto create the actual bitmaps\n\nand use Core Animation to display them\n\nto create some really cool effects.\n\nSubsequently, a really cool desktop app\n\nI recommend for this sort of\nstuff is one called PaintCode.\n\nPaintCode is a really\nnice app that lets you\n\nbasically import graphics,\nor even just draw them\n\nfreehand in the app itself,\nand it will create the code\n\nnecessary to render that\ncontent in Core Graphics.\n\nThis is really convenient,\na really useful development,\n\nand I really recommend it.\n\nBack to the topic of Core Animation.\n\nLike I said earlier, it's comprised of\n\na series of layout objects.\n\nThe fundamental class that represents\n\nthese layout objects is the CALayer class.\n\nAs you can see, it\nactually looks very similar\n\nto how UIViews are implemented.\n\nIf you actually look at the\ncode below and execute that,\n\nyou'll get, just like UIView,\na red square on the screen.\n\nJust as an example of one\nof the more well-known\n\nproperties of CALayer is you can just\n\nhit this cornerRadius\nproperty and get this\n\nreally nice rounded edge\neffect straight away.\n\nWhere does this fit into UIkit?\n\nWell as it turns out,\neverything you see when you look\n\nat a UIView is not actually\nbeing done on the UIView level,\n\nbut is actually being\ndone by a backing layer\n\nattached to that view.\n\nEverything you can actually\nsee is being done by a CALayer.\n\nWhile the layer's providing\nthe visual content,\n\non the UIkit level, UIView itself is\n\nproviding a lot of other things,\n\nsuch as the order layout functionality,\n\ntouch recognition, guest recognizers.\n\nAll that stuff is introduced\non top of the layout\n\nthrough UIkit.\n\nCALayer and UIView are\nvery tightly integrated\n\nand, a lot of the times,\nwhen you're interacting\n\nwith the UIView, you're\nimplicitly affecting\n\nthe properties of the layout underneath.\n\nFor example, when you change\nthe frame property on a view,\n\nyou're actually manipulating the bounds\n\nand the center properties\non the layer underneath,\n\nwhich are then implicitly returned back\n\nas the frame property of the view.\n\nWhile I don't expect the\nactual implementation\n\nof UIView to look like this,\nI would not be surprised\n\nif a lot of the UIView level properties\n\nare actually just simple\naccess overrides that are\n\nmanipulating the properties\nfor the layer underneath.\n\nBut with that being\nthe case, why is UIView\n\njust not a subclass of CALayer?\n\nWhy is the layer being\nexposed to a property\n\non UIView instead?\n\nIt turns out there's a very\ninteresting reason for that.\n\nApart from CALayer itself,\n\nApple also provides a lot of subclasses,\n\nsuch as tile layers and gradient layers.\n\nThe cool thing about\nthis is you can actually\n\ninsert them into a UIView\nsubclass by swapping out\n\nwhich type of layer is\nexposed by that property.\n\nAs such, this is a model that wouldn't\n\nactually have been possible if UIView\n\nwas just simply a subclass of CALayer.\n\nLet's say you wanted to\nmake a UIView subclass\n\nthat just displayed a dynamic gradient.\n\nWell, it's very easy to do if you just\n\noverride the layerClass\nproperty of the view\n\nand just specify a\nCAGradientLayer instead.\n\nOkay, so mapping contents to a CALayer.\n\nYou saw in my previous example,\n\nit's very easy to create\na red quad on the screen,\n\nbut that's pretty boring.\n\nInstead, it's possible to\nmap a bitmap to a layer\n\nby accessing the contents property,\n\nlike in this code example.\n\nThis is very similar to a UIImage view.\n\nAs a practical example, we\ncan take the try Swift logo\n\nwe generated with Core Graphics earlier,\n\nexport that as a UIImage,\nconvert that to a CGImage,\n\nand then directly apply that to\n\nthe contents property of the layer.\n\nAnother cool thing is the\ncontents property is animatable,\n\nwhich can have some really cool effects.\n\nI'll talk about this in a little bit.\n\nOnce you've done this with a CALayer,\n\nwell basically, it's\npossible to configure a layer\n\nto change how the bitmap\nis rendered depending on\n\nthe size of the frame of the layer itself.\n\nBecause of this, you can do\nsome pretty cool effects.\n\nLet me show you.\n\nThis property is called\ncontentsGravity and it behaves\n\npretty similar to content\nmode on the UIView level.\n\nThe default value is\nresize, in which whatever\n\nsize the frame is, the image\nis distorted and squished\n\nto match exactly the same size.\n\nWhen you change the setting\nto resize aspect fill,\n\nthe aspect ratio of the\nimage stays the same,\n\nbut it's scaled up to\nfill all of the layer\n\nand anything outside of the\nregion is just disregarded.\n\nChanging the setting to resize aspect\n\nwill make sure the image stays\nat its normal aspect ratio\n\nand all of it is visible\nwithin the bounds of the frame\n\nregardless of the size.\n\nWhen it's set to center, the\nimage is not resized at all\n\nand just placed in the middle of the frame\n\nregardless of its size.\n\nWith this sort of capability,\n\nwhat kind of effects is possible in iOS?\n\nFor example, one of my\nfavorite apps, Tweetbot,\n\nactually uses this functionality\nin a really cool way.\n\nThis is basically what becomes possible.\n\nAs the content scrolls,\nthe image in the background\n\ngets larger the further\nthe scroll goes down.\n\nWhat's particular about this\neffect is that the width\n\nof the frame doesn't\nchange, only the height.\n\nAs the frame gets bigger,\nthe aspect fill capability\n\nof the layer increases the image\n\nto fit at the same aspect ratio.\n\nFor another example, I\nfound a really cool way\n\nto leverage this capability of CALayers\n\nin my own app, iComics.\n\nWhen iOS 7 came out,\nthere was a huge shift\n\nin the design of iOS apps\nto be a lot more minimal.\n\nBecause of that, I wanted the\nslider graphics in my own app\n\nto be transparent and the background\n\nto still be poking through from behind.\n\nThe challenge here was\nthere was two elements\n\nthat needed to work together.\n\nThere was the background layer\n\nthat had the page numbers in it\n\nand then there was a\ntransparent handle button\n\nthat the user actually manipulated.\n\nThe problem was, how do\nyou clip out the portion\n\nof the numbers layer directly\nbehind the sliding button?\n\nThe solution turned out to be very easy.\n\nYou render one instance\nof the numbers graphic\n\nand then you apply it\nto two separate layers\n\non either side of the button.\n\nIf you set the contents\ngravity of the lefthand layer\n\nto left and the righthand one to right,\n\nwhen you manipulate their frames\n\naround the sliding button,\nit gives the illusion\n\nthat they're not actually\nchanging any position.\n\nAs a result, that visual\neffect becomes possible.\n\nBecause this method\nentirely leverages the GPU,\n\nit's incredibly performant.\n\nThere are certainly\nother ways you could have\n\ngone about doing this.\n\nFor example, using a masking layer\n\nor even just doing it in Core Graphics.\n\nBut because both of them\nwould have leveraged the CPU,\n\nit would have been a lot slower.\n\nMoving on, Core Animation\nalso exposes settings\n\nthat lets you configure which resizing\n\nresampling algorithms the GPU uses.\n\nWhenever you change the size of a layer\n\nand the size no longer\nmatches the original size\n\nof the bitmap mapped to it,\nthen some kind of resampling\n\nneeds to be done to make\nsure it doesn't look jagged\n\nor distorted.\n\nBy default, the sampling\nmode that Core Animation uses\n\nis called bilinear filtering\nand that's just a simple\n\nlinear interpolation between two pixels.\n\nBut sometimes, even bilinear\nfiltering is too slow\n\nand if you're rapidly resizing\na frame during animation,\n\nyou might actually get some stuttering.\n\nIn cases where you are actually\nchanging a frame rapidly,\n\nit might be best to\nset it back to nearest.\n\nNearest mode completely\ndisables pixel resampling.\n\nIn cases where you've made a\nlayer very big or very small,\n\nit's very obvious that\nthere's no sampling applied\n\nand it will look quite jaggy.\n\nBut in cases where the\nanimation's happening so fast\n\nyou might not even notice,\nthen it's actually very good\n\nfor getting better performance.\n\nThe final mode is called\ntrilinear filtering,\n\nwhere the GPU will\ngenerate differently sized\n\nversions of the same bitmap,\nand then blend them together\n\nto create a proper resizing\nof the texture in question.\n\nThis can result in\nslowdowns because there is\n\na CPU element involved, so\nit depends on your needs,\n\nbut at the same time, you can get superior\n\nresampling quality by doing it this way.\n\nA really good example of\nwhere nearest filtering\n\ncan become useful is actually in iOS's\n\nopen and close animation for apps.\n\nWhen an app closes, not only\nis it rescaling very quickly,\n\nbut it's also cross-fading\nback to the original icon.\n\nThis combination can actually cause\n\na lot of FPS stuttering on older devices.\n\nThat being said, while the\nanimation happens really quickly,\n\nthis means you can use nearest filtering\n\nand it's not actually\nvery visible to the user.\n\nOkay, let's talk about the\nmasking capability of CALayer.\n\nThe basic principle behind\nthis is by taking a layer\n\nand setting it as the mask\nproperty of another layer,\n\nyou can actually get this sort of effect.\n\nA layer will be clipped by this mask,\n\nbut it will still be\ncompletely functional,\n\ninteractive, and animatable.\n\nFor an example where I actually\nfound this very useful,\n\nI'll go back to my app,\niComics, for a second.\n\nI wanted to make sort of a tutorial view\n\nthat explained what a setting\nactually did in the app.\n\nI used PaintCode to\ngenerate a series of images\n\nand then finally an alpha channel mask\n\nI could use to composite\nthese images together.\n\nThus this kind of effect becomes possible.\n\nThe cool thing about this kind of effect\n\nis it does not matter\nwhat color the background\n\nor what pattern the\nbackground is at the end.\n\nIt will work on any background\nand even while scrolling,\n\nso it's a very dynamic\nand useful sort of effect.\n\nBeyond that, another common effect in iOS,\n\nnot so much now with seven,\nbut still quite prevalent,\n\nis the use of shadows.\n\nNormally what would be a\nlong and arduous process,\n\nCore Animation makes it\nvery easy to generate\n\ndynamic shadows and attach\nthem to any shape you want.\n\nNow, while the following code\nwill indeed render a shadow,\n\nbecause the system has to\ndo a per pixel comparison\n\nto work out the size of the shadow,\n\nit'll turn out to be incredibly slow\n\nin terms of rendering and animation.\n\nAs a result, whenever\nyou're working with shadows\n\nin Core Animation, you\nshould always make sure\n\nto set the shadowPath property as well.\n\nThis property will tell\nCore Animation in advance\n\nwhat the shape of the shadow will be,\n\nand as a result, will\ngreatly reduce render time.\n\nAll right.\n\nCore Animation also provides a\n\ntransform property on CALayer.\n\nUnlike the transform property on UIView,\n\nwhich is purely 2D, the one on CALayer\n\nactually provides pure 3D,\nproper 3D transformations.\n\nFor example, applying this\nsort of transformation\n\nresults in this sort of shape.\n\nWhile the design paradigm for iOS 7\n\nis ostensibly a very\nflat and minimal design,\n\nthere are still instances in the system\n\nwhere 3D transformations are used.\n\nProbably the most famous example\n\nof a third party application\nusing this sort of effect\n\nis the app Flipboard.\n\nFlipboard uses 3D\ntransformations to create\n\na page-turning effect whenever you're\n\ntransitioning between articles in its app.\n\nWhile that's not possible\nin the UIView level,\n\nit's very easy to do on\nthe Core Animation level.\n\nThe next thing I'm going to show you\n\nis a pretty cool thing in Core Animation,\n\nbut it uses some private system APIs.\n\nWhile I can't officially recommend this,\n\nit's still really cool to check out.\n\nThat being said, it would\nbe very easy to obfuscate,\n\nso if you want to consider\nit for an official app,\n\nit's definitely a possibility.\n\nWhat I'm talking about here is the ability\n\nto add blending modes to CALayers.\n\nFor example, if you have\ntwo layers like this,\n\nand you set the top one\nto be screen blend mode,\n\nyou'll get this sort of\neffect where the top layer\n\nis being additively blended\non the one below it.\n\nThe reason I found out\nabout this was one day\n\nI got really curious and\ndecided to reverse engineer\n\nthe slide to unlock UIView inside iOS.\n\nAs you can see, it's not\njust a simple gradient,\n\nas most people would assume.\n\nThere's actually a very\ninteresting subtle sort of\n\nfractal shimmering effect inside it.\n\nThe way I've done it,\nit's how many layers?\n\nOne, two, three, four,\n\nokay, five layers.\n\nYeah, that's how they do it.\n\nThe top layer is a mask-blending layer\n\nthat clips everything\nto its alpha channel.\n\nThe next layer is a flat\nbase color that serves\n\nas the background of the effect.\n\nThe next three layers are gradient layers\n\nthat create a wedge shape highlight sheen,\n\nas well as a highlight color.\n\nThe final layer is the most complicated.\n\nIt is an outline of the\ntext that's been stroked,\n\nand dashed, and then\nblurred, and then overlayed\n\nto create that shimmering effect\n\nwhen blended with the gradients.\n\nI've also published this code on GitHub,\n\nso if you're interested in\nchecking out how it works\n\nin more detail, please\ngo and check it out.\n\nWhen I was introspecting the\nofficial slide to unlock view,\n\none app that was really\nhandy is called Reveal app.\n\nReveal is a debugging tool that lets you\n\ninspect the views of\nyour app from the device\n\non your mac as it's executing.\n\nThis is extremely valuable\nif you're developing an app\n\nwith a complex UI and you\nneed to debug it in real time.\n\nI couldn't have done this\nintrospection without it,\n\nso I totally recommend you check it out.\n\nAll right, I better pick up the pace\n\nfrom this point onwards.\n\nIn this section, I'll\ntalk about how to actually\n\nimplement animations in Core Animation,\n\nand how it actually compares to the UIView\n\nanimation APIs in the UIkit level.\n\nI'll start with how you\nactually go about implementing\n\nanimations on the UIkit\nlevel and then show you\n\nhow to drop down to the\nCore Animation level.\n\nOn the UIkit level, creating\nan animation is easy,\n\ntrivial even.\n\nAll it takes is one method\ncall and you supply a closure\n\nthat modifies the properties\nyou want to animate\n\nand optionally supply a second closure\n\nthat executes once the\nanimation is finished.\n\nBy comparison, Core Animation\nis actually somewhat trickier,\n\nwith more code required\nand a lot more management.\n\nCompared to the previous UIkit example,\n\nto create a similar\neffect in Core Animation,\n\nyou need to create a\nCABasicAnimation object\n\nand then fill that with all\nthe necessary parameters.\n\nOnce the object is\ncreated, you then add it\n\nto the layer object to\nactually start the animation.\n\nWhen you create an animation in UIkit,\n\nthis is actually what's\nhappening in the background.\n\nMatter of fact, you can\nactually access these animations\n\nfrom the animationsKeys\nproperty of the layer.\n\nOne of the major advantages\nof creating animations\n\nat the Core Animation level\nis that you can actually\n\ncreate custom timing\nfunctions to exactly control\n\nhow an animation progresses over time.\n\nA really good resource\nfor this is a webite\n\ncalled CubicBezier.com.\n\nThis website lets you directly manipulate\n\nan animation timing function\nand then provides you\n\nwith the floating point\nvalues that you can then\n\ncopy straight to Core Animation.\n\nThis lets you manipulate\nthe speed over time\n\nin which an animation\noccurs at an extremely\n\nhigh level of precision.\n\nIt looks sort of like that.\n\nAs I mentioned earlier,\nthis is how you can animate\n\nthe contents property of a CALayer.\n\nThis is something i really, really like.\n\nNormally, if you had one image\n\nand you wanted it to\ncrossfade to another image,\n\nnormally what you would\ndo is you would create\n\ntwo views and you'd animate\nthe respective crossfade,\n\none from 100% alpha to zero,\n\nand the other from zero alpha to 100.\n\nThe problem with doing it this way is that\n\nwhen both layers hit 50% opacity,\nthere'll be a brief moment\n\nwhere you can see through both of them.\n\nThat creates a dimming\neffect that's very easy\n\nto pick up to the human eye.\n\nSubsequently, if you just\nanimate the contents property\n\nof a CALayer, you actually\nget a proper crossfade effect\n\nwithout that dimming artifact.\n\nAnd you get an effect like this.\n\nThis is actually really useful\nfor animations where both\n\nimages have transparency,\nbecause the dimming effect\n\nis actually more pronounced in that case.\n\nThis visual style is\nactually a bit more iOS 7.\n\nIt's since changed in iOS 8.\n\nNow it looks a bit out of date.\n\nBeyond CA basic animation,\nthere's another property\n\ncalled CAKeyframeAnimation.\n\nCAKeyframeAnimation is\na rather powerful class\n\nbecause you can chain up\nmultiple animation points\n\nwithin one object, but not just that.\n\nEach keyframe point can actually have\n\na CG path object assigned to it as well,\n\nwhich actually lets you create animations\n\nthat aren't just linear,\npoint-to-point transitions,\n\nbut actual proper curves.\n\nNext up, while in the\nUIkit level, you could add\n\nmultiple animations within\none object, in Core Animation,\n\nyou must make multiple CA\nbasic animation objects.\n\nIf that's the case, you can\ncreate your animation objects\n\nand then add them to a CA\nanimation group object,\n\nwhich then controls the timing.\n\nThis makes controlling\nanimation a bit more efficient.\n\nFinally, on a similar\nnote to UIkit animations,\n\nyou consider a completion\nclosure that executes\n\nonce the animation has finished.\n\nAs you can see, there's a lot of code\n\nthat needs to be written if you want\n\nto write animations at\nthe Core Animation level.\n\nOn that note, just like\nPaintCode, there's another app\n\nI like to recommend called Core Animator.\n\nCore Animator works similar\nto PaintCode where you\n\nactually create the\nanimations in the app itself\n\nand then it generates the\nrelevant Core Animation code\n\nthat you can then copy to your app.\n\nAs such, I definitely\nrecommend you check it out.\n\nIt will probably save you a\nlot of time in the long run.\n\nAlrighty, finally I talk\nabout some CLS subclasses\n\nand what sort of features they enable.\n\nIn iOS, Apple provides to us\na variety of CLS subclasses\n\nthat provide many different\ntypes of features.\n\nSome of these subclasses\nalso rely on the CPU\n\nfor the operations which they perform,\n\nso it may be necessary to even\ntest these on certain devices\n\nto make sure they fill\nyour specific needs.\n\nTo insert a CLS subclass into a UIView,\n\nall you need to do is subclass the UIView,\n\nand then override its\nlayer class property.\n\nThe first one is tile layers.\n\nTile layers are a staple of\nvector-based drawing on iOS.\n\nThey automatically manage\na grid of tile regions\n\nand manage the asynchronous\ndrawing of content\n\nto those regions via Core Graphics.\n\nWhen placed in a zooming scroll view,\n\nthey can be configured\nto redraw the content\n\nat a much bigger resolution\nwhen they're being zoomed in.\n\nThis is incredibly useful\nfor rendering content\n\nthat can be rendered at\nany resolution dynamically.\n\nFor example, text in a pdf file\n\nor topology information\nin a mapping application.\n\nThe next type of subclass\nis a CA gradient layer.\n\nThis is a very simple layer\nin the fact that all it takes\n\nis a series of points and colors\n\nto produce a dynamic gradient effect.\n\nThe gradient is produced on the GPU\n\nand so it's incredibly fast.\n\nIt's used quite often on other layers\n\nthat have been 3D transformed\nin order to add more\n\nperception of depth to their effect.\n\nThe next CLS subclass is\none that's reminiscent of a\n\nthumbnail tiling effect that\nwas in the iOS 7 music app.\n\nCalled CAReplicaterLayer,\nit allows you to specify\n\njust one layer and have the one duplicated\n\nmultiple times over on the GPU.\n\nThe copies can then be tweaked.\n\nFor example, changing their\ncolor or their position\n\nto create some very amazing effects.\n\nBecause it's all done on the GPU,\n\nit's much faster than if you tried to do\n\nthis system manually yourself.\n\nThe next example is one I highlighted\n\nin the slide to unlock example.\n\nCalled CAShapeLayer,\nit allows you to insert\n\na CG path property and then customize that\n\nvisually any way you want.\n\nFor example, it's very\neasy to create a circle\n\nthat you can either completely\nfill or just add a stroke to.\n\nThis layer is very useful for\ndynamically creating effects\n\nthat line up with the\niOS 7's design style,\n\nsuch as loading spinners and buttons.\n\nI recommend you check it\nout and also check out\n\nsome of the libraries that people have\n\nalready built around it on GitHub.\n\nThe one there, UA progress view,\n\nis one I definitely recommend.\n\nAs seen in the Disney app earlier,\n\nthis sort of layer actually\nserves as a particle emitter,\n\nwhich emits other layers\nthat are configured\n\nto animate in a specific way.\n\nI'm not sure why this effect is around,\n\nbut I get the feeling it\nwas probably for OS10,\n\nwhere there are certain particle effects\n\nwhen you perform actions in the dock,\n\nsuch as dragging an icon out.\n\nBut you could certainly\nadd these kinds of effects\n\nto your own app if you want\nsome kind of magical touch\n\nor some kind of wacky sort of transitions.\n\nIf you're actually looking at working with\n\na CA middle layer, I\ndefinitely recommend the app\n\nParticle Playground as well.\n\nAvailable in the Mac App\nStore, it lets you configure\n\nyour particle settings\nwith a visual previewer,\n\nand then export the lot as a class that\n\nyou can then copy straight into your app.\n\nFinally, there's a few more other classes\n\nthat are available, but I haven't actually\n\ntried them myself, and I get\nthe feeling that most of them\n\naren't actually appropriate\nfor iOS as well,\n\nleaning more towards OS10 capabilities.\n\nThere's a CATextLayer\nthat behaves very similar\n\nto UILabel, except it\nrenders text at the top\n\nof the frame instead of in the middle.\n\nThat being said, because\nwe have UILabel available\n\nin iOS and they have\nthings like order layout,\n\nI recommend you use them whenever you can.\n\nThe next one, CSScrollLayer, is probably\n\nmore oriented towards OS10 because we have\n\nUIScrollView on iOS,\nbut it's the same kind\n\nof functionality where you can scroll\n\nlarge amounts of content.\n\nUnlike the transform property\nwe talked about earlier,\n\nwe manipulated a layer in 2D space,\n\nCATransformLayer lets you\nactually manipulate a layer\n\ncompletely in 3D space and create effects\n\neven such as spinning cubes and the likes.\n\nA good example of this might be\n\nthe old iBooks store animation in iOS 5.\n\nFinally, there are two\ntypes of layers that are\n\nvery low level GPU level layers.\n\nCalled CAEAGLayer and CAMetalLayer,\n\nthey both do the same thing.\n\nThey let you set up a rendering context\n\nin which you can actually\nperform low level\n\ngraphics rendering.\n\nThis is the sort of layer you\nuse when you're making a game\n\nand you actually want\ndirect access to the GPU\n\nto write your own rendering code\n\nand completely bypass Core Animation.\n\nOkay, finally, my main\nrecommendation out of all this\n\nis that you should try and\nwork on the UIView level first\n\nand when you hit an\ninstance where you can't\n\nget the proper control\nyou want, then to drop\n\ndown to the Core Animation level.\n\nMy opinion of this sort of development is,\n\nas long as you understand how UIViews work\n\nand how Core Animation\nworks, even if you have to\n\nmake compromises here and there,\n\nthere should be very few\ntimes where you're actually\n\nsacrificing proper 60 frames per second\n\nfor the animation you want.\n\nWhile Core Animation\noffers a lot more control\n\nand a lot more functionality,\nit's also a lot more code\n\nthat needs to be written and maintained.\n\nI always recommend you\ntry and achieve the effect\n\nyou want first in UIkit and then drop down\n\nto Core Animation when necessary.\n\nFinally, let's all aim to\nmake amazing, beautiful apps.\n\nThanks for listening!\n\n(applause)","description":"a Conference Videos video"}</script><style id="wistia_95_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_25 ::cue {
        visibility: hidden;
      }
      #wistia_chrome_25 ::-webkit-media-text-track-container {
        visibility: hidden;
      }
      #wistia_chrome_25 ::-webkit-media-text-track-background {
        visibility: hidden;
      }
      #wistia_chrome_25 ::-webkit-media-text-track-display {
        visibility: hidden;
      }
    </style><script type="text/javascript" src="./Advanced Graphics with Core Animation_files/analytics"></script><script type="text/javascript" src="./Advanced Graphics with Core Animation_files/analytics(1)"></script></head>
<body class="posts tryswift-tim-oliver-advanced-graphics-with-core-animation  nav_transparent  video embed post chrome desktop banner-open nav-down">
<nav class="navbar navbar-default js-navbar transparent nav-down" role="navigation" id="header">

<div class="row top-banner js-top-banner">
<span class="col-xs-12 text-center success">
Success!
</span>
</div>
<div class="row">
<div class="col-xs-12">
<div class="navbar-header">
<button type="button" class="navbar-toggle collapsed visible-xs" data-toggle="modal" data-target="#mobileModal">
<span>Menu</span>
</button>
<a class="navbar-brand" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;navbar-home&#39;, &#39;Nav&#39;);" href="http://realm.io/"><img class="logo" src="./Advanced Graphics with Core Animation_files/general_logo_white-3648e786a2551cc3b38a130bab48f3f447315c8051c331f09fe9877b233f4181.svg" alt="General logo white"></a>
</div>
<div class="navbar-collapse collapse no-transition pull-right">
<ul class="nav nav-pills flex">
<li id="nav-products">
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#" class="dropdown-toggle nav-products" data-toggle="dropdown">
Products
<span class="caret"></span>
</a>
<ul class="dropdown-menu" role="menu">
<li>
<a href="https://realm.io/products/realm-platform">
Platform
</a>
</li>
<li>
<a href="https://realm.io/products/realm-database">
Database
</a>
</li>
</ul>
</li>
<li id="nav-developers">
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#" class="dropdown-toggle nav-solutions" data-toggle="dropdown">
Developers
<span class="caret"></span>
</a>
<ul class="dropdown-menu" role="menu">
<li>
<a class="nav-forums" href="https://forums.realm.io/">
Forums
</a>
</li>
<li id="nav-academy">
<a class="nav-academy" href="https://academy.realm.io/">
Academy
</a>
</li>
<div class="header">
Docs
</div>
<li>
<a href="https://docs.realm.io/platform/">
Platform
</a>
</li>
<li>
<a href="https://realm.io/docs">
Database
</a>
</li>
</ul>
</li>
<li id="nav-pricing">
<a class="nav-pricing" href="https://realm.io/pricing">
Pricing
</a>
</li>
<li id="nav-support">
<a class="nav-support" href="https://realm.io/support">
Support
</a>
</li>
<li id="nav-company">
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#" class="dropdown-toggle nav-solutions" data-toggle="dropdown">
Company
<span class="caret"></span>
</a>
<ul class="dropdown-menu" role="menu">
<li id="nav-blog">
<a class="nav-blog" href="https://realm.io/blog/">
Blog
</a>
</li>
<li>
<a class="nav-press" href="https://academy.realm.io/press">
Press
</a>
</li>
<li>
<a class="nav-jobs" href="https://academy.realm.io/jobs">
Jobs
</a>
</li>
<li>
<a class="nav-about" href="https://academy.realm.io/about">
About
 </a>
</li>
</ul>
</li>
<li id="nav-language">
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#" class="dropdown-toggle locale-picker" data-toggle="dropdown">
<i class="fa fa-globe"></i>
<span class="caret"></span>
</a>
<ul class="dropdown-menu dropdown-menu-right" role="menu">
<li>
<a class="nav-language" href="https://academy.realm.io/jp/">日本語</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/cn/">中文</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/kr/">한국어</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/">English</a>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
</nav>

<div class="nav modal fullscreen fadeInUp" id="mobileModal" tabindex="-1" role="dialog" aria-labelledby="MobileMenu" aria-hidden="true">
<div class="modal-dialog">
<div class="modal-content">
<div class="modal-header flex" style="border:0;">
<h3 class="modal-title col-xs-10">
<a class="navbar-brand" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;navbar-home&#39;, &#39;Nav&#39;);" href="http://realm.io/"><img class="logo" src="./Advanced Graphics with Core Animation_files/general_logo_white-3648e786a2551cc3b38a130bab48f3f447315c8051c331f09fe9877b233f4181.svg" alt="General logo white"></a>
<span class="sr-only">main navigation</span>
</h3>
<button type="button" class="close btn btn-link col-xs-2" data-dismiss="modal" aria-hidden="true"><i class="fa fa-close fa-lg" style="color:#fff;"></i></button>
</div>
&lt; <h4 class="sub">Products</h4>
<ul>
<li>
<a class="nav-products" href="https://realm.io/products/realm-platform">Platform</a>
</li>
<li>
<a class="nav-products" href="https://realm.io/products/realm-database">Database</a>
</li>
<li><a class="nav-products" href="https://realm.io/products/realm-studio">Realm Studio</a></li>
</ul>
<a class="nav-pricing" href="https://realm.io/pricing">
<h4>Pricing</h4>
</a>
<a href="https://realm.io/docs/">
<h4 class="sub">Docs</h4>
</a>
<ul>
<li><a class="nac-docs" href="https://docs.realm.io/platform/">Database</a></li>
<li>
<a class="nac-docs" href="https://realm.io/docs/java/latest">Java</a>
</li>
<li>
<a class="nac-docs" href="https://realm.io/docs/objc/latest">Objective‑C</a>
</li>
<li>
<a class="nac-docs" href="https://realm.io/docs/javascript/latest">JavaScript</a>
</li>
<li>
<a class="nac-docs" href="https://realm.io/docs/swift/latest">Swift</a>
</li>
<li>
<a class="nac-docs" href="https://realm.io/docs/dotnet/latest">.NET</a>
</li>
</ul>
<h4 class="sub">Support</h4>
<ul>
<li>
<a href="https://realm.io/support">Overview</a>
</li>
<li>
<a class="nav-forums" href="https://forums.realm.io/">Forums</a>
</li>
</ul>
<h4 class="sub">Language</h4>
<ul>
<li>
<a class="nav-language" href="https://academy.realm.io/jp/">日本語</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/cn/">中文</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/kr/">한국어</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/">English</a>
</li>
</ul>
<a class="nav-blog" href="https://realm.io/blog/">
<h4>Blog</h4>
</a>
<a class="nav-academy" href="https://academy.realm.io/">
<h4>Academy</h4>
</a>
<a href="https://realm.io/trial/self-hosted-standard-plan" class="navbar-trial-btn btn btn-indigo col-xs-12">Free Trial
<svg width="13px" height="13px" viewBox="0 0 13 13" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="iconmonstr-download-11"></g>
<path d="M13,6.5 C13,2.910375 10.089625,0 6.5,0 C2.910375,0 0,2.910375 0,6.5 C0,10.089625 2.910375,13 6.5,13 C10.089625,13 13,10.089625 13,6.5 Z M3,6.76923077 L5.33333333,6.76923077 L5.33333333,3 L7.66666667,3 L7.66666667,6.76923077 L10,6.76923077 L6.5,10 L3,6.76923077 Z" id="download" fill="#FFFFFF" fill-rule="nonzero"></path>
</g>
</svg>
</a>
</div>
</div>
</div>

<nav class="navtop navbar navbar-default js-navbar white  blur-when-playing nav-down hideBar" role="navigation" id="header" style="display: none;">
<div class="row banner alert-banner js-banner js-top-banner js-starting-banner" data-position="0" data-id="RealmPlatformdeplo" data-location="any" data-page="any" data-url="https://cloud.realm.io/" data-text="Realm Platform deployment in minutes with Cloud - Register for the Beta" style="display: block;">
<a href="https://cloud.realm.io/" class="when col-xs-12 js-banner-text-container text-center" style="min-height: 0px;">
<span class="js-banner-text">Realm Platform deployment in minutes with Cloud - Register for the Beta</span>
</a>
<span class="top-bar-close js-top-bar-close">
<img alt="close" src="./Advanced Graphics with Core Animation_files/close-icon-6da828ff8f21bfdf2e017f29ebf60cea2ed0496364986d708039e8119835f503.svg">
</span>
</div>
<div class="row">
<div class="col-xs-12">
<div class="navbar-header">
<button type="button" class="navbar-toggle collapsed visible-xs" data-toggle="modal" data-target="#mobileModal">
<span>Menu</span>
</button>
<a class="navbar-brand" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;navbar-home&#39;, &#39;Nav&#39;);" href="http://realm.io/"><img class="logo" src="./Advanced Graphics with Core Animation_files/general_logo-5f99c66de6b61768f9826d1427259a11a6d4be571456681cdaea5ec944142f1e.svg" alt="General logo"></a>
</div>
<div class="navbar-collapse collapse no-transition pull-right">
<ul class="nav nav-pills flex">
<li id="nav-products">
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#" class="dropdown-toggle nav-products" data-toggle="dropdown">Products
<span class="caret"></span>
</a>
<ul class="dropdown-menu" role="menu">
<li>
<a href="https://realm.io/products/realm-platform">Platform</a>
</li>
<li>
<a href="https://realm.io/products/realm-database">Database</a>
</li>
</ul>
</li>
<li id="nav-developers">
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#" class="dropdown-toggle nav-solutions" data-toggle="dropdown">Developers
<span class="caret"></span>
</a>
<ul class="dropdown-menu" role="menu">
<li>
<a class="nav-forums" href="https://forums.realm.io/">Forums</a>
</li>
<li id="nav-academy">
<a class="nav-academy" href="https://academy.realm.io/">Academy</a>
</li>
<div class="header">Docs</div>
<li>
<a href="https://docs.realm.io/platform/">Platform</a>
</li>
<li>
<a href="https://realm.io/docs">Database</a>
</li>
</ul>
</li>
<li id="nav-pricing">
<a class="nav-pricing" href="https://realm.io/pricing">Pricing</a>
</li>
<li id="nav-support">
<a class="nav-support" href="https://realm.io/support">Support</a>
</li>
<li id="nav-company">
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#" class="dropdown-toggle nav-solutions" data-toggle="dropdown">Company
<span class="caret"></span>
</a>
<ul class="dropdown-menu" role="menu">
<li id="nav-blog">
<a class="nav-blog" href="https://realm.io/blog/">Blog</a>
</li>
<li>
<a class="nav-press" href="https://academy.realm.io/press">Press</a>
</li>
<li>
<a class="nav-jobs" href="https://academy.realm.io/jobs">Jobs</a>
</li>
<li>
<a class="nav-about" href="https://academy.realm.io/about">About</a>
</li>
</ul>
</li>
<li id="nav-language">
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#" class="dropdown-toggle locale-picker" data-toggle="dropdown">
<i class="fa fa-globe"></i>
<span class="caret"></span>
</a>
<ul class="dropdown-menu dropdown-menu-right" role="menu">
<li>
<a class="nav-language" href="https://academy.realm.io/jp/">日本語</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/cn/">中文</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/kr/">한국어</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/">English</a>
</li>
</ul>
</li>
<a href="https://realm.io/trial/self-hosted-standard-plan" class="navbar-trial-btn btn btn-indigo">Free Trial
<svg width="13px" height="13px" viewBox="0 0 13 13" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="iconmonstr-download-11"></g>
<path d="M13,6.5 C13,2.910375 10.089625,0 6.5,0 C2.910375,0 0,2.910375 0,6.5 C0,10.089625 2.910375,13 6.5,13 C10.089625,13 13,10.089625 13,6.5 Z M3,6.76923077 L5.33333333,6.76923077 L5.33333333,3 L7.66666667,3 L7.66666667,6.76923077 L10,6.76923077 L6.5,10 L3,6.76923077 Z" id="download" fill="#FFFFFF" fill-rule="nonzero"></path>
</g>
</svg>
</a>
</ul>
</div>
</div>
</div>
</nav>

<div class="nav modal fullscreen fadeInUp" id="mobileModal" tabindex="-1" role="dialog" aria-labelledby="MobileMenu" aria-hidden="true">
<div class="modal-dialog">
<div class="modal-content">
<div class="modal-header flex" style="border:0;">
<h3 class="modal-title col-xs-10">
<a class="navbar-brand" href="http://realm.io/"><img class="logo" src="./Advanced Graphics with Core Animation_files/general_logo_white-3648e786a2551cc3b38a130bab48f3f447315c8051c331f09fe9877b233f4181.svg" alt="General logo white"></a>
<span class="sr-only">main navigation</span>
</h3>
<button type="button" class="close btn btn-link col-xs-2" data-dismiss="modal" aria-hidden="true"><i class="fa fa-close fa-lg" style="color:#fff;"></i></button>
</div>
<div class="modal-body">
<h4 class="sub">Products</h4>
<ul>
<li>
<a class="nav-products" href="https://realm.io/products/realm-platform">Platform</a>
</li>
<li>
<a class="nav-products" href="https://realm.io/products/realm-database">Database</a>
</li>
 <li><a class="nav-products" href="https://realm.io/products/realm-studio">Realm Studio</a></li>
</ul>
<a class="nav-pricing" href="https://realm.io/pricing">
<h4>Pricing</h4>
</a>
<a href="https://realm.io/docs/">
<h4 class="sub">Docs</h4>
</a>
<ul>
<li><a class="nac-docs" href="https://docs.realm.io/platform/">Database</a></li>
<li>
<a class="nac-docs" href="https://realm.io/docs/java/latest">Java</a>
</li>
<li>
<a class="nac-docs" href="https://realm.io/docs/objc/latest">Objective‑C</a>
</li>
<li>
<a class="nac-docs" href="https://realm.io/docs/javascript/latest">JavaScript</a>
</li>
<li>
<a class="nac-docs" href="https://realm.io/docs/swift/latest">Swift</a>
</li>
<li>
<a class="nac-docs" href="https://realm.io/docs/dotnet/latest">.NET</a>
</li>
</ul>
<h4 class="sub">Support</h4>
<ul>
<li>
<a href="https://realm.io/support">Overview</a>
</li>
<li>
<a class="nav-forums" href="https://forums.realm.io/">Forums</a>
</li>
</ul>
<h4 class="sub">Language</h4>
<ul>
<li>
<a class="nav-language" href="https://academy.realm.io/jp/">日本語</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/cn/">中文</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/kr/">한국어</a>
</li>
<li>
<a class="nav-language" href="https://academy.realm.io/">English</a>
</li>
</ul>
<a class="nav-blog" href="https://realm.io/blog/">
<h4>Blog</h4>
</a>
<a class="nav-academy" href="https://academy.realm.io/">
<h4>Academy</h4>
</a>
<a href="https://realm.io/trial/self-hosted-standard-plan" class="navbar-trial-btn btn btn-indigo">Free Trial
<svg width="13px" height="13px" viewBox="0 0 13 13" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="iconmonstr-download-11"></g>
<path d="M13,6.5 C13,2.910375 10.089625,0 6.5,0 C2.910375,0 0,2.910375 0,6.5 C0,10.089625 2.910375,13 6.5,13 C10.089625,13 13,10.089625 13,6.5 Z M3,6.76923077 L5.33333333,6.76923077 L5.33333333,3 L7.66666667,3 L7.66666667,6.76923077 L10,6.76923077 L6.5,10 L3,6.76923077 Z" id="download" fill="#FFFFFF" fill-rule="nonzero"></path>
</g>
</svg>
</a>
</div>
</div>
</div>
</div>
<main id="main">
<div class="video-post blur-when-playing">
<div class="post-header flex center column" data-title="Watch">
<img class="header-bg" src="./Advanced Graphics with Core Animation_files/tryswift-tim-oliver-cover" alt="Tryswift tim oliver cover?fm=jpg&amp;fl=progressive&amp;q=75&amp;w=300">
<h3 class="title col-xs-12 col-sm-10">Advanced Graphics with Core Animation</h3>
<div class="centered meta post-date">
<div class="col-xs-12">
<span class="meta-info">
by
<a class="twitter-handle" href="https://twitter.com/timoliverau">Tim Oliver</a>
</span>
</div>
<span class="article-date">May 19 2016</span>
</div>
<button id="playVideo" class="play-button text-center affix-top" type="button" data-toggle="modal" data-target="#video-gallery" style="background-image: url(&#39;//images.ctfassets.net/s72atsk5w5jo/asset_603/d536a7543f49371481121dcc730a64f4/tryswift-tim-oliver-cover&#39;);" data-spy="affix" data-offset-top="250">
<div class="flex center">
<svg version="1.1" id="play" x="0px" y="0px" height="40px" width="40px" viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve">
<path class="icon" fill="white" d="M38,69c-1,0.5-1.8,0-1.8-1.1V32.1c0-1.1,0.8-1.6,1.8-1.1l34,18c1,0.5,1,1.4,0,1.9L38,69z"></path>
</svg>
<p>Play Video</p>
</div>
</button>
</div>
</div>
<div id="video_transcript_bar" class="blur-when-playing">
<ul id="video_transcript_bar_nav" role="tablist" class="col-xs-12">
<a class="button return-home flex center col-xs-6 col-sm-3 col-lg-2" href="https://academy.realm.io/">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="14px" height="24px" viewBox="0 0 14 24" version="1.1">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="charcoal-arrow" fill="#1D2340">
<path d="M1.07867176,12.0003116 C0.945846492,12.3572764 1.02042786,12.7746166 1.30582691,13.0600156 L10.9399844,22.6941731 C11.3292423,23.0834311 11.967481,23.0827839 12.3615338,22.6887311 L12.6887311,22.3615338 C13.0804816,21.9697833 13.0852204,21.3310316 12.6941731,20.9399844 L3.75418874,12 L12.6941731,3.06001565 C13.0834311,2.67075767 13.0827839,2.03251902 12.6887311,1.63846622 L12.3615338,1.3112689 C11.9697833,0.919518443 11.3310316,0.914779637 10.9399844,1.30582691 L1.30582691,10.9399844 C1.02122966,11.2245816 0.945055258,11.6422709 1.07867176,12.0003116 Z" id="Combined-Shape"></path>
</g>
</g>
</svg>
Return to Academy
</a>
<li class="active">
<a class="button transcript col-xs-6 col-sm-3 col-lg-2 flex center" aria-controls="transcript" role="tab" data-toggle="tab" href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#transcript">
<svg width="20px" height="24px" viewBox="0 0 20 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M9.362,2 C13.518,2 12,8 12,8 C12,8 18,6.35 18,10.457 L18,22 L2,22 L2,2 L9.362,2 Z M10.189,0 L0,0 L0,24 L20,24 L20,9.614 C20,7.223 13.352,0 10.189,0 Z M15,13 L5,13 L5,12 L15,12 L15,13 Z M15,15 L5,15 L5,16 L15,16 L15,15 Z M12,18 L5,18 L5,19 L12,19 L12,18 Z" id="Shape" fill="#1D2340"></path>
</g>
</svg>
<span class="translation_missing" title="translation missing: en.transcript-bar.transcript">Transcript</span>
</a>
</li>
<li>
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#about-the-author" class="button about-speaker col-xs-6 col-sm-3 col-lg-3 flex center" aria-controls="about" role="tab" data-toggle="tab">
<div class="author-image">
<img class="avatar" alt="Tim Oliver" src="./Advanced Graphics with Core Animation_files/timoliverau">
</div>
About the speaker
</a>
<div class="btn-group dropdown attribution-container col-xs-6 col-sm-3 col-lg-2">
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#" data-toggle="dropdown" class="about-speaker hidden-xs dropdown-toggle  button  flex center" aria-haspopup="true" aria-expanded="false">
<p>About the content</p><span class="caret"></span>
</a>
<ul class="dropdown-menu" role="menu">
<li><p>This talk was delivered live in March 2017 at <a href="https://www.tryswift.co/">try! Swift Tokyo</a>. The video was recorded, produced, and transcribed by Realm, and is published here with the permission of the conference organizers.</p>
</li>
</ul>
</div>
</li>
<div class="info col-xs-6 col-sm-12 col-lg-3 flex">
<div class="share-bar flex center col-xs-12">
<ul class="share-button-group flex col-xs-8">
<li class="twitter">
<a class="flex center" title="Twitter" target="_blank" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;share-bar-twitter&#39;, &#39;Share Bar&#39;);" href="https://twitter.com/intent/tweet?text=Advanced%20Graphics%20with%20Core%20Animation%20https%3A%2F%2Facademy.realm.io%2Fposts%2Ftryswift-tim-oliver-advanced-graphics-with-core-animation%2F%20via%20%40realm">
<i class="fa fa-twitter"></i>
</a>
</li><li class="facebook">
<a class="flex center" title="Facebook" target="_blank" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;share-bar-facebook&#39;, &#39;Share Bar&#39;);" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Facademy.realm.io%2Fposts%2Ftryswift-tim-oliver-advanced-graphics-with-core-animation%2F&amp;t=Advanced%20Graphics%20with%20Core%20Animation">
<i class="fa fa-facebook"></i>
</a>
</li><li class="linkedin">
<a class="flex center" title="LinkedIn" target="_blank" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;share-bar-linkedin&#39;, &#39;Share Bar&#39;);" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A%2F%2Facademy.realm.io%2Fposts%2Ftryswift-tim-oliver-advanced-graphics-with-core-animation%2F&amp;title=Advanced%20Graphics%20with%20Core%20Animation">
<i class="fa fa-linkedin"></i>
</a>
</li><li class="email">
<a class="flex center" title="Email this" target="_blank" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;share-bar-email&#39;, &#39;Share Bar&#39;);" href="mailto:?Subject=Advanced%20Graphics%20with%20Core%20Animation&amp;Body=https%3A%2F%2Facademy.realm.io%2Fposts%2Ftryswift-tim-oliver-advanced-graphics-with-core-animation%2F">
<i class="fa fa-envelope"></i>
</a>
</li>
</ul>
</div>
</div>
</ul>
</div>
<div class="container blur-when-playing">
<div class="row">
<div class="post">
<div class="col-xs-12 col-md-10 col-md-offset-1 content">
<div class="tab-content">
<div role="tabpanel" class="tab-pane fade in active" id="transcript">
<div class="js-content-container content">
<p>Animation is one of the cornerstones of the UI experience on iOS, and thanks to the animation APIs in UIKit, it is incredibly easy. However, by dropping down to Core Animation level, it is possible to create even more dynamic and impressive animations that can help make your app stand out. In this talk from <a href="http://www.tryswiftconf.com/en">try! Swift</a>, Tim Oliver explains the concepts of how Core Animation works in iOS, how to work with the API, as well as examples on what types of animations and effects it can enable in your app.</p>
<hr>
<h3 id="introduction-0000">Introduction <a href="javascript:presentz.changeChapter(0,0,true);">(00:00)</a>
</h3>
<p>Hi, I’m <a href="https://twitter.com/TimOliverAU">Tim Oliver</a>! In today’s post, I’d like to talk about advanced graphics with Core Animation.</p>
<p>Before we dive in, some notes:</p>
<p>As a a side project, I am working on a DRM-free comic reader app for iOS: <a href="http://icomics.co/">iComics</a>. The goal is to buy comics yourself off the internet, put them into your iOS device, and then you can read them anywhere. There are websites that serve to republish old comics that have lost their copyright status, as well as new sites (e.g. Humble Bundle and Image Comics). On the Japanese side, there is <a href="http://www.mangaz.com/">Mangatoshokan Z</a> where you can buy comics in a DRM-free format.</p>
<p><strong>It is challenging</strong>: when you have an app that relies on user input data, you usually cannot tell what format the entered data will come in. Sometimes it is small, but often it is big and needs to be treated before it can be effectively rendered on an iOS device. As a result, I have spent much time over the years playing with various techniques: image scaling, image rendering, and playing with Core Animation to get it to work.</p>
<p><strong>This is where I am coming from with my presentation today. I would like to show you everything I have learned from my experience.</strong></p>
<p><em>Note: I am happy to say that iComics uses Realm. Even though I work at the company, coming from a customer perspective, I recommend it.</em></p>
<h3 id="overview-0036">Overview <a href="javascript:presentz.changeChapter(0,1,true);">(00:36)</a>
</h3>
<ol>
<li>
<p>Introduction to Core Animation, and how it differs to UIKit. This will include CA layout object, and what effects you can apply to these layer objects to create new effects (not possible with UIKit).</p>
</li>
<li>
<p>APIs: what APIs are available, and what effects you can achieve.</p>
</li>
<li>
<p>CALayer subclass APIs, and GPU level effects.</p>
</li>
</ol>
<h3 id="what-is-core-animation-0416">What is Core Animation? <a href="javascript:presentz.changeChapter(0,7,true);">(04:16)</a>
</h3>
<p>Core Animation is one of my favorite frameworks in iOS. The API has not changed much between Objective-C and Swift, but it is the type of framework that many developers do not know about, as it is not necessary when you are developing apps. But, once you get to know how to use it, you can create great effects.</p>
<p>Core Animation was introduced in OS 10 as an optional component. You could opt in if you wanted that performance for your graphics. Whereas in iOS, it is one level lower than UIKit, but an integral part of the system.</p>
<p>It is the graphics rendering and animations system available in iOS, and it is deeply integrated with UIKit. Many properties in UIKit, especially in <code class="highlighter-rouge">UIView</code> objects, map directly to properties in Core Animation. The two are linked together: accessing a property in one would automatically update the property in the other one.</p>
<p>Core Animation is not executed on the CPU. Their commands are more offloaded to the GPU and used to create the graphics that are shown on the screen, powered by the GPU hardware.</p>
<p>I like to think of it as akin to game development. Back in the days when I did modding of game engines, the UI was the same hierarchy: you had a series of GPU-backed squares, quads, on the screen. That is, texture bit-mapped polygons, and you would manipulate them on the GPU level. In fact, <em>dare I say it</em>, if you have done low level graphics programming (e.g. game development or other types of technologies that you incorporate OpenGL), many of these properties in Core Animation will seem familiar. Hence, having an understanding there will make it easier to work with the graphics hardware.</p>
<p>But, is it possible to make a game on top of Core Animation? I found out that Disney does a few of their games on top of Core Animation. No game engine, no Unity, no Unreal. If you turn debugging mode on, you can even see the layer shapes and transformations happening in real time.</p>
<h3 id="why-is-it-good-to-know-about-core-animation-0700">Why is it Good to Know About Core Animation? <a href="javascript:presentz.changeChapter(0,11,true);">(07:00)</a>
</h3>
<p>This is not a fundamental framework you have to be aware of when you make apps. You can make functional and well-designed apps without needing it. However, knowing it helps you boost the quality of your apps, because you understand what is inherently happening in the back end, and how content is being drawn on the screen.</p>
<div class="sub-bar indigo col-xs-12">
<div class="contents col-xs-12 flex center">
<div class="info col-xs-12 col-sm-6 text-left">
<p class="subtext">Get more development news like this</p>
</div>
<div class="flex center col-xs-12 col-sm-6">

<form action="https://go.pardot.com/l/210132/2017-08-10/9dds2?success_location=https%3A%2F%2Facademy.realm.io%2Fposts%2Ftryswift-tim-oliver-advanced-graphics-with-core-animation%2F%3Fw%3D1" method="post" class="validate col-xs-12 col-sm-6">
<div class="input-group input-group-lg">
<input type="email" value="" name="email" required="" class="required email form-control home-newsletter-email-input" placeholder="Enter your email">
<span class="input-group-btn">
<button type="submit" name="subscribe" class="btn btn-primary btn-subscribe">Subscribe</button>
</span>
</div>
<div style="position: absolute; left: -5000px;"><input type="text" name="b_2aab5198c2f56be1004466570_0acdd1c8d5" value=""></div>
<div style="position:absolute; left:-9999px; top: -9999px;">
<label for="pardot_extra_field">Comments</label>
<input type="text" id="pardot_extra_field" name="pardot_extra_field">
</div>
</form>
</div>
</div>
</div>
<p>This can potentially be of great benefit when you are making UI layouts that are possibly more complex than normal. If you have many effects and layers blended over each other, the performance can drop heavily if you do not know what you are doing, or where the bottlenecks are. In this case, by learning more about how the system works, you can optimize your animations and your graphics to ensure that your apps run at 60 frames per second (FPS). Also, the amount of Core Animation’s functionality that is exposed to UIKit is limited. There is more you can do when you drop down to that level and start accessing the APIs yourself. It can help you make a polished app: one that performs smoothly, looks nice, and comes with effects that would not otherwise be in the native system implementation (which users ❤️).</p>
<h3 id="what-about-core-graphics-0805">What About Core Graphics? <a href="javascript:presentz.changeChapter(0,12,true);">(08:05)</a>
</h3>
<p>Core Animation is supposed to be the graphics system of the framework, but there is also Core Graphics.</p>
<p>Core Graphics is entirely done on the CPU, and cannot be performed on the GPU. Because it is an entirely CPU-bound operation, it is sometimes slower on older devices (e.g. the iPad 2 or the iPad 3rd Generation). This is something you need to keep in mind when using it in your apps. But, the good thing about Core Graphics is you can <strong>combine</strong> it with Core Animation.</p>
<p>You can use Core Graphics to create the actual bitmaps, and use Core Animation to display them to create some cool effects. A cool desktop app I recommend is <a href="http://www.paintcodeapp.com/">PaintCode</a>, which lets you import graphics, or even draw them freehand in the app itself, and it will create the code necessary to render that content in Core Graphics.</p>
<h3 id="so-core-animation-0933">So. Core Animation? <a href="javascript:presentz.changeChapter(0,16,true);">(09:33)</a>
</h3>
<p>It is comprised of a series of layout objects. The fundamental class that represents these layout objects is the <code class="highlighter-rouge">CALayer</code> class. It looks similar to how UIViews are implemented. If you look at the code below and execute it, you will get a red square on the screen. One of the well-known properties of <code class="highlighter-rouge">CALayer</code> is this <code class="highlighter-rouge">.cornerRadius</code> property to achieve a nice rounded edge effect.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="kd">import</span> <span class="kt">QuartzCore</span>

<span class="k">let</span> <span class="nv">newLayer</span> <span class="o">=</span> <span class="kt">CALayer</span><span class="p">()</span>
<span class="n">newLayer</span><span class="o">.</span><span class="n">frame</span> <span class="o">=</span> <span class="kt">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">100</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>
<span class="n">newLayer</span><span class="o">.</span><span class="n">backgroundColor</span> <span class="o">=</span> <span class="kt">UIColor</span><span class="o">.</span><span class="nf">redColor</span><span class="p">()</span><span class="o">.</span><span class="kt">CGColor</span>
<span class="n">newLayer</span><span class="o">.</span><span class="n">cornerRadius</span> <span class="o">=</span> <span class="mi">10</span>
</code></pre>
</div>
<h3 id="where-is-it-in-uikit-1009">Where is it in UIKit? <a href="javascript:presentz.changeChapter(0,18,true);">(10:09)</a>
</h3>
<p>Everything you see when you look at a <code class="highlighter-rouge">UIView</code> is not being done on the <code class="highlighter-rouge">UIView</code> level, but by a backing layer attached to that view.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="kt">UIView</span> <span class="p">{</span>
   <span class="kd">public</span> <span class="k">var</span> <span class="nv">layer</span><span class="p">:</span> <span class="kt">CALayer</span> <span class="p">{</span> <span class="k">get</span> <span class="p">}</span>
<span class="p">}</span>
</code></pre>
</div>
<p>Everything you see is being done by a <code class="highlighter-rouge">CALayer</code>; while the layer is providing the visual content, on the UIKit level, <code class="highlighter-rouge">UIView</code> is providing other things (order layout functionality, touch recognition, guest recognizers). All that is introduced on top of the layout through UIKit.</p>
<h3 id="deeply-integrated-with-uiview-1037">Deeply Integrated with UIView <a href="javascript:presentz.changeChapter(0,20,true);">(10:37)</a>
</h3>
<p><code class="highlighter-rouge">CALayer</code> and <code class="highlighter-rouge">UIView</code> are tightly integrated. Many times, when interacting with the UIView, you are implicitly affecting the properties of the layout underneath. For example, when you change the <code class="highlighter-rouge">.frame</code> property on a view, you are manipulating the bounds and the center properties on the layer underneath, which are then implicitly returned back as the <code class="highlighter-rouge">.frame</code> property of the view.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="kt">UIView</span> <span class="p">{</span>
   <span class="kd">public</span> <span class="k">var</span> <span class="nv">frame</span><span class="p">:</span> <span class="kt">CGRect</span> <span class="p">{</span>
      <span class="k">get</span> <span class="p">{</span>
         <span class="k">return</span> <span class="k">self</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">frame</span>
<span class="p">}</span>
      <span class="k">set</span> <span class="p">{</span>
         <span class="k">self</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="n">frame</span> <span class="o">=</span> <span class="n">newValue</span>
      <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="k">let</span> <span class="nv">newLayer</span> <span class="o">=</span> <span class="kt">CALayer</span><span class="p">()</span>
<span class="n">view</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="nf">addSublayer</span><span class="p">(</span><span class="n">newLayer</span><span class="p">)</span>
</code></pre>
</div>
<p>While I do not expect the actual implementation of <code class="highlighter-rouge">UIView</code> to look like this, many of the <code class="highlighter-rouge">UIView</code> level properties are simple access overrides that are manipulating the properties for the layer underneath.</p>
<h3 id="why-is-it-not-a-superclass-1113">Why is it Not a Superclass? <a href="javascript:presentz.changeChapter(0,21,true);">(11:13)</a>
</h3>
<p><em>Why is <code class="highlighter-rouge">UIView</code> not a subclass of CALayer? Why is the layer being exposed to a property on <code class="highlighter-rouge">UIView</code> instead?</em></p>
<p>Apart from <code class="highlighter-rouge">CALayer</code>, Apple also provides subclasses (tile and gradient layers). You can insert them into a <code class="highlighter-rouge">UIView</code> subclass by swapping out which type of layer is exposed by that property. This is a model that would not have been possible if <code class="highlighter-rouge">UIView</code> was simply a subclass of <code class="highlighter-rouge">CALayer</code>. Let’s say you wanted to make a <code class="highlighter-rouge">UIView</code> subclass that displayed a dynamic gradient. It is very easy to do if you override the <code class="highlighter-rouge">.layerClass</code> property of the view and specify a <code class="highlighter-rouge">CAGradientLayer</code> instead.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="kt">MyGradientClass</span> <span class="p">:</span> <span class="kt">UIView</span> <span class="p">{</span>

    <span class="k">override</span> <span class="kd">class</span> <span class="kd">func</span> <span class="nf">layerClass</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="kt">AnyClass</span> <span class="p">{</span>
       <span class="k">return</span> <span class="kt">CAGradientLayer</span><span class="o">.</span><span class="k">self</span>
    <span class="p">}</span>

<span class="p">}</span>
</code></pre>
</div>
<h3 id="mapping-contents-to-calayer-1156">Mapping Contents to CALayer <a href="javascript:presentz.changeChapter(0,22,true);">(11:56)</a>
</h3>
<p>It is very easy to create a red quad on the screen, but that’s boring. Instead, it is possible to map a bitmap to a layer by accessing the <code class="highlighter-rouge">.contents</code> property (<em>see code example</em>).</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="k">let</span> <span class="nv">trySwiftLogo</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="nf">trySwiftLogo</span><span class="p">()</span> <span class="k">as</span> <span class="kt">UIImage</span>

<span class="k">let</span> <span class="nv">trySwiftLayer</span> <span class="o">=</span> <span class="kt">CALayer</span><span class="p">()</span>
<span class="n">trySwiftLayer</span><span class="o">.</span><span class="n">contents</span> <span class="o">=</span> <span class="n">trySwiftLogo</span><span class="o">.</span><span class="kt">CGImage</span>
</code></pre>
</div>
<p>This is very similar to a <code class="highlighter-rouge">UIImageView</code>. We can take the “try! Swift” logo we generated with Core Graphics earlier, export that as a UIImage, convert it to a CGImage, and directly apply that to the contents property of the layer.</p>
<h3 id="managing-the-scale-of-calayer-contents-1230">Managing the Scale of CALayer Contents <a href="javascript:presentz.changeChapter(0,23,true);">(12:30)</a>
</h3>
<p>Another cool thing is that the <code class="highlighter-rouge">.contents</code> property is animatable, which can have some cool effects. It is possible to configure a layer to change how the bitmap is rendered depending on the size of the frame of the layer itself.</p>
<p>This property is called <code class="highlighter-rouge">.contentsGravity</code>, and it behaves similar to content mode on the <code class="highlighter-rouge">UIView</code> level. The default value is <code class="highlighter-rouge">kCAGravityResize</code>: whatever size the frame is, the image is distorted and squished to match exactly the same size. When you change the setting to <code class="highlighter-rouge">kCAGravityResizeAspectFill</code>, the aspect ratio of the image stays the same, but it is scaled up to fill all of the layer, and anything outside of the region is just disregarded. Changing to <code class="highlighter-rouge">kCAGravityResizeAspect</code> will make sure the image stays at its normal aspect ratio and all of it is visible within the bounds of the frame, regardless of the size. When set to center (<code class="highlighter-rouge">kCAGravityCenter</code>), the image is not resized, but placed in the middle of the frame regardless of its size.</p>
<p>With this capability, what <strong>type of effects</strong> are possible in iOS?</p>
<div class="ad-shiv visible-xs" id="article-ad-banner">
<div class="article-ad col-xs-12">
<script type="text/javascript" src="./Advanced Graphics with Core Animation_files/dc.js"></script><title></title>
<br>
<style type="text/css">.ad-shiv section{margin: 0 auto;}
	/* banner A */
.ad-shiv #bannerA{
	border: 1px solid #59569E;
	border-radius: 6px;
	padding:18px;
	background: #fafafa;
}
.ad-shiv #bannerA .hed{
	color:#59569E;font-size:28px;display:inline-block;vertical-align: middle;margin:0 15px 0 0;
}
.ad-shiv #bannerA .wrap{
	display:inline-block;margin-top: -3px;
}
.ad-shiv #bannerA .btn{
	box-shadow:none;border:none;vertical-align:middle;border-radius:6px;padding:10px 30px;background:#59569E;color:#fff;font-size:18px;
}
@media only screen 
and (min-width : 630px){
	.ad-shiv #bannerA .wrap {float: right}
}
@media only screen 
and (max-width : 630px){
	.ad-shiv #bannerA .wrap {margin-top: 3px}
}
	/* banner B */
	/* NOTE: This style is non-standard and will not work for every user in every browser. There may also be behavior changes in the future. */
.ad-shiv #bannerB{
	border: 3px solid ghostWhite;
	border-radius: 10px;
	padding:1rem 15px;
	background: white;
	color:#39477F;
	background: linear-gradient(-215deg,#FCC397,#FC9F95,#F77C88,#F25192,#D34CA3,#9A50A5,#59569E,#39477F)repeat fixed;
	-webkit-text-fill-color: transparent;
	-webkit-background-clip: text;
	font-size: 2rem;
	font-weight: bold;
	line-height: 2rem;
}
@-moz-document url-prefix() {
	.ad-shiv #bannerB{
		background-attachment: scroll;
	}
}
</style>
<section>
<div data-update="10/04/17/12:30" id="bannerB"><a href="https://go.pardot.com/l/210132/2017-08-10/9drkd">4 Design Patterns for a RESTless Mobile Integration &nbsp;»</a></div>
</section>

</div>
</div>
<ul>
<li>
<p>One of my favorite apps, <a href="http://tapbots.com/tweetbot/">Tweetbot</a>, uses this functionality in a cool way: as the content scroll goes down, the image in the background gets larger. The width of the frame does not change, only the height. As the frame gets bigger, the aspect fill capability of the layer increases the image to fit at the same aspect ratio.</p>
</li>
<li>
<p>I found a cool way to leverage this capability of <code class="highlighter-rouge">CALayers</code> in my own app, <a href="http://icomics.co/">iComics</a>. When iOS 7 came out, there was a shift in the design of iOS apps to be more minimal. I thus wanted the slider graphics in my own app to be transparent and the background to still be poking through from behind. Two elements needed to work together (<em>challenging!</em>): the background layer that had the page numbers in it, and a transparent handle button that the user manipulated. But, how do you clip out the portion of the numbers layer directly behind the sliding button? The solution turned out to be very easy: you render one instance of the numbers graphic and then you apply it to two separate layers on either side of the button. If you set the contents gravity of the lefthand layer to left (<code class="highlighter-rouge">kCAGravityLeft</code>) and the righthand one to right (<code class="highlighter-rouge">kCAGravityRight</code>), when you manipulate their frames around the sliding button, it gives the illusion that they are not changing any position.</p>
</li>
</ul>
<p>Because this method leverages the GPU, it is incredibly performant. There are other ways you could have gone about doing this. For example, using a masking layer, or doing it in Core Graphics. But, because both of them would have leveraged the CPU, it would have been slower.</p>
<h3 id="bitmap-sampling-in-calayer-1513">Bitmap Sampling in CALayer <a href="javascript:presentz.changeChapter(0,26,true);">(15:13)</a>
</h3>
<p>Core Animation also exposes settings that lets you configure which resizing resampling algorithms the GPU uses. Whenever you change the size of a layer and the size no longer matches the original size of the bitmap mapped to it, resampling needs to be done to make sure it does not look jagged or distorted.</p>
<p>By default, the sampling mode that Core Animation uses is called bilinear filtering (<code class="highlighter-rouge">kCAFilterLinear</code>), a simple linear interpolation between two pixels. Sometimes, even bilinear filtering is too slow. If you are rapidly resizing a frame during animation, you might get stuttering.</p>
<p>In cases where you are changing a frame rapidly, it might be best to set it back to nearest (<code class="highlighter-rouge">kCAFilterNearest</code>). Nearest mode completely disables pixel resampling. In cases where you have made a layer very big or very small (it is obvious that) there is no sampling applied, and it will look jaggy. But in cases where the animation is happening so fast you might not even notice, then it is good for getting better performance.</p>
<p>The final mode is called trilinear filtering (<code class="highlighter-rouge">kCAFilterTrilinear</code>), where the GPU will generate differently sized versions of the same bitmap, and blend them together to create resizing of the texture in question. This can result in slowdowns because there is a CPU element involved - it depends on your needs, but you can get superior resampling quality by doing it this way.</p>
<p>A good example of where nearest filtering can become useful in iOS is open and close animation for apps. When an app closes, not only is it rescaling very quickly, but it is also cross-fading back to the original icon. This combination can cause FPS stuttering on older devices. That being said, while the animation happens quickly, you can use nearest filtering and it is not very visible to the user.</p>
<h3 id="masking-calayer-objects-1648">Masking CALayer Objects <a href="javascript:presentz.changeChapter(0,28,true);">(16:48)</a>
</h3>
<p>Masking <code class="highlighter-rouge">CALayer</code> Objects: taking a layer and setting it as the mask property of another layer.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="k">let</span> <span class="nv">myLayer</span> <span class="o">=</span> <span class="kt">CALayer</span><span class="p">()</span>
<span class="n">myLayer</span><span class="o">.</span><span class="n">contents</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="nf">makeRedCircleImage</span><span class="p">()</span><span class="o">.</span><span class="kt">CGImage</span>

<span class="k">let</span> <span class="nv">myMask</span> <span class="o">=</span> <span class="kt">CALayer</span><span class="p">()</span>
<span class="n">myMask</span><span class="o">.</span><span class="n">contents</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="nf">makeMaskImage</span><span class="p">()</span><span class="o">.</span><span class="kt">CGImage</span>

<span class="n">myLayer</span><span class="o">.</span><span class="n">mask</span> <span class="o">=</span> <span class="n">myMask</span>
</code></pre>
</div>
<p>A layer will be clipped by this mask, but it will still be functional, interactive, and animatable. At iComics, I wanted to make a tutorial view that explained what a setting did in the app. I used PaintCode to generate a series of images, and an alpha channel mask to composite these images together. The cool thing about the final effect is it does not matter what the color or pattern of the background is. It will work on any background, even while scrolling. It is a dynamic and useful effect.</p>
<h3 id="adding-shadows-to-calayer-1737">Adding Shadows to CALayer <a href="javascript:presentz.changeChapter(0,30,true);">(17:37)</a>
</h3>
<p>Another common effect in iOS (not so much now with iOS 7), is the use of shadows. What would be a long and arduous process, Core Animation makes easy to generate dynamic shadows and attach them to any shape.</p>
<p>The following code will indeed render a shadow. However, because the system has to do a per pixel comparison to work out the size of the shadow, it will be incredibly slow in terms of rendering and animation.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code> <span class="k">let</span> <span class="nv">myLayer</span> <span class="o">=</span> <span class="n">view</span><span class="o">.</span><span class="n">layer</span>
 <span class="n">myLayer</span><span class="o">.</span><span class="n">shadowColor</span> <span class="o">=</span> <span class="kt">UIColor</span><span class="o">.</span><span class="nf">blackColor</span><span class="p">()</span><span class="o">.</span><span class="kt">CGColor</span>
 <span class="n">myLayer</span><span class="o">.</span><span class="n">shadowOpacity</span> <span class="o">=</span> <span class="mf">0.75</span>
 <span class="n">myLayer</span><span class="o">.</span><span class="n">shadowOffset</span> <span class="o">=</span> <span class="kt">CGSizeMake</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">10</span><span class="p">)</span>
 <span class="n">myLayer</span><span class="o">.</span><span class="n">shadowRadius</span> <span class="o">=</span> <span class="mi">10</span>

<span class="c1">// IMPORTANT FOR PERFORMANCE</span>
<span class="k">let</span> <span class="nv">myShadowPath</span> <span class="o">=</span> <span class="kt">UIBezierPath</span><span class="p">(</span><span class="nv">roundedRect</span><span class="p">:</span>
                     <span class="n">view</span><span class="o">.</span><span class="n">bounds</span><span class="p">,</span> <span class="nv">cornerRadius</span><span class="p">:</span> <span class="mi">10</span><span class="p">)</span>

<span class="n">myLayer</span><span class="o">.</span><span class="n">shadowPath</span> <span class="o">=</span> <span class="n">myShadowPath</span><span class="o">.</span><span class="kt">CGPath</span>
</code></pre>
</div>
<p>As a result, whenever you are working with shadows in Core Animation, you should always make sure to set the <code class="highlighter-rouge">.shadowPath</code> property. This property will tell Core Animation in advance what the shape of the shadow will be, reducing render time.</p>
<h3 id="transforming-a-calayer-1815">Transforming a CALayer <a href="javascript:presentz.changeChapter(0,31,true);">(18:15)</a>
</h3>
<p>Core Animation also provides a transform property on <code class="highlighter-rouge">CALayer</code>. Unlike the transform property on UIView, which is purely 2D, the one on <code class="highlighter-rouge">CALayer</code> provides 3D transformations.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="k">let</span> <span class="nv">myLayer</span> <span class="o">=</span> <span class="kt">CALayer</span><span class="p">()</span>
<span class="n">myLayer</span><span class="o">.</span><span class="n">contents</span> <span class="o">=</span> <span class="k">self</span><span class="o">.</span><span class="nf">makeTrySwiftLogoImage</span><span class="p">()</span><span class="o">.</span><span class="kt">CGImage</span>

<span class="k">var</span> <span class="nv">transform</span> <span class="o">=</span> <span class="kt">CATransform3DIdentity</span>
<span class="n">transform</span><span class="o">.</span><span class="n">m34</span> <span class="o">=</span> <span class="mf">1.0</span> <span class="o">/</span> <span class="o">-</span><span class="mi">500</span>
<span class="n">transform</span> <span class="o">=</span> <span class="kt">CATransform3DRotate</span><span class="p">(</span><span class="n">transform</span><span class="p">,</span> <span class="mf">45.0</span><span class="n">f</span> <span class="o">*</span> <span class="kt">M_PI</span> <span class="o">/</span> <span class="mf">180.0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
<span class="n">myLayer</span><span class="o">.</span><span class="n">transform</span> <span class="o">=</span> <span class="n">transform</span>
</code></pre>
</div>
<p>While the design paradigm for iOS 7 is ostensibly flat and minimal design, there are instances in the system where 3D transformations are used. The most famous example of a third party application using this effect is the app <a href="https://flipboard.com/">Flipboard</a>. Flipboard uses 3D transformations to create a page-turning effect whenever you are transitioning between articles in its app. While that is not possible in the <code class="highlighter-rouge">UIView</code> level, it is easy to do on the Core Animation level.</p>
<h3 id="blend-modes-with-calayer-1904">Blend Modes with CALayer <a href="javascript:presentz.changeChapter(0,34,true);">(19:04)</a>
</h3>
<p>The ability to add blending modes to CALayers is a cool thing in Core Animation, but it uses some private system APIs. While I cannot officially recommend this, it is still cool to check out. That being said, it would be very easy to obfuscate; if you want to consider it for an official app, it is a possibility.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="k">let</span> <span class="nv">myBlendLayer</span> <span class="o">=</span> <span class="kt">CALayer</span><span class="p">()</span>
<span class="n">myBlendLayer</span><span class="o">.</span><span class="nf">setValue</span><span class="p">(</span><span class="kc">false</span><span class="p">,</span> <span class="nv">forKey</span><span class="p">:</span> <span class="err">“</span><span class="n">allowsGroupBlending</span><span class="err">”</span><span class="p">)</span> <span class="c1">// PRIVATE</span>
<span class="n">myBlendLayer</span><span class="o">.</span><span class="n">compositingFilter</span> <span class="o">=</span> <span class="err">“</span><span class="n">screenBlendMode</span><span class="s">"
myBlendLayer.allowsGroupOpacity = false
myLayer.addSublayer(myBlendLayer)
</span></code></pre>
</div>
<p>For example, if you have two layers, and you set the top one to be screen blend mode, you will get this effect where the top layer is being additively blended on the one below.</p>
<p>One day, I got curious and decided to reverse engineer the “slide to unlock” <code class="highlighter-rouge">UIView</code> inside iOS. It is not a simple gradient, as most people would assume. There is a subtle fractal shimmering effect. I wondered how many layers it had. Five layers, it turns out!</p>
<p>The top layer is a mask-blending layer that clips everything to its alpha channel. The next layer is a flat base color that serves as the background of the effect. The next three layers are gradient layers that create a wedge shape highlight sheen, and a highlight color. The final layer is the most complicated. It is an outline of the text, stroked, dashed, and blurred, and then overlayed to create that shimmering effect when blended with the gradients. I have also published <a href="https://github.com/TimOliver/TOGlintyStringView">this code on GitHub</a>, if you are interested in checking out how it works in more detail.</p>
<p>When I was inspecting the official “slide to unlock” view, one app that was handy was <a href="http://revealapp.com/">Reveal</a>. Reveal is a debugging tool that lets you inspect the views of your app from the device on your mac as it is executing. This is extremely valuable if you are developing an app with a complex UI and you need to debug it in real time. I could not have done this introspection without it.</p>
<h3 id="animating-with-core-animation-2052">Animating with Core Animation <a href="javascript:presentz.changeChapter(0,37,true);">(20:52)</a>
</h3>
<p>How to implement animations in Core Animation, and how it compares to the <code class="highlighter-rouge">UIView</code> animation APIs in the UIKit level? I will start with how to implement animations on the UIKit level, and then show you how to drop down to the Core Animation level.</p>
<h3 id="compared-to-uikit-2117">Compared to UIKit <a href="javascript:presentz.changeChapter(0,38,true);">(21:17)</a>
</h3>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="k">let</span> <span class="nv">trySwiftView</span> <span class="o">=</span> <span class="kt">UIImageView</span><span class="p">(</span><span class="nv">image</span><span class="p">:)</span>
 <span class="k">let</span> <span class="nv">trySwiftView</span><span class="o">.</span><span class="n">center</span> <span class="o">=</span> <span class="kt">CGPointZero</span>

 <span class="kt">UIView</span><span class="o">.</span><span class="nf">animateWithDuration</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="nv">delay</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span> <span class="nv">options</span><span class="p">:</span> <span class="o">.</span><span class="kt">CurveEaseInOut</span><span class="p">,</span> <span class="nv">animations</span><span class="p">:</span> <span class="p">{</span>
    <span class="n">trySwiftView</span><span class="o">.</span><span class="n">center</span> <span class="o">=</span> <span class="kt">CGPointMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">500</span><span class="p">)</span>
 <span class="p">},</span> <span class="nv">completion</span><span class="p">:</span> <span class="kc">nil</span><span class="p">)</span>
</code></pre>
</div>
<p>On the UIKit level, creating an animation is easy. All it takes is one method call, and you supply a closure that modifies the properties you want to animate; optionally, you supply a second closure that executes once the animation is finished. Core Animation is trickier, with more code and management required.</p>
<h3 id="cabasicanimation-2129">CABasicAnimation <a href="javascript:presentz.changeChapter(0,39,true);">(21:29)</a>
</h3>
<p>Compared to the previous UIKit example, to create a similar effect in Core Animation, you need to create a <code class="highlighter-rouge">CABasicAnimation</code> object and fill that with all the necessary parameters. Once the object is created, you add it to the layer object to start the animation.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="k">let</span> <span class="nv">trySwiftLayer</span> <span class="o">=</span> <span class="c1">//...</span>

<span class="k">let</span> <span class="nv">myAnimation</span> <span class="o">=</span> <span class="kt">CABasicAnimation</span><span class="p">(</span><span class="nv">keyPath</span><span class="p">:</span> <span class="err">“</span><span class="n">position</span><span class="o">.</span><span class="n">x</span><span class="err">”</span><span class="p">)</span>
<span class="n">myAnimation</span><span class="o">.</span><span class="n">duration</span> <span class="o">=</span> <span class="mi">2</span>
<span class="n">myAnimation</span><span class="o">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="n">trySwiftLayer</span><span class="o">.</span><span class="n">position</span><span class="o">.</span><span class="n">x</span>
<span class="n">myAnimation</span><span class="o">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="n">trySwiftLayer</span><span class="o">.</span><span class="n">position</span><span class="o">.</span><span class="n">x</span> <span class="o">+</span> <span class="mi">500</span>
<span class="n">myAnimation</span><span class="o">.</span><span class="n">timingFunction</span> <span class="o">=</span> <span class="n">kCAMediaTimingFunctionEaseInEaseOut</span>
<span class="n">myAnimation</span><span class="o">.</span><span class="n">repeatCount</span> <span class="o">=</span> <span class="o">.</span><span class="n">infinity</span>

<span class="n">trySwiftLayer</span><span class="o">.</span><span class="nf">addAnimation</span><span class="p">(</span><span class="n">myAnimation</span><span class="p">,</span> <span class="nv">forKey</span><span class="p">:</span> <span class="err">“</span><span class="n">myAnimationKeyName</span><span class="err">”</span><span class="p">)</span>
</code></pre>
</div>
<p>When you create an animation in UIKit, this is what is happening in the background. You can access these animations from the <code class="highlighter-rouge">.animationsKeys</code> property of the layer.</p>
<h3 id="timing-function-2132">Timing Function <a href="javascript:presentz.changeChapter(0,41,true);">(21:32)</a>
</h3>
<p>One of the major advantages of creating animations at the Core Animation level is that you can create custom timing functions to control how an animation progresses over time. A good resource for this is a website called <a href="http://cubic-bezier.com/">CubicBezier.com</a>. This website lets you directly manipulate an animation timing function and provides you with the floating point values that you can copy straight to Core Animation.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="k">let</span> <span class="nv">timingFunction</span> <span class="o">=</span> <span class="kt">CAMediaTimingFunction</span><span class="p">(</span><span class="nv">controlPoints</span><span class="p">:</span> <span class="o">.</span><span class="mi">08</span><span class="p">,</span> <span class="o">.</span><span class="mo">04</span><span class="p">,</span> <span class="o">.</span><span class="mi">08</span><span class="p">,</span> <span class="o">.</span><span class="mi">99</span><span class="p">)</span>

<span class="k">let</span> <span class="nv">myAnimation</span> <span class="o">=</span> <span class="kt">CABasicAnimation</span><span class="p">()</span>
<span class="n">myAnimation</span><span class="o">.</span><span class="n">timingFunction</span> <span class="o">=</span> <span class="n">timingFunction</span>
</code></pre>
</div>
<p>This lets you manipulate the speed over time, in which an animation occurs at an extremely high level of precision.</p>
<h3 id="animating-a-calayers-contents-2238">Animating a CALayer’s Contents <a href="javascript:presentz.changeChapter(0,42,true);">(22:38)</a>
</h3>
<p>This is how you can animate the contents property of a <code class="highlighter-rouge">CALayer</code>.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="k">let</span> <span class="nv">imageView</span> <span class="o">=</span> <span class="kt">UIImageView</span><span class="p">()</span>
<span class="k">let</span> <span class="nv">onImage</span> <span class="o">=</span> <span class="kt">UIImage</span><span class="p">()</span>
<span class="k">let</span> <span class="nv">offImage</span> <span class="o">=</span> <span class="kt">UIImage</span><span class="p">()</span>

<span class="k">let</span> <span class="nv">myAnim</span> <span class="o">=</span> <span class="kt">CABasicAnimation</span><span class="p">(</span><span class="nv">keyPath</span><span class="p">:</span> <span class="err">“</span><span class="n">contents</span><span class="err">”</span><span class="p">)</span>
<span class="n">myAnim</span><span class="o">.</span><span class="n">fromValue</span> <span class="o">=</span> <span class="n">offImage</span><span class="o">.</span><span class="kt">CGImage</span>
<span class="n">myAnim</span><span class="o">.</span><span class="n">toValue</span> <span class="o">=</span> <span class="n">onImage</span><span class="o">.</span><span class="kt">CGImage</span>
<span class="n">myAnim</span><span class="o">.</span><span class="n">duration</span> <span class="o">=</span> <span class="mf">0.15</span>

<span class="n">imageView</span><span class="o">.</span><span class="n">layer</span><span class="o">.</span><span class="nf">addAnimation</span><span class="p">(</span><span class="n">myCrossfadeAnimation</span><span class="p">,</span>
                               <span class="nv">forKey</span><span class="p">:</span> <span class="err">“</span><span class="n">contents</span><span class="err">”</span><span class="p">)</span>

<span class="n">imageView</span><span class="o">.</span><span class="n">image</span> <span class="o">=</span> <span class="n">onImage</span>
</code></pre>
</div>
<p>If you had one image and you wanted it to crossfade to another image, you would create two views and animate the respective crossfade; one from 100% alpha to 0%, the other from 0% alpha to 100%. However, when both layers hit 50% opacity, there will be a brief moment where you can see through both of them. That creates a dimming effect that is easy to pick up to the human eye. Subsequently, if you animate the contents property of a <code class="highlighter-rouge">CALayer</code>, you get a crossfade effect without that dimming artifact. This is useful for animations where both images have transparency, because the dimming effect is more pronounced in that case. This visual style is more iOS 7 - it has changed in iOS 8.</p>
<h3 id="cakeyframeanimation-2333">CAKeyframeAnimation <a href="javascript:presentz.changeChapter(0,43,true);">(23:33)</a>
</h3>
<p><code class="highlighter-rouge">CAKeyframeAnimation</code> is a powerful class - you can chain up multiple animation points within one object. But not just that: each keyframe point can have a CG path object assigned, which lets you create animations that are not just linear, point-to-point transitions, but curves.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="k">let</span> <span class="nv">rect</span> <span class="o">=</span> <span class="kt">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">200</span><span class="p">)</span>
<span class="k">let</span> <span class="nv">circlePath</span> <span class="o">=</span> <span class="kt">UIBezierPath</span><span class="p">(</span><span class="nv">ovalInRect</span><span class="p">:</span><span class="n">rect</span><span class="p">)</span>

<span class="k">let</span> <span class="nv">circleAnimation</span> <span class="o">=</span> <span class="kt">CAKeyframeAnimation</span><span class="p">()</span>
<span class="n">circleAnimation</span><span class="o">.</span><span class="n">keyPath</span> <span class="o">=</span> <span class="err">“</span><span class="n">position</span><span class="err">”</span>
<span class="n">circleAnimation</span><span class="o">.</span><span class="n">path</span> <span class="o">=</span> <span class="n">circlePath</span><span class="o">.</span><span class="kt">CGPath</span>
<span class="n">circleAnimation</span><span class="o">.</span><span class="n">duration</span> <span class="o">=</span> <span class="mi">4</span>

<span class="c1">// Manually specify keyframe points</span>
<span class="c1">// circleAnimation.values = //...</span>
<span class="c1">// circleAnimation.keyTimes = //..</span>

<span class="k">let</span> <span class="nv">trySwiftLayer</span> <span class="o">=</span> <span class="c1">//...</span>
<span class="n">trySwiftLayer</span><span class="o">.</span><span class="nf">addAnimation</span><span class="p">(</span><span class="n">circleAnimation</span><span class="p">,</span>
                            <span class="nv">forKey</span><span class="p">:</span> <span class="err">“</span><span class="n">position</span><span class="err">”</span><span class="p">)</span>
</code></pre>
</div>
<h3 id="caanimationgroup-2353">CAAnimationGroup <a href="javascript:presentz.changeChapter(0,44,true);">(23:53)</a>
</h3>
<p>While in the UIKit level you could add multiple animations within one object, in Core Animation you must make multiple CABasicAnimation objects. If that is the case, you can create your animation objects and add them to a CA animation group object, which controls the timing (and consequently, makes control Animation more efficient).</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="k">let</span> <span class="nv">myPositionAnimation</span> <span class="o">=</span> <span class="kt">CABasicAnimation</span><span class="o">.</span><span class="nf">animation</span><span class="p">(</span><span class="nv">keyPath</span><span class="p">:</span> <span class="err">“</span><span class="n">position</span><span class="err">”</span><span class="p">)</span>
<span class="k">let</span> <span class="nv">myAlphaAnimation</span> <span class="o">=</span> <span class="kt">CABasicAnimation</span><span class="o">.</span><span class="nf">animation</span><span class="p">(</span><span class="nv">keyPath</span><span class="p">:</span> <span class="err">“</span><span class="n">opacity</span><span class="err">”</span><span class="p">)</span>

<span class="k">let</span> <span class="nv">animationGroup</span> <span class="o">=</span> <span class="kt">CAAnimationGroup</span><span class="p">()</span>
<span class="n">animationGroup</span><span class="o">.</span><span class="n">timingFunction</span> <span class="o">=</span> <span class="n">kCAMediaTimingFunctionEaseInEaseOut</span>
<span class="n">animationGroup</span><span class="o">.</span><span class="n">duration</span> <span class="o">=</span> <span class="mi">2</span>
<span class="n">animationGroup</span><span class="o">.</span><span class="n">animations</span> <span class="o">=</span> <span class="p">[</span><span class="n">myPositionAnimation</span><span class="p">,</span> <span class="n">myAlphaAnimation</span><span class="p">]</span>

<span class="k">let</span> <span class="nv">trySwiftLayer</span> <span class="o">=</span> <span class="kt">CALayer</span><span class="p">()</span>
<span class="n">trySwiftLayer</span><span class="o">.</span><span class="nf">addAnimation</span><span class="p">(</span><span class="n">animationGroup</span><span class="p">,</span> <span class="nv">forKey</span><span class="p">:</span> <span class="err">“</span><span class="n">myAnimations</span><span class="err">”</span><span class="p">)</span>
</code></pre>
</div>
<h3 id="animation-completion-handling-2353">Animation Completion Handling <a href="javascript:presentz.changeChapter(0,45,true);">(23:53)</a>
</h3>
<p>On a similar note to UIKit animations, you consider a completion closure that executes once the animation has finished.</p>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code><span class="c1">// Set a delegate object</span>
<span class="k">let</span> <span class="nv">myAnimation</span> <span class="o">=</span> <span class="kt">CABasicAnimation</span><span class="p">()</span>
<span class="n">myAnimation</span><span class="o">.</span><span class="n">delegate</span> <span class="o">=</span> <span class="k">self</span>

<span class="c1">// Animation completion sent to ‘animationDidStop(anim: finished flag:)</span>

<span class="c1">// ———</span>

<span class="c1">//Set a closure to be executed at the end of this transaction</span>
<span class="kt">CATransaction</span><span class="o">.</span><span class="nf">begin</span><span class="p">()</span>

<span class="kt">CATransaction</span><span class="o">.</span><span class="nf">setCompletionBlock</span><span class="p">({</span>
   <span class="c1">// Logic to be performed, post animation</span>
<span class="p">})</span>

<span class="kt">CATransaction</span><span class="o">.</span><span class="nf">commit</span><span class="p">()</span>
</code></pre>
</div>
<p>As you can see, there is code that needs to be written if you want to write animations at the Core Animation level. Similar to PaintCode, there is another app, <a href="http://www.coreanimator.com/">Core Animator</a>: you create the animations in the app itself and it generates the relevant Core Animation code that you can then copy to your app (<em>I definitely recommend you check it out</em>). It will probably save you a time in the long run.</p>
<h3 id="features-of-core-animation-subclasses-2441">Features of Core Animation Subclasses <a href="javascript:presentz.changeChapter(0,47,true);">(24:41)</a>
</h3>
<p>In iOS, Apple provides a variety of CLS subclasses, with many different features.</p>
<ul>
<li>
<p>Some of these subclasses rely on the CPU for the operations which they perform; it may be necessary to test these on certain devices to make sure they fill your specific needs.</p>
</li>
<li>
<p>To insert a CLS subclass into a UIView, all you need to do is subclass the UIView, and then override its layer class property.</p>
</li>
</ul>
<div class="language-swift highlighter-rouge">
<pre class="highlight"><code> <span class="kd">public</span> <span class="kd">class</span> <span class="kt">MyGradientClass</span> <span class="p">:</span> <span class="kt">UIView</span> <span class="p">{</span>
      <span class="k">override</span> <span class="kd">class</span> <span class="kd">func</span> <span class="nf">layerClass</span><span class="p">()</span> <span class="o">-&gt;</span> <span class="kt">AnyClass</span> <span class="p">{</span>
         <span class="k">return</span> <span class="kt">CAGradientLayer</span><span class="o">.</span><span class="k">self</span>
      <span class="p">}</span>
<span class="p">}</span>
</code></pre>
</div>
<h3 id="catilelayer-2515">CATileLayer <a href="javascript:presentz.changeChapter(0,49,true);">(25:15)</a>
</h3>
<p>Tile layers are a staple of vector-based drawing on iOS. They automatically manage a grid of tile regions and manage the asynchronous drawing of content to those regions via Core Graphics. When placed in a zooming scroll view, they can be configured to redraw the content at a much bigger resolution when they are being zoomed in. This is incredibly useful for rendering content that can be rendered at any resolution dynamically. For example, text in a pdf file or topology information in a mapping application.</p>
<h3 id="cagradientlayer-2549">CAGradientLayer <a href="javascript:presentz.changeChapter(0,50,true);">(25:49)</a>
</h3>
<p><code class="highlighter-rouge">CAGradientLayer</code> is a simple layer in the fact that all it takes is a series of points and colors to produce a dynamic gradient effect. The gradient is produced on the GPU - it is incredibly fast. It is used often on other layers that have been 3D transformed in order to add more perception of depth to their effect.</p>
<h3 id="careplicaterlayer-2610">CAReplicaterLayer <a href="javascript:presentz.changeChapter(0,51,true);">(26:10)</a>
</h3>
<p>The next CLS subclass is one that is reminiscent of a thumbnail tiling effect that was in the iOS 7 music app. <code class="highlighter-rouge">CAReplicaterLayer</code> allows you to specify one layer and have the one duplicated multiple times over on the GPU. The copies can then be tweaked. For example, changing their color or their position to create amazing effects. Because it is all done on the GPU, it is much faster than if you tried to do this system manually.</p>
<h3 id="cashapelayer-2633">CAShapeLayer <a href="javascript:presentz.changeChapter(0,52,true);">(26:33)</a>
</h3>
<p>The next example is one I highlighted in the “slide to unlock” example. <code class="highlighter-rouge">CAShapeLayer</code> allows you to insert a CG path property and customize that visually. For example, it is very easy to create a circle that you can either completely fill or add a stroke to. This layer is useful for dynamically creating effects that line up with the iOS 7’s design style (e.g. loading spinners and buttons). I recommend you check it out and also check out some of the libraries that people have already built around it on GitHub, e.g. <a href="https://github.com/UrbanApps/UAProgressView">UAProgressView</a>.</p>
<h3 id="caemitterlayer-2718">CAEmitterLayer <a href="javascript:presentz.changeChapter(0,53,true);">(27:18)</a>
</h3>
<p>As seen in the Disney app earlier, this layer serves as a particle emitter, which emits other layers that are configured to animate in a specific way. I am not sure why this effect is around, but I get the feeling it was probably for OS 10, where there are certain particle effects when you perform actions in the dock, such as dragging an icon out.</p>
<p>You could certainly add these effects to your own app if you want a magical touch or transitions. If you are looking at working with a CA middle layer, I recommend the app <a href="https://itunes.apple.com/es/app/particle-playground/id600661093?l=en&amp;mt=12">Particle Playground</a>. Available in the Mac App Store, it lets you configure your particle settings with a visual previewer, and export the lot as a class that you can then copy straight into your app.</p>
<h3 id="other-layer-subclasses-2759">Other Layer Subclasses <a href="javascript:presentz.changeChapter(0,54,true);">(27:59)</a>
</h3>
<p>There is a few more other classes that are available, but I have not tried them myself, and I get the feeling that most of them are not appropriate for iOS, leaning more towards OS 10 capabilities:</p>
<ul>
<li>
<p><code class="highlighter-rouge">CATextLayer</code> that behaves similar to <code class="highlighter-rouge">UILabel</code>, except it renders text at the top of the frame instead of in the middle. That being said, because we have <code class="highlighter-rouge">UILabel</code> available in iOS and they have things like order layout. I recommend you use them whenever you can.</p>
</li>
<li>
<p><code class="highlighter-rouge">CSScrollLayer</code> is probably more oriented towards OS 10 because we have <code class="highlighter-rouge">UIScrollView</code> on iOS, but it is the same functionality where you can scroll large amounts of content.</p>
</li>
<li>
<p>Unlike the transform property we talked about earlier, we manipulated a layer in 2D space, <code class="highlighter-rouge">CATransformLayer</code> lets you manipulate a layer completely in 3D space and create effects, such as spinning cubes. A good example of this might be the old iBooks store animation in iOS 5.</p>
</li>
<li>
<p>Two types of layers that are low level GPU level layers: <code class="highlighter-rouge">CAEAGLayer</code> and <code class="highlighter-rouge">CAMetalLayer</code>. They both let you set up a rendering context in which you can perform low level graphics rendering. This is the layer you use when you are making a game and you want direct access to the GPU to write your own rendering code and bypass Core Animation.</p>
</li>
</ul>
<h3 id="conclusion-2903">Conclusion <a href="javascript:presentz.changeChapter(0,55,true);">(29:03)</a>
</h3>
<p>Try and work on the <code class="highlighter-rouge">UIView</code> level first, and when you hit an instance where you cannot get the control you want, then drop down to the Core Animation level. As long as you understand how <code class="highlighter-rouge">UIView</code> and how Core Animation work, even if you have to make compromises, there should be few times where you are sacrificing 60 frames per second for the animation you want.</p>
<p>While Core Animation offers more control and functionality, it is also more code that needs to be written and maintained. I always recommend you try and achieve the effect you want in UIKit first.</p>
<p>Let’s all aim to make amazing, beautiful apps!</p>
<div class="attribution-container mobile col-xs-12 visible-xs">
<dov class="about-speaker flex center xs-column">
<p>About the content</p>
<div class="mobile-attribution">
<p>This talk was delivered live in March 2017 at <a href="https://www.tryswift.co/">try! Swift Tokyo</a>. The video was recorded, produced, and transcribed by Realm, and is published here with the permission of the conference organizers.</p>
</div>
</dov></div>
</div>
</div>
<div role="tabpanel" class="tab-pane fade in" id="about-the-author">
<div class="case-content">
<div id="author-block" class="col-xs-12 flex">
<div class="avatar" style="background-image: url(//images.ctfassets.net/s72atsk5w5jo/asset_45/9bbc0e7fe29a09bcd1da306b06fc4caf/timoliverau?fm=jpg&amp;fl=progressive&amp;q=75&amp;w=150);"></div>
<div class="info col-xs-12">
<h4 class="name">
Tim Oliver
</h4>
<p>
</p><p>Tim Oliver hails from Perth, Australia! He has been an iOS developer for 6 years, and recently joined Realm in March 2015. Tim has a cool app called <a href="http://icomics.co/">iComics</a> and he loves karaoke! He does, in fact, also sometimes have the problem of too many kangaroos in his backyard.</p>
<p></p>
<div class="col-xs-12 flex links">
<a href="https://www.twitter.com/timoliverau">Twitter</a>
</div>
</div>
</div>
</div>
</div>
<div class="social-bar col-xs-12 flex">
<div class="share-bar flex center col-xs-12">
<ul class="share-button-group flex center">
<div class="light-text">Share</div>
<li class="twitter">
<a class="flex center" title="Twitter" target="_blank" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;share-bar-twitter&#39;, &#39;Share Bar&#39;);" href="https://twitter.com/intent/tweet?text=Advanced%20Graphics%20with%20Core%20Animation%20https%3A%2F%2Facademy.realm.io%2Fposts%2Ftryswift-tim-oliver-advanced-graphics-with-core-animation%2F%20via%20%40realm">
<i class="fa fa-twitter"></i>
</a>
</li><li class="facebook">
<a class="flex center" title="Facebook" target="_blank" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;share-bar-facebook&#39;, &#39;Share Bar&#39;);" href="https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Facademy.realm.io%2Fposts%2Ftryswift-tim-oliver-advanced-graphics-with-core-animation%2F&amp;t=Advanced%20Graphics%20with%20Core%20Animation">
<i class="fa fa-facebook"></i>
</a>
</li><li class="linkedin">
<a class="flex center" title="LinkedIn" target="_blank" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;share-bar-linkedin&#39;, &#39;Share Bar&#39;);" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A%2F%2Facademy.realm.io%2Fposts%2Ftryswift-tim-oliver-advanced-graphics-with-core-animation%2F&amp;title=Advanced%20Graphics%20with%20Core%20Animation">
<i class="fa fa-linkedin"></i>
</a>
</li><li class="email">
<a class="flex center" title="Email this" target="_blank" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;share-bar-email&#39;, &#39;Share Bar&#39;);" href="mailto:?Subject=Advanced%20Graphics%20with%20Core%20Animation&amp;Body=https%3A%2F%2Facademy.realm.io%2Fposts%2Ftryswift-tim-oliver-advanced-graphics-with-core-animation%2F">
<i class="fa fa-envelope"></i>
</a>
</li>
</ul>
</div>
</div>
</div>
</div>
</div>
<div class="related-articles col-xs-12 col-md-10 col-md-offset-1">
<div class="col-xs-12 text-center hidden-xs">
<h4>Featured News</h4>
</div>
<div class="row">
<p class="visible-xs featured-text text-center">Featured News</p>
<div class="col-xs-12 col-sm-4">
<figure>
<div class="article col-xs-12 card js-post-toggle">
<div class="post quick" data-tags="realm growth">
<div class="article-block flex center column">
<a class="post quick header-image" data-filter-section="1" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;default-article&#39;, &#39;News&#39;);" href="https://academy.realm.io/posts/5g-is-coming-faster-but-what-else-is-needed/">
<img class="col-xs-12 article-img" src="./Advanced Graphics with Core Animation_files/image.jpg" alt="Image">
</a> <a class="news-headline col-xs-12 text-left" href="https://academy.realm.io/posts/5g-is-coming-faster-but-what-else-is-needed/">
5G is coming: Faster – But What Else is Ne...
</a> <div class="excerpt col-xs-12 text-left">
<div class="info">
<span class="meta-info">
by
<a class="twitter-handle" href="https://twitter.com/davidhratner">David Ratner</a>
</span>
</div>
</div>
</div>
</div>
</div>
</figure>
</div>
<div class="col-xs-12 col-sm-4">
<figure>
<div class="article col-xs-12 card js-post-toggle">
<div class="post quick" data-tags="realm">
<div class="article-block flex center column">
<a class="post quick header-image" data-filter-section="1" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;default-article&#39;, &#39;News&#39;);" href="https://academy.realm.io/posts/building-modern-swift-apps-with-realm-database/">
<img class="col-xs-12 article-img" src="./Advanced Graphics with Core Animation_files/share-image.png" alt="Share image">
</a> <a class="news-headline col-xs-12 text-left" href="https://academy.realm.io/posts/building-modern-swift-apps-with-realm-database/">
Building Modern Swift Apps with Realm Data...
</a> <div class="excerpt col-xs-12 text-left">
<div class="info">
<span class="meta-info">
by
<a class="twitter-handle" href="https://twitter.com/icanzilb">Marin Todorov</a>
</span>
</div>
</div>
</div>
</div>
</div>
</figure>
</div>
<div class="col-xs-12 col-sm-4">
<figure>
<div class="article col-xs-12 card js-post-toggle">
<div class="post quick" data-tags="apple">
<div class="article-block flex center column">
<a class="post quick header-image" data-filter-section="1" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;default-article&#39;, &#39;News&#39;);" href="https://academy.realm.io/posts/offline-experience-issues-with-the-travel-mobile-apps/">
<img class="col-xs-12 article-img" src="./Advanced Graphics with Core Animation_files/anete-lusina-609863-unsplash.jpg" alt="Anete lusina 609863 unsplash">
</a> <a class="news-headline col-xs-12 text-left" href="https://academy.realm.io/posts/offline-experience-issues-with-the-travel-mobile-apps/">
Offline experience issues with the travel ...
</a> <div class="excerpt col-xs-12 text-left">
<div class="info">
<span class="meta-info">
by
<a class="twitter-handle" href="https://twitter.com/davidhratner">David Ratner</a>
</span>
</div>
</div>
</div>
</div>
</div>
</figure>
</div>
</div>
<div class="col-xs-12 text-center news-button">
<a class="btn btn-large btn-outline" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;related-article-news-index&#39;, &#39;Post&#39;);" href="https://academy.realm.io/">
See more
</a></div>
</div>
<a href="https://go.pardot.com/l/210132/2017-08-10/9drkd" class="sub-bar-ad" data-update="10/5/17/16:30" id="bannerB">
<div class="contents container">
<div class="row col-md-10 col-md-offset-1">
<p class="col-xs-9 text-xs-center">4 design patterns for a RESTless mobile integration »</p>
<span class="ad-bar-close col-xs-3 js-ad-bar-close flex center">
<img alt="close" src="./Advanced Graphics with Core Animation_files/close-icon-dark-7e641dd849c1b5662a07e0ddd4728400c63f7f477b7afb42074f325aac21939b.svg">
</span>
</div>
</div>
</a>
</div>
</div>


<div class="video-gallery flex center column">
<div class="col-xs-12 close-video flex center">
<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="Artboard-Copy-2" fill="#FFFFFF">
<path d="M12,10.2458113 L3.05234191,1.29815317 C2.66586713,0.911678386 2.03251902,0.917216103 1.63846622,1.3112689 L1.3112689,1.63846622 C0.919518443,2.03021668 0.91134399,2.66553273 1.29815317,3.05234191 L10.2458113,12 L1.29815317,20.9476581 C0.911678386,21.3341329 0.917216103,21.967481 1.3112689,22.3615338 L1.63846622,22.6887311 C2.03021668,23.0804816 2.66553273,23.088656 3.05234191,22.7018468 L12,13.7541887 L20.9476581,22.7018468 C21.3341329,23.0883216 21.967481,23.0827839 22.3615338,22.6887311 L22.6887311,22.3615338 C23.0804816,21.9697833 23.088656,21.3344673 22.7018468,20.9476581 L13.7541887,12 L22.7018468,3.05234191 C23.0883216,2.66586713 23.0827839,2.03251902 22.6887311,1.63846622 L22.3615338,1.3112689 C21.9697833,0.919518443 21.3344673,0.91134399 20.9476581,1.29815317 L12,10.2458113 Z" id="Combined-Shape"></path>
</g>
</g>
</svg>
</div>
<div class="content">
<div class="video-row js-video-row">
<div class="col-md-6 video-col">
<div class="preroll-player video-player flex-video hidden-xs widescreen">
<div id="preroll-player" class="wistia_embed"></div>
</div>
<div id="video-player" class="video-player flex-video widescreen js-video-player"><div class="wistia_video_foam_dummy" data-source-container-id="wistia_uz6oa6alkp" style="border: 0px; display: block; height: 0px; margin: 0px; padding: 0px; position: static; visibility: hidden; width: auto;"></div><div id="wistia_uz6oa6alkp" class="wistia_embed wistia_embed_initialized" style="width: 773px; height: 435px;"><div id="wistia_chrome_25" class="w-chrome" style="display: inline-block; height: 435px; margin: 0px; padding: 0px; position: relative; vertical-align: top; width: 773px; zoom: 1; outline: none; overflow: hidden; box-sizing: content-box;"><div id="wistia_grid_31_wrapper" style="display: block; width: 773px; height: 435px;"><div id="wistia_grid_31_above" style="height: 0px; font-size: 0px; line-height: 0px;"> </div><div id="wistia_grid_31_main" style="width: 773px; left: 0px; height: 435px; margin-top: 0px;"><div id="wistia_grid_31_behind"></div><div id="wistia_grid_31_center" style="width: 100%; height: 100%;"><div class="w-video-wrapper w-css-reset" style="height: 100%; position: absolute; top: 0px; width: 100%; opacity: 1; background-color: rgb(0, 0, 0);"><video id="wistia_simple_video_76" crossorigin="anonymous" poster="https://fast.wistia.com/assets/images/blank.gif" src="https://embedwistia-a.akamaihd.net/deliveries/bed2926caa9949095059c284adeddae680142b30/file.mp4" controlslist="nodownload" playsinline="" preload="none" type="video/mp4" x-webkit-airplay="allow" style="background: transparent; display: block; height: 100%; max-height: none; max-width: none; position: static; visibility: visible; width: 100%; object-fit: fill;"><source src="https://embedwistia-a.akamaihd.net/deliveries/bed2926caa9949095059c284adeddae680142b30/file.mp4" type="video/mp4"><track kind="subtitles" label="English" srclang="eng" src="https://fast.wistia.net/embed/captions/uz6oa6alkp.vtt?language=eng"></video></div><div class="w-ui-container" style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%; opacity: 1;"><style id="wistia_39_style" type="text/css" class="wistia_injected_style">
      #wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset{font-size:14px;}
#wistia_chrome_25 #wistia_grid_31_wrapper div.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper span.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper ul.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper li.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper label.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper button.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper img.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper a.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper svg.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper p.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper a.w-css-reset{border:0;}
#wistia_chrome_25 #wistia_grid_31_wrapper p.w-css-reset{margin:1.4em 0;}
#wistia_chrome_25 #wistia_grid_31_wrapper a.w-css-reset{display:inline;}
#wistia_chrome_25 #wistia_grid_31_wrapper span.w-css-reset{display:inline;}
#wistia_chrome_25 #wistia_grid_31_wrapper svg.w-css-reset{display:inline;}
#wistia_chrome_25 #wistia_grid_31_wrapper ul.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased;list-style-type:none}
#wistia_chrome_25 #wistia_grid_31_wrapper ol.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased;list-style-type:none}
#wistia_chrome_25 #wistia_grid_31_wrapper li.w-css-reset{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased;list-style-type:none}
#wistia_chrome_25 #wistia_grid_31_wrapper ul:before.w-css-reset{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper ol:before.w-css-reset{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper li:before.w-css-reset{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper ul:after.w-css-reset{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper ol:after.w-css-reset{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper li:after.w-css-reset{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper label.w-css-reset{background-attachment:scroll;background-color:transparent;background-image:none;background-position:0 0;background-repeat:no-repeat;background-size:100% 100%;float:none;outline:none}
#wistia_chrome_25 #wistia_grid_31_wrapper button.w-css-reset{background-attachment:scroll;background-color:transparent;background-image:none;background-position:0 0;background-repeat:no-repeat;background-size:100% 100%;border:0;border-radius:0;outline:none;position:static}
#wistia_chrome_25 #wistia_grid_31_wrapper img.w-css-reset{border:0;display:inline-block;vertical-align:top;border-radius:0;outline:none;position:static}
      #wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree {font-size:14px;}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree div{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree span{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree ul{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree li{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree label{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree button{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree img{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree a{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree svg{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree p{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree a{border:0;}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree p{margin:1.4em 0;}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree a{display:inline;}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree span{display:inline;}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree svg{display:inline;}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree ul{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased;list-style-type:none}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree ol{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased;list-style-type:none}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree li{box-sizing:inherit;box-shadow:none;color:inherit;display:block;float:none;font:inherit;font-family:inherit;font-style:normal;font-weight:normal;font-size:inherit;letter-spacing:0;line-height:inherit;margin:0;max-height:none;max-width:none;min-height:none;min-width:none;padding:0;position:static;text-decoration:none;text-transform:none;text-shadow:none;transition:none;word-wrap:normal;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-user-select:none;-webkit-font-smoothing:antialiased;list-style-type:none}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree ul:before{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree ol:before{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree li:before{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree ul:after{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree ol:after{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree li:after{display:none}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree label{background-attachment:scroll;background-color:transparent;background-image:none;background-position:0 0;background-repeat:no-repeat;background-size:100% 100%;float:none;outline:none}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree button{background-attachment:scroll;background-color:transparent;background-image:none;background-position:0 0;background-repeat:no-repeat;background-size:100% 100%;border:0;border-radius:0;outline:none;position:static}
#wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-tree img{border:0;display:inline-block;vertical-align:top;border-radius:0;outline:none;position:static}
      #wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-max-width-none-important{max-width:none!important}
      #wistia_chrome_25 #wistia_grid_31_wrapper .w-css-reset-button-important{border-radius:0!important;color:#fff!important;}
    </style><div class="w-vulcan-v2 w-css-reset" id="w-vulcan-v2-30" role="region" aria-label="Video" tabindex="0" style="box-sizing: border-box; cursor: default; height: 100%; left: 0px; position: absolute; visibility: visible; top: 0px; width: 100%;"><div class="w-vulcan--background w-css-reset" style="height: 100%; left: 0px; position: absolute; top: 0px; width: 100%;"><div class="w-css-reset" data-handle="statusBar" style="pointer-events: auto;"></div><div class="w-css-reset" data-handle="thumbnail" style="pointer-events: auto;"><div><div class="w-css-reset" style="height: 100%; opacity: 1; position: absolute; width: 100%; display: block;"><img class="w-css-reset" srcset="https://embedwistia-a.akamaihd.net/deliveries/ba5886f7e893a4afa4daa0bb9169d04a49001e1a.jpg?image_crop_resized=640x360 320w, https://embedwistia-a.akamaihd.net/deliveries/ba5886f7e893a4afa4daa0bb9169d04a49001e1a.jpg?image_crop_resized=640x360 640w, https://embedwistia-a.akamaihd.net/deliveries/ba5886f7e893a4afa4daa0bb9169d04a49001e1a.jpg?image_crop_resized=960x540 960w, https://embedwistia-a.akamaihd.net/deliveries/ba5886f7e893a4afa4daa0bb9169d04a49001e1a.jpg?image_crop_resized=1280x720 1280w, https://embedwistia-a.akamaihd.net/deliveries/ba5886f7e893a4afa4daa0bb9169d04a49001e1a.jpg?image_crop_resized=1920x1080 1920w, https://embedwistia-a.akamaihd.net/deliveries/ba5886f7e893a4afa4daa0bb9169d04a49001e1a.jpg?image_crop_resized=3840x2160 3840w" src="./Advanced Graphics with Core Animation_files/ba5886f7e893a4afa4daa0bb9169d04a49001e1a.jpg" alt="Video Thumbnail" style="border-width: 0px; border-style: solid; border-color: rgb(0, 0, 0); box-sizing: content-box; height: 435px; left: 0px; top: 0px; width: 773px; clip: auto; display: block; position: absolute;"></div></div></div></div><div class="w-vulcan-overlays-table w-css-reset" style="display: table; pointer-events: none; position: absolute; width: 100%;"><div class="w-vulcan-overlays--left w-css-reset" style="display: table-cell; vertical-align: top; position: relative; width: 0px;"><div class="w-css-reset" style="height: 401px;"></div></div><div class="w-vulcan-overlays--center w-css-reset" style="display: table-cell; vertical-align: top; position: relative; width: 100%;"><div class="w-css-reset" style="height: 401px;"><div class="w-css-reset" data-handle="bigPlayButton" style="pointer-events: auto;"><div class="w-bpb-wrapper w-css-reset w-css-reset-tree" style="display: block; left: 50%; position: absolute; top: 50%; transform: translate(-50%, -50%);"><button class="w-big-play-button w-css-reset-button-important w-vulcan-v2-button" aria-label="Play" style="cursor: pointer; height: 80px; background: rgba(123, 121, 106, 0.8); box-shadow: none; width: 125px;"><svg x="0px" y="0px" viewBox="0 0 125 80" enable-background="new 0 0 125 80" style="fill: rgb(255, 255, 255); height: 100%; left: 0px; stroke-width: 0px; top: 0px; width: 100%;"><rect fill-rule="evenodd" clip-rule="evenodd" fill="none" width="125" height="80"></rect><polygon fill-rule="evenodd" clip-rule="evenodd" fill="#FFFFFF" points="53,22 53,58 79,40"></polygon></svg></button></div></div><div class="w-css-reset" data-handle="clickForSoundButton" style="pointer-events: auto;"><div class="w-css-reset w-css-reset-tree" style="display: none; height: 100%; left: 0px; pointer-events: none; position: absolute; top: 0px; width: 100%;"><button class="w-vulcan-v2-button" style="background: rgba(0, 0, 0, 0.4); border: 2px solid transparent; border-radius: 32.4px; cursor: pointer; height: 42px; line-height: 42px; outline: none; padding-right: 12px; pointer-events: auto; position: absolute; right: 16px; text-align: left; top: 16px;"><svg viewBox="0 0 237 237" style="height: 38.4px; margin-top: 0.6px; vertical-align: top; width: 42px;"><style>
      @keyframes VOLUME_SMALL_WAVE_FLASH {
          0% { opacity: 0; }
         33% { opacity: 1; }
         66% { opacity: 1; }
        100% { opacity: 0; }
      }

      @keyframes VOLUME_LARGE_WAVE_FLASH {
          0% { opacity: 0; }
         33% { opacity: 1; }
         66% { opacity: 1; }
        100% { opacity: 0; }
      }

      .volume__small-wave {
        animation: VOLUME_SMALL_WAVE_FLASH 2s infinite;
        opacity: 0;
      }

      .volume__large-wave {
        animation: VOLUME_LARGE_WAVE_FLASH 2s infinite .3s;
        opacity: 0;
      }
    </style><polygon fill="white" points="88 107 65 107 65 131 89 131 112 154 112 84"></polygon><g fill="none" stroke="white" stroke-width="10" stroke-linecap="round"><path class="volume__small-wave" d="M 142 86 C 151 107 151 130 142 151"></path><path class="volume__large-wave" d="M 165 74 C 178 97 178 140 165 163"></path></g></svg><div style="color: white; display: inline-block; font-family: WistiaPlayerOverpass, Helvetica, sans-serif; font-size: 15.6px; margin-left: -4.8px; margin-top: -0.9px; vertical-align: top; white-space: nowrap; width: 36%;">Click for sound</div></button></div></div><div class="w-css-reset" data-handle="loadingIndicator" style="pointer-events: auto;"></div><div class="w-css-reset" data-handle="playPauseNotifier" style="pointer-events: auto;"></div><div class="w-css-reset" data-handle="subtitles" style="pointer-events: auto;"><nothing></nothing></div><div class="w-css-reset" data-handle="transcript" style="pointer-events: auto;"><div class="w-css-reset" style="position: absolute;"></div></div></div></div><div class="w-vulcan-overlays--right w-css-reset" style="display: table-cell; vertical-align: top; position: relative; width: 0px;"><div class="w-css-reset" style="height: 401px;"></div></div></div><div class="w-bottom-bar w-css-reset" style="bottom: 0px; border-collapse: collapse; display: table; height: 34px; left: 0px; opacity: 1; pointer-events: none; position: absolute; table-layout: auto; transition: opacity 0s ease 0s; width: 100%;"><div class="w-bottom-bar-upper w-css-reset" style="display: none;"><div class="w-css-reset" data-handle="upperPlaybar" style="height: 100%; pointer-events: auto;"><div class="w-playbar-wrapper w-css-reset w-css-reset-tree" role="slider" aria-label="Playbar" aria-orientation="horizontal" aria-valuenow="0" aria-valuemin="0" aria-valuemax="1791.96" aria-valuetext="0:00" tabindex="0" style="cursor: pointer; height: 100%; outline: none; position: relative;"><div style="display: block; height: 100%; overflow: hidden; pointer-events: none; position: relative; width: 773px;"><canvas width="1546" height="32" style="height: 16px; left: 0px; pointer-events: none; position: absolute; top: 0px; width: 773px;"></canvas></div><div class="w-playbar__hoverMarker" style="background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.12) 100%); display: none; height: 100%; left: -36px; pointer-events: none; position: absolute; top: 0px; width: 36px;"></div><div class="w-playbar__focus-border" style="border: 2px solid rgb(255, 255, 255); display: none; height: 100%; left: 0px; pointer-events: none; position: absolute; top: 0px; width: 100%;"></div></div></div></div><div class="w-bottom-bar-lower w-css-reset"><div class="w-bottom-bar-left w-css-reset" style="display: table-cell; vertical-align: top; position: relative; width: 0px;"><div class="w-bottom-bar-left-inner w-css-reset" style="height: 34px; position: relative; white-space: nowrap;"><div class="w-css-reset" data-handle="smallPlayButton" style="display: inline-block; vertical-align: top; pointer-events: auto;"><div class="w-vulcan-button-wrapper w-css-reset" style="display: inline-block; height: 34px; position: relative; vertical-align: top; width: 50px;"><button class="w-vulcan-v2-button w-css-reset w-css-reset-tree w-css-reset-button-important" aria-label="Play" title="Play" style="background: rgba(123, 121, 106, 0.95); box-shadow: none; cursor: pointer; height: 100%; position: relative; width: 100%; transition: opacity 400ms ease 0s; opacity: 1;"><div class="w-vulcan-icon-wrapper" data-handle="smallPlayButton" style="box-sizing: border-box; height: 100%;"><div style="height: 100%; width: 100%;"><div style="display: none; height: 100%; width: 100%;"><svg x="0px" y="0px" viewBox="0 0 51.556 34" enable-background="new 0 0 51.556 34" class="w-css-reset w-css-reset-tree" style="fill: rgb(255, 255, 255); height: 100%; left: 0px; stroke-width: 0px; top: 0px; width: 100%;"><g><rect x="20" y="11.3" width="3.5" height="12"></rect><rect x="26.5" y="11.3" width="3.5" height="12"></rect></g></svg></div><div style="display: block; height: 100%; width: 100%;"><svg x="0px" y="0px" viewBox="0 0 51.556 34" enable-background="new 0 0 51.556 34" class="w-css-reset w-css-reset-tree" style="fill: rgb(255, 255, 255); height: 100%; left: 0px; stroke-width: 0px; top: 0px; width: 100%;"><polygon points="31.555999999999997,16.5 20,24 20,9"></polygon></svg></div></div></div></button></div></div></div></div><div class="w-bottom-bar-middle w-css-reset" style="display: table-cell; vertical-align: top; position: relative; width: 100%;"><div class="w-bottom-bar-middle-inner w-css-reset" style="height: 34px; position: relative; white-space: nowrap;"><div class="w-css-reset" data-handle="lowerPlaybar" style="height: 100%; pointer-events: auto;"><div class="w-playbar-wrapper w-css-reset w-css-reset-tree" role="slider" aria-label="Playbar" aria-orientation="horizontal" aria-valuenow="0" aria-valuemin="0" aria-valuemax="1791.96" aria-valuetext="0:00" tabindex="0" style="cursor: pointer; height: 100%; outline: none; position: relative;"><div style="display: block; height: 100%; overflow: hidden; pointer-events: none; position: relative; width: 563px;"><canvas width="1126" height="68" style="height: 34px; left: 0px; pointer-events: none; position: absolute; top: 0px; width: 563px;"></canvas></div><div class="w-playbar__hoverMarker" style="background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.12) 100%); display: none; height: 100%; left: -36px; pointer-events: none; position: absolute; top: 0px; width: 36px;"></div><div class="w-playbar__focus-border" style="border: 2px solid rgb(255, 255, 255); display: none; height: 100%; left: 0px; pointer-events: none; position: absolute; top: 0px; width: 100%;"></div></div></div></div></div><div class="w-bottom-bar-right w-css-reset" style="display: table-cell; vertical-align: top; position: relative; width: 0px;"><div class="w-bottom-bar-right-inner w-css-reset" style="height: 34px; position: relative; white-space: nowrap;"><div class="w-css-reset" data-handle="captionsButton" style="display: inline-block; vertical-align: top; pointer-events: auto;"><div class="w-vulcan-button-wrapper w-css-reset" style="display: inline-block; height: 34px; position: relative; vertical-align: top; width: 40px;"><button class="w-vulcan-v2-button w-css-reset w-css-reset-tree w-css-reset-button-important" aria-label="Show captions menu" title="Show captions menu" style="background: rgba(123, 121, 106, 0.95); box-shadow: none; cursor: pointer; height: 100%; position: relative; width: 100%; transition: opacity 400ms ease 0s; opacity: 1;"><div class="w-vulcan-icon-wrapper" data-handle="captionsButton" style="box-sizing: border-box; height: 100%;"><svg x="0px" y="0px" viewBox="0 0 40 34" enable-background="new 0 0 40 34" style="fill: rgb(255, 255, 255); height: 100%; left: 0px; stroke-width: 0px; top: 0px; width: 100%;"><g><path fill="none" stroke="#ffffff" stroke-linecap="round" stroke-miterlimit="10" stroke-width="1.8" d="M18.4,18.7c-0.5,0.7-1.1,1.2-2.1,1.2c-1.3,0-2.4-1.1-2.4-2.8c0-1.6,1-2.8,2.4-2.8c1,0,1.6,0.5,2,1.2"></path></g><g><path fill="none" stroke="#ffffff" stroke-linecap="round" stroke-miterlimit="10" stroke-width="1.8" d="M25.8,18.7c-0.5,0.7-1.1,1.2-2.1,1.2c-1.3,0-2.4-1.1-2.4-2.8c0-1.6,1-2.8,2.4-2.8c1,0,1.6,0.5,2,1.2"></path></g><g><path fill="none" stroke="#ffffff" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2" d="M31,21.9c0,1.6-1.4,3-3,3H12c-1.6,0-3-1.4-3-3V12c0-1.6,1.4-3,3-3h16c1.6,0,3,1.4,3,3V21.9z"></path></g></svg></div></button></div></div><div class="w-css-reset" data-handle="volumeButton" style="display: inline-block; vertical-align: top; pointer-events: auto;"><div class="w-vulcan-button-wrapper w-css-reset" style="display: inline-block; height: 34px; position: relative; vertical-align: top; width: 40px;"><button class="w-vulcan-v2-button w-css-reset w-css-reset-tree w-css-reset-button-important" aria-label="Mute" title="Mute" style="background: rgba(123, 121, 106, 0.95); box-shadow: none; cursor: pointer; height: 100%; position: relative; width: 100%; transition: opacity 400ms ease 0s; opacity: 1;"><div class="w-vulcan-icon-wrapper" data-handle="volumeButton" style="box-sizing: border-box; height: 100%;"><svg x="0px" y="0px" viewBox="0 0 40 34" enable-background="new 0 0 40 34" style="fill: rgb(255, 255, 255); height: 100%; left: 0px; stroke-width: 0px; top: 0px; width: 100%;"><g style="transform: translateX(1.25px); transition: transform 100ms ease 0s;"><g><path d="M13.8,14.2c-0.5,0.5-1.4,0.8-2,0.8h-1.6C9.5,15,9,15.5,9,16.2v1.6c0,0.7,0.5,1.2,1.2,1.2h1.6c0.7,0,1.6,0.4,2,0.8l2.3,2.3c0.5,0.5,0.8,0.3,0.8-0.4v-9.6c0-0.7-0.4-0.8-0.8-0.4L13.8,14.2z"></path></g><g><path fill="none" stroke="#ffffff" stroke-line-cap="round" stroke-miterlimit="10" stroke-width="2" d="M22,11.7c0,0,1.1,2.5,1.1,5s-1.1,5-1.1,5" style="opacity: 1; transition: opacity 100ms ease 0s;"></path><path fill="none" stroke="#ffffff" stroke-line-cap="round" stroke-miterlimit="10" stroke-width="2" d="M25.8,9.2c0,0,1.7,3.8,1.7,7.5c0,3.7-1.7,7.5-1.7,7.5" style="opacity: 1; transition: opacity 100ms ease 0s;"></path></g><g style="opacity: 0; transition: opacity 100ms ease 0s;"><line fill="none" stroke="#ffffff" stroke-line-cap="round" stroke-miterlimit="10" stroke-width="1.8102" x1="19.2" y1="15" x2="23.2" y2="19"></line><line fill="none" stroke="#ffffff" stroke-line-cap="round" stroke-miterlimit="10" stroke-width="1.8102" x1="19.2" y1="19" x2="23.2" y2="15"></line></g></g></svg></div></button></div></div><div class="w-css-reset" data-handle="settingsButton" style="display: inline-block; vertical-align: top; pointer-events: auto;"><div class="w-vulcan-button-wrapper w-css-reset" style="display: inline-block; height: 34px; position: relative; vertical-align: top; width: 40px;"><button class="w-vulcan-v2-button w-css-reset w-css-reset-tree w-css-reset-button-important" aria-label="Settings" title="Settings" style="background: rgba(123, 121, 106, 0.95); box-shadow: none; cursor: pointer; height: 100%; position: relative; width: 100%; transition: opacity 400ms ease 0s; opacity: 1;"><div class="w-vulcan-icon-wrapper" data-handle="settingsButton" style="box-sizing: border-box; height: 100%;"><svg x="0px" y="0px" viewBox="0 0 40 34" enable-background="new 0 0 40 34" style="fill: rgb(255, 255, 255); height: 100%; left: 0px; stroke-width: 0px; top: 0px; width: 100%;"><g><g><path d="M28.3,16.4h-1.9c-0.4,0-0.8-0.3-0.9-0.7l-0.4-1.1c-0.2-0.3-0.1-0.8,0.2-1.1l1.3-1.3c0.3-0.3,0.3-0.7,0-1l-0.4-0.4c-0.3-0.3-0.7-0.3-1,0l-1.3,1.3c-0.3,0.3-0.8,0.3-1.1,0.1l-1.1-0.5c-0.4-0.1-0.7-0.5-0.7-0.9V9.1c0-0.4-0.3-0.7-0.7-0.7h-0.6c-0.4,0-0.7,0.3-0.7,0.7v1.7c0,0.4-0.3,0.8-0.7,0.9l-1.2,0.5c-0.3,0.2-0.8,0.1-1.1-0.2l-1.2-1.2c-0.3-0.3-0.7-0.3-1,0l-0.4,0.4c-0.3,0.3-0.3,0.7,0,1l1.2,1.2c0.3,0.3,0.3,0.8,0.1,1.1l-0.5,1.2c-0.1,0.4-0.5,0.7-0.9,0.7h-1.6c-0.4,0-0.7,0.3-0.7,0.7v0.6c0,0.4,0.3,0.7,0.7,0.7h1.6c0.4,0,0.8,0.3,0.9,0.7l0.5,1.2c0.2,0.3,0.1,0.8-0.1,1.1l-1.2,1.2c-0.3,0.3-0.3,0.7,0,1l0.4,0.4c0.3,0.3,0.7,0.3,1,0l1.2-1.2c0.3-0.3,0.8-0.3,1.1-0.2l1.2,0.5c0.4,0.1,0.7,0.5,0.7,0.9v1.7c0,0.4,0.3,0.7,0.7,0.7h0.6c0.4,0,0.7-0.3,0.7-0.7V24c0-0.4,0.3-0.8,0.7-0.9l1.1-0.5c0.3-0.2,0.8-0.1,1.1,0.1l1.3,1.3c0.3,0.3,0.7,0.3,1,0l0.4-0.4c0.3-0.3,0.3-0.7,0-1l-1.3-1.3C25,21,25,20.5,25.1,20.2l0.4-1.1c0.1-0.4,0.5-0.7,0.9-0.7h1.9c0.4,0,0.7-0.3,0.7-0.7v-0.6C29,16.7,28.7,16.4,28.3,16.4z M23.8,17.5c0,2.2-1.8,3.9-3.9,3.9c-2.2,0-3.9-1.8-3.9-3.9s1.7-3.9,3.9-3.9C22.1,13.6,23.8,15.3,23.8,17.5z"></path></g></g></svg></div></button></div></div><div class="w-css-reset" data-handle="fullscreenButton" style="display: inline-block; vertical-align: top; pointer-events: auto;"><div class="w-vulcan-button-wrapper w-css-reset" style="display: inline-block; height: 34px; position: relative; vertical-align: top; width: 40px;"><button class="w-vulcan-v2-button w-css-reset w-css-reset-tree w-css-reset-button-important" aria-label="Fullscreen" title="Fullscreen" style="background: rgba(123, 121, 106, 0.95); box-shadow: none; cursor: pointer; height: 100%; position: relative; width: 100%; transition: opacity 400ms ease 0s; opacity: 1;"><div class="w-vulcan-icon-wrapper" data-handle="fullscreenButton" style="box-sizing: border-box; height: 100%;"><svg x="0px" y="0px" viewBox="0 0 40 34" enable-background="new 0 0 40 34" style="fill: rgb(255, 255, 255); height: 100%; left: 0px; stroke-width: 0px; top: 0px; width: 100%;"><g><g><polyline fill="none" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="31.4,12.6 31.4,8.7 25.8,8.7"></polyline><polyline fill="none" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="14.7,8.7 9.1,8.7 9.1,12.6"></polyline><polyline fill="none" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="25.8,24.8 31.4,24.8 31.4,20.9"></polyline><polyline fill="none" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" points="9.1,20.9 9.1,24.8 14.7,24.8"></polyline></g><rect x="13.7" y="12.3" fill="none" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10" enable-background="new" width="13.3" height="8.9"></rect></g></svg></div></button></div></div></div></div></div></div><div class="w-foreground w-css-reset" style="height: 100%; left: 0px; pointer-events: none; position: absolute; top: 0px; width: 100%;"><div class="w-css-reset" data-handle="contextMenu" style="pointer-events: auto;"></div><div class="w-css-reset" data-handle="loadingHourglass" style="pointer-events: auto;"></div></div><div class="w-focus-border" style="border: 2px solid rgb(255, 255, 255); box-sizing: border-box; display: none; height: 100%; left: 0px; pointer-events: none; position: absolute; top: 0px; width: 100%;"></div></div></div></div><div id="wistia_grid_31_front"></div><div id="wistia_grid_31_top_inside"><div id="wistia_grid_31_top" style="height: 0px; font-size: 0px; line-height: 0px;"> </div></div><div id="wistia_grid_31_bottom_inside"><div id="wistia_grid_31_bottom" style="height: 0px; font-size: 0px; line-height: 0px;"> </div></div><div id="wistia_grid_31_left_inside"><div id="wistia_grid_31_left" style="height: 0px; font-size: 0px; line-height: 0px;"> </div></div><div id="wistia_grid_31_right_inside"><div id="wistia_grid_31_right" style="height: 0px; font-size: 0px; line-height: 0px;"> </div></div></div><div id="wistia_grid_31_below" style="height: 0px; font-size: 0px; line-height: 0px;"> </div><style id="wistia_32_style" type="text/css" class="wistia_injected_style">#wistia_grid_31_wrapper{-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;font-family:Arial,sans-serif;font-size:14px;height:100%;position:relative;text-align:left;width:100%;}
#wistia_grid_31_wrapper *{-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}
#wistia_grid_31_above{position:relative;}
#wistia_grid_31_main{display:block;height:100%;position:relative;}
#wistia_grid_31_behind{height:100%;left:0;position:absolute;top:0;width:100%;}
#wistia_grid_31_center{height:100%;overflow:hidden;position:relative;width:100%;}
#wistia_grid_31_front{display:none;height:100%;left:0;position:absolute;top:0;width:100%;}
#wistia_grid_31_top_inside{position:absolute;left:0;top:0;width:100%;}
#wistia_grid_31_top{width:100%;position:absolute;bottom:0;left:0;}
#wistia_grid_31_bottom_inside{position:absolute;left:0;bottom:0;width:100%;}
#wistia_grid_31_bottom{width:100%;position:absolute;top:0;left:0;}
#wistia_grid_31_left_inside{height:100%;position:absolute;left:0;top:0;}
#wistia_grid_31_left{height:100%;position:absolute;right:0;top:0;}
#wistia_grid_31_right_inside{height:100%;right:0;position:absolute;top:0;}
#wistia_grid_31_right{height:100%;left:0;position:absolute;top:0;}
#wistia_grid_31_below{position:relative;}</style></div></div></div><div id="element_889056"></div></div>
</div>
<div class="col-md-6 video-col">
<div id="slideshow-player" class="slideshow-player flex-video widescreen"><script type="text/javascript" async="" src="https://speakerdeck.com/assets/embed.js" class="speakerdeck-embed" data-id="96bf694d3edb4139afb0cc57019b4d28"></script></div>
</div>
</div>
<div class="related-articles col-xs-12 col-sm-10 col-sm-push-1 col-md-8 col-md-push-2 hidden-xs">
<div class="col-xs-12 text-center hidden-xs">
<h4>Featured News</h4>
</div>
<div class="row">
<p class="visible-xs featured-text text-center">Featured News</p>
<div class="col-xs-12 col-sm-4">
<figure>
<div class="article col-xs-12 card js-post-toggle">
<div class="post quick" data-tags="realm growth">
<div class="article-block flex center column">
<a class="post quick header-image" data-filter-section="1" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;default-article&#39;, &#39;News&#39;);" href="https://academy.realm.io/posts/5g-is-coming-faster-but-what-else-is-needed/">
<img class="col-xs-12 article-img" src="./Advanced Graphics with Core Animation_files/image.jpg" alt="Image">
</a> <a class="news-headline col-xs-12 text-left" href="https://academy.realm.io/posts/5g-is-coming-faster-but-what-else-is-needed/">
5G is coming: Faster – But What Else is Ne...
</a> <div class="excerpt col-xs-12 text-left">
<div class="info">
<span class="meta-info">
by
<a class="twitter-handle" href="https://twitter.com/davidhratner">David Ratner</a>
</span>
</div>
</div>
</div>
</div>
</div>
</figure>
</div>
<div class="col-xs-12 col-sm-4">
<figure>
<div class="article col-xs-12 card js-post-toggle">
<div class="post quick" data-tags="realm">
<div class="article-block flex center column">
<a class="post quick header-image" data-filter-section="1" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;default-article&#39;, &#39;News&#39;);" href="https://academy.realm.io/posts/building-modern-swift-apps-with-realm-database/">
<img class="col-xs-12 article-img" src="./Advanced Graphics with Core Animation_files/share-image.png" alt="Share image">
</a> <a class="news-headline col-xs-12 text-left" href="https://academy.realm.io/posts/building-modern-swift-apps-with-realm-database/">
Building Modern Swift Apps with Realm Data...
</a> <div class="excerpt col-xs-12 text-left">
<div class="info">
<span class="meta-info">
by
<a class="twitter-handle" href="https://twitter.com/icanzilb">Marin Todorov</a>
</span>
</div>
</div>
</div>
</div>
</div>
</figure>
</div>
<div class="col-xs-12 col-sm-4">
<figure>
<div class="article col-xs-12 card js-post-toggle">
<div class="post quick" data-tags="apple">
<div class="article-block flex center column">
<a class="post quick header-image" data-filter-section="1" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;default-article&#39;, &#39;News&#39;);" href="https://academy.realm.io/posts/offline-experience-issues-with-the-travel-mobile-apps/">
<img class="col-xs-12 article-img" src="./Advanced Graphics with Core Animation_files/anete-lusina-609863-unsplash.jpg" alt="Anete lusina 609863 unsplash">
</a> <a class="news-headline col-xs-12 text-left" href="https://academy.realm.io/posts/offline-experience-issues-with-the-travel-mobile-apps/">
Offline experience issues with the travel ...
</a> <div class="excerpt col-xs-12 text-left">
<div class="info">
<span class="meta-info">
by
<a class="twitter-handle" href="https://twitter.com/davidhratner">David Ratner</a>
</span>
</div>
</div>
</div>
</div>
</div>
</figure>
</div>
</div>
<div class="col-xs-12 text-center news-button">
<a class="btn btn-large btn-outline" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;related-article-news-index&#39;, &#39;Post&#39;);" href="https://academy.realm.io/">
See more
</a></div>\
</div>
</div>
<div id="background" class="close-video"></div>
</div>
</main>
<script type="text/javascript" id="">!function(b,e,f,g,a,c,d){b.fbq||(a=b.fbq=function(){a.callMethod?a.callMethod.apply(a,arguments):a.queue.push(arguments)},b._fbq||(b._fbq=a),a.push=a,a.loaded=!0,a.version="2.0",a.queue=[],c=e.createElement(f),c.async=!0,c.src=g,d=e.getElementsByTagName(f)[0],d.parentNode.insertBefore(c,d))}(window,document,"script","https://connect.facebook.net/en_US/fbevents.js");fbq("init","584900264991316");fbq("track","PageView");</script>
<noscript><img height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=584900264991316&amp;ev=PageView&amp;noscript=1"></noscript>


<script type="text/javascript" id="">(function(){window._pa=window._pa||{};var a=document.createElement("script");a.type="text/javascript";a.async=!0;a.src=("https:"==document.location.protocol?"https:":"http:")+"//tag.marinsm.com/serve/57c0b3e503f61e6a9600001a.js";var b=document.getElementsByTagName("script")[0];b.parentNode.insertBefore(a,b)})();</script><script type="text/javascript" id="gtm-scroll-tracking">(function(h,l,a){function q(){if(!h.querySelector||!h.body.getBoundingClientRect)return!1;a.dataLayerName=a.dataLayerName||"dataLayer";a.distances=a.distances||{};u();r(l,"scroll",y(u,500))}function v(k,a,f,b,d){var e;for(e=0;e<a.length;e++){var c=parseInt(a[e],10),g="%"!==f?c+d:c/100*b+d;c+=f;g<=b+d&&(k[c]=g)}return k}function w(a,g){var k=parseInt(a,10),b=g/k,d=[],e;for(e=1;e<b+1;e++)d.push(e*k);return d}function u(){var k=x(a.bottom),g=x(a.top);var f=h.body;var b=h.documentElement;f=Math.max(f.scrollHeight,
f.offsetHeight,b.clientHeight,b.scrollHeight,b.offsetHeight);g&&(f-=g);k&&(f=k-(g||0));f-=5;b=g||0;var d=z()||{},e=[],c=[],m;if(a.distances.percentages&&(a.distances.percentages.each&&(e=e.concat(a.distances.percentages.each)),a.distances.percentages.every))for(m=0;m<a.distances.percentages.every.length;m++)e=w(a.distances.percentages.every[m],100),e=c.concat(e);if(a.distances.pixels&&(a.distances.pixels.each&&(c=c.concat(a.distances.pixels.each)),a.distances.pixels.every))for(m=0;m<a.distances.pixels.every.length;m++){var A=
w(a.distances.pixels.every[m],f);c=c.concat(A)}d=v(d,e,"%",f,b);f=d=v(d,c,"px",f,b);b=void 0!==l.pageXOffset;d="CSS1Compat"===(h.compatMode||"");b=b?l.pageYOffset:d?h.documentElement.scrollTop:h.body.scrollTop;b=parseInt(b,10);d=parseInt;c="CSS1Compat"===h.compatMode?h.documentElement:h.body;c=c.clientHeight;b+=d(c,10);for(var p in f)if(d=f[p],b>d&&!n[p]&&d<(k||Infinity)&&d>(g||0))if(n[p]=!0,d=p,c=l.GoogleAnalyticsObject,"undefined"===typeof l[a.dataLayerName]||a.forceSyntax)if("function"===typeof l[c]&&
"function"===typeof l[c].getAll&&2!==a.forceSyntax)l[c]("send","event",a.category,d,a.label,{nonInteraction:1});else"undefined"!==typeof l._gaq&&1!==a.forceSyntax&&l._gaq.push(["_trackEvent",a.category,d,a.label,0,!0]);else l[a.dataLayerName].push({event:"scrollTrackingDesktop",attributes:{distance:d,label:a.label}})}function x(a){if("number"===typeof a||parseInt(a,10))return parseInt(a,10);try{var k=1===a.nodeType?a:h.querySelector(a);return t(k)}catch(f){}}function y(a,g){var k,b,d,e=null,c=0,h=
function(){c=new Date;e=null;d=a.apply(k,b)};return function(){var f=new Date;c||(c=f);var m=g-(f-c);k=this;b=arguments;0>=m?(clearTimeout(e),e=null,c=f,d=a.apply(k,b)):e||(e=setTimeout(h,m));return d}}function r(a,g,f){if(a.addEventListener)a.addEventListener(g,f);else if(a.attachEvent)a.attachEvent("on"+g,function(b){f.call(a,b)});else if("undefined"===typeof a["on"+g]||null===a["on"+g])a["on"+g]=function(b){f.call(a,b)}}function t(a){a=a.getBoundingClientRect().top;var k=void 0!==l.pageYOffset?
l.pageYOffset:(h.documentElement||h.body.parentNode||h.body).scrollTop;return a+k}var n={};!a.distances.percentages||!a.distances.percentages.every||a.distances.percentages.every instanceof Array||(a.distances.percentages.every=[a.distances.percentages.every]);!a.distances.pixels||!a.distances.pixels.every||a.distances.pixels.every instanceof Array||(a.distances.pixels.every=[a.distances.pixels.every]);var z=function(a){function g(){var d,e,c;f={};if(a.each)for(c=0;c<a.each.length;c++){var b=a.each[c];
n[b]||(d=h.querySelector(b))&&(f[b]=t(d))}if(a.every)for(c=0;c<a.every.length;c++){b=a.every[c];var g=h.querySelectorAll(b);if(g.length&&!n[b+":"+(g.length-1)])for(e=0;e<g.length;e++){var k=b+":"+e;n[k]||(d=g[e],f[k]=t(d))}}}if(a){var f={},b=0;g();return function(){var a={},e;b++;10<b&&(g(),b=0);for(e in f)a[e]=f[e];return a}}}(a.distances.elements);"loading"!==h.readyState?q():h.addEventListener?r(h,"DOMContentLoaded",q):r(l,"load",q)})(document,window,{forceSyntax:!1,dataLayerName:!1,distances:{percentages:{each:[90],
every:[]},pixels:{each:[],every:[]},elements:{each:[".sub-bar-ad"],every:[]}},top:null,bottom:null,category:"Scroll Tracking",label:google_tag_manager["GTM-NDCSRV"].macro(2)});</script>
<footer class="footer col-xs-12">
<div class="grid container">
<div class="col-xs-12 col-sm-3">
<ul class="footer-links flex column">
<p class="footer-header">Products<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="113px" height="91px" viewBox="0 0 113 91" version="1.1">

<title>Triangle</title>
<desc>Created with Sketch.</desc>
<defs></defs>
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M48.1213694,86.1397763 L2.07164553,15.4588048 C-0.943169094,10.8314149 0.364081448,4.63618405 4.99147134,1.62136942 C6.61548616,0.563299157 8.5119942,0 10.4502761,0 L102.549724,0 C108.072571,0 112.549724,4.4771525 112.549724,10 C112.549724,11.9382819 111.986425,13.83479 110.928354,15.4588048 L64.8786306,86.1397763 C61.863816,90.7671662 55.6685851,92.0744168 51.0411952,89.0596021 C49.8753855,88.3000594 48.8809121,87.305586 48.1213694,86.1397763 Z" id="Triangle" fill="#1D2340"></path>
</g>
</svg>
</p>
<ul class="footer-links flex column">
<li class="light-text"><a href="https://realm.io/products/realm-platform">Realm Platform</a></li>
<li class="light-text"><a href="https://realm.io/products/realm-database">Realm Database</a></li>
<li class="light-text"><a href="https://realm.io/products/realm-studio">Realm Studio</a></li>
</ul>
<br>
<p class="footer-header"><a href="https://realm.io/pricing">Pricing</a></p>
<br>
<p class="footer-header">Solutions<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="113px" height="91px" viewBox="0 0 113 91" version="1.1">

<title>Triangle</title>
<desc>Created with Sketch.</desc>
<defs></defs>
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M48.1213694,86.1397763 L2.07164553,15.4588048 C-0.943169094,10.8314149 0.364081448,4.63618405 4.99147134,1.62136942 C6.61548616,0.563299157 8.5119942,0 10.4502761,0 L102.549724,0 C108.072571,0 112.549724,4.4771525 112.549724,10 C112.549724,11.9382819 111.986425,13.83479 110.928354,15.4588048 L64.8786306,86.1397763 C61.863816,90.7671662 55.6685851,92.0744168 51.0411952,89.0596021 C49.8753855,88.3000594 48.8809121,87.305586 48.1213694,86.1397763 Z" id="Triangle" fill="#1D2340"></path>
</g>
</svg>
</p>
<li class="light-text">
<a href="https://realm.io/solutions/realtime-collaboration">Realtime Collaboration</a>
</li>
<li class="light-text">
<a href="https://realm.io/solutions/api-mobilization">API Mobilization</a>
</li>
<li class="light-text">
<a href="https://realm.io/solutions/offline-first">Offline First</a>
</li>
<li class="light-text">
<a href="https://realm.io/addons">Add-ons</a>
</li>
</ul>
</div>
<div class="col-xs-12 col-sm-3">
<ul class="footer-links flex column">
<a href="https://realm.io/docs"><p class="footer-header">Docs<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="113px" height="91px" viewBox="0 0 113 91" version="1.1">

<title>Triangle</title>
<desc>Created with Sketch.</desc>
<defs></defs>
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M48.1213694,86.1397763 L2.07164553,15.4588048 C-0.943169094,10.8314149 0.364081448,4.63618405 4.99147134,1.62136942 C6.61548616,0.563299157 8.5119942,0 10.4502761,0 L102.549724,0 C108.072571,0 112.549724,4.4771525 112.549724,10 C112.549724,11.9382819 111.986425,13.83479 110.928354,15.4588048 L64.8786306,86.1397763 C61.863816,90.7671662 55.6685851,92.0744168 51.0411952,89.0596021 C49.8753855,88.3000594 48.8809121,87.305586 48.1213694,86.1397763 Z" id="Triangle" fill="#1D2340"></path>
</g>
</svg>
</p></a>
<li class="light-text">
<a href="https://realm.io/docs/realm-object-server/latest">Realm Platform</a>
</li>
<li class="light-text">
<a href="https://realm.io/docs/java/latest">Java</a>
</li>
<li class="light-text">
<a href="https://realm.io/docs/swift/latest">Swift</a>
</li>
<li class="light-text">
<a href="https://realm.io/docs/objc/latest">Objective‑C</a>
</li>
<li class="light-text">
<a href="https://realm.io/docs/javascript/latest">JavaScript</a>
</li>
<li class="light-text">
<a href="https://realm.io/docs/dotnet/latest">.NET</a>
</li>
<br>
<a href="https://realm.io/support"><p class="footer-header">Support<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="113px" height="91px" viewBox="0 0 113 91" version="1.1">

<title>Triangle</title>
<desc>Created with Sketch.</desc>
<defs></defs>
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M48.1213694,86.1397763 L2.07164553,15.4588048 C-0.943169094,10.8314149 0.364081448,4.63618405 4.99147134,1.62136942 C6.61548616,0.563299157 8.5119942,0 10.4502761,0 L102.549724,0 C108.072571,0 112.549724,4.4771525 112.549724,10 C112.549724,11.9382819 111.986425,13.83479 110.928354,15.4588048 L64.8786306,86.1397763 C61.863816,90.7671662 55.6685851,92.0744168 51.0411952,89.0596021 C49.8753855,88.3000594 48.8809121,87.305586 48.1213694,86.1397763 Z" id="Triangle" fill="#1D2340"></path>
</g>
</svg>
</p></a>
<li class="light-text">
<a href="https://realm.io/support" onclick="ga(&#39;send&#39;, &#39;event&#39;, &#39;Link&#39;, &#39;news&#39;, &#39;Footer&#39;);">Overview</a>
</li>
<li class="light-text">
<a href="https://forums.realm.io/">Forums</a>
</li>
</ul>
</div>
<div class="col-xs-12 col-sm-3 footer-links">
<p class="footer-header"><a href="https://blog.realm.io/">Blog</a></p>
<br>
<p class="footer-header"><a href="https://academy.realm.io/">Academy</a></p>
<br>
<p class="footer-header">Communities<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="113px" height="91px" viewBox="0 0 113 91" version="1.1">

<title>Triangle</title>
<desc>Created with Sketch.</desc>
<defs></defs>
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M48.1213694,86.1397763 L2.07164553,15.4588048 C-0.943169094,10.8314149 0.364081448,4.63618405 4.99147134,1.62136942 C6.61548616,0.563299157 8.5119942,0 10.4502761,0 L102.549724,0 C108.072571,0 112.549724,4.4771525 112.549724,10 C112.549724,11.9382819 111.986425,13.83479 110.928354,15.4588048 L64.8786306,86.1397763 C61.863816,90.7671662 55.6685851,92.0744168 51.0411952,89.0596021 C49.8753855,88.3000594 48.8809121,87.305586 48.1213694,86.1397763 Z" id="Triangle" fill="#1D2340"></path>
</g>
</svg>
</p>
<ul class="footer-links flex column">
<li class="light-text">
<a href="https://realm.io/communities/java">Java</a>
</li>
<li class="light-text">
<a href="https://realm.io/communities/objective-c">Objective‑C</a>
</li>
<li class="light-text">
<a href="https://realm.io/communities/react-native">JavaScript</a>
</li>
<li class="light-text">
<a href="https://realm.io/communities/swift">Swift</a>
</li>
<li class="light-text">
<a href="https://realm.io/communities/xamarin">Xamarin</a>
</li>
</ul>
<br>
<p class="footer-header"><a href="https://realm.io/realm-report">Realm Report</a></p>
</div>
<div class="col-xs-12 col-sm-3">
<p class="footer-header">Company<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="113px" height="91px" viewBox="0 0 113 91" version="1.1">

<title>Triangle</title>
<desc>Created with Sketch.</desc>
<defs></defs>
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M48.1213694,86.1397763 L2.07164553,15.4588048 C-0.943169094,10.8314149 0.364081448,4.63618405 4.99147134,1.62136942 C6.61548616,0.563299157 8.5119942,0 10.4502761,0 L102.549724,0 C108.072571,0 112.549724,4.4771525 112.549724,10 C112.549724,11.9382819 111.986425,13.83479 110.928354,15.4588048 L64.8786306,86.1397763 C61.863816,90.7671662 55.6685851,92.0744168 51.0411952,89.0596021 C49.8753855,88.3000594 48.8809121,87.305586 48.1213694,86.1397763 Z" id="Triangle" fill="#1D2340"></path>
</g>
</svg>
</p>
<ul class="footer-links flex column">
<li class="light-text">
<a href="https://realm.io/about">About</a>
</li>
<li class="light-text">
<a href="https://realm.io/customers/">Customers</a>
</li>
<li class="light-text">
<a href="https://realm.io/jobs/">Jobs</a>
</li>
<li class="light-text">
<a href="https://realm.io/press">Press</a>
</li>
<li class="light-text">
<a href="https://realm.io/legal">Legal</a>
</li>
<li class="light-text">
<a href="https://realm.io/contact">Contact</a>
</li>
<li class="col-xs-12 footer-sub desktop">
<button data-toggle="modal" data-target="#subbarBtnFooter" class="btn btn-indigo flex center">
<svg width="27px" height="20px" viewBox="0 0 27 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="Artboard" fill-rule="nonzero" fill="#FFFFFF">
<path d="M13.4994368,11 L0,0 L27,0 L13.4994368,11 Z M7,8.96800256 L0,3 L0,17 L7,8.96800256 Z M20,8.96800256 L27,17 L27,3 L20,8.96800256 Z M17.8594924,10 L13.5,13.5431736 L9.1405076,10 L0,20 L27,20 L17.8594924,10 L17.8594924,10 Z" id="Shape"></path>
</g>
</g>
</svg>
Subscribe
</button>
<div id="subbarBtnFooter" class="modal" tabindex="-1" role="dialog" aria-labelledby="sub-news">
<div class="modal-dialog" role="document">
<div class="modal-content col-xs-12">
<div class="modal-header col-xs-12">
<button type="button" class="close" data-dismiss="modal" aria-label="Close">
<span aria-hidden="true">×</span>
</button>
</div>
<div class="modal-body col-xs-12 text-center">
<div class="col-xs-12">
<p class="modal-title" id="subTitleText"></p><h3 id="get-the-latest-news-in-your-inbox-every-week">Get the latest news in your inbox every week</h3>
<p>Subscribe for Realm tutorials, new features, and company announcements</p>
<p></p>
<form action="https://go.pardot.com/l/210132/2017-08-09/9ddl8?success_location=https%3A%2F%2Facademy.realm.io%2Fposts%2Ftryswift-tim-oliver-advanced-graphics-with-core-animation%2F%3Fw%3D1" method="post" class="validate">
<div class="input-group input-group-lg col-xs-12"><input type="email" value="" name="email" required="" class="required email home-newsletter-email-input col-sm-12" style="min-height: 46px;" placeholder="Enter your email">
<span class="input-group-btn">
<button type="submit" name="subscribe" style="border-radius:6px;" class="btn btn-indigo btn-subscribe">Subscribe</button>
</span>
</div>
</form>
</div>
</div>
</div>
</div>
</div>
<ul class="social footer-links flex center xs-column">
<li class="social flex center">
<a class="flex center column col-xs-12" href="https://realm.github.io/" title="GitHub">
<svg width="25px" height="25px" viewBox="0 0 25 25" class="footer-icon github">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M1,12.5 C1,17.5810833 4.29475,21.8916667 8.86504167,23.4125417 C9.43908333,23.5189167 9.625,23.1624167 9.625,22.8595833 L9.625,20.7186667 C6.42608333,21.4144167 5.76004167,19.3616667 5.76004167,19.3616667 C5.23679167,18.0324583 4.48258333,17.6788333 4.48258333,17.6788333 C3.43895833,16.964875 4.562125,16.9802083 4.562125,16.9802083 C5.71691667,17.0607083 6.3245,18.1656667 6.3245,18.1656667 C7.34991667,19.92325 9.01454167,19.4153333 9.671,19.121125 C9.77354167,18.3784167 10.0715833,17.8705 10.40125,17.5839583 C7.84729167,17.2916667 5.16204167,16.3055417 5.16204167,11.9000833 C5.16204167,10.6437083 5.6115,9.61829167 6.34654167,8.81329167 C6.22770833,8.52291667 5.83383333,7.35279167 6.45866667,5.769625 C6.45866667,5.769625 7.42466667,5.46104167 9.622125,6.948375 C10.53925,6.69345833 11.5225,6.566 12.5,6.56120833 C13.4775,6.566 14.4617083,6.69345833 15.38075,6.948375 C17.5762917,5.46104167 18.540375,5.769625 18.540375,5.769625 C19.1661667,7.35375 18.7722917,8.523875 18.6534583,8.81329167 C19.391375,9.61829167 19.837,10.6446667 19.837,11.9000833 C19.837,16.3170417 17.1469583,17.28975 14.5862917,17.574375 C14.998375,17.930875 15.375,18.6304583 15.375,19.7037917 L15.375,22.8595833 C15.375,23.1652917 15.559,23.5246667 16.142625,23.4115833 C20.7090833,21.8887917 24,17.5791667 24,12.5 C24,6.149125 18.850875,1 12.5,1 C6.15008333,1 1,6.149125 1,12.5 Z" id="GitHub" fill="#1C233F"></path>
</g>
</svg>
</a>
</li>
<li class="social flex center">
<a class="flex center column col-xs-12" href="https://twitter.com/realm" title="Twitter">
<svg width="25px" height="25px" viewBox="0 0 25 25" class="footer-icon twitter">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M24,5.42915 C23.1537917,5.80155 22.2443333,6.05235 21.2898333,6.1654 C22.2644583,5.58685 23.0129167,4.6701 23.364625,3.5776 C22.45325,4.1134 21.4431667,4.5029 20.3679167,4.71285 C19.5082917,3.8037 18.2806667,3.2356 16.9236667,3.2356 C13.877125,3.2356 11.6384583,6.0533 12.3265417,8.97835 C8.406,8.7836 4.92916667,6.9216 2.601375,4.09155 C1.365125,6.1939 1.96025,8.94415 4.06091667,10.33685 C3.2885,10.31215 2.56016667,10.1022 1.92479167,9.75165 C1.87304167,11.9186 3.43991667,13.9459 5.70925,14.39715 C5.045125,14.57575 4.31775,14.61755 3.57791667,14.47695 C4.17783333,16.33515 5.92008333,17.687 7.98625,17.725 C6.0025,19.26685 3.50316667,19.9556 1,19.663 C3.08820833,20.99015 5.56933333,21.7644 8.2335,21.7644 C16.9945833,21.7644 21.944375,14.42945 21.645375,7.8507 C22.5672917,7.19045 23.3675,6.3668 24,5.42915 L24,5.42915 Z" id="Twitter" fill="#1C233F"></path>
</g>
</svg>
</a>
</li>
<li class="social flex center">
<a class="flex center column col-xs-12" href="https://plus.google.com/+RealmPlatform" title="Google+">
<svg width="25px" height="25px" viewBox="0 0 25 25" class="footer-icon google-plus">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="iconmonstr-google-plus-4" fill="#1C233F">
<path d="M12.5,0 C5.596875,0 0,5.596875 0,12.5 C0,19.403125 5.596875,25 12.5,25 C19.403125,25 25,19.403125 25,12.5 C25,5.596875 19.403125,0 12.5,0 L12.5,0 Z M9.46145833,16.753125 C7.109375,16.753125 5.20833333,14.8520833 5.20833333,12.5 C5.20833333,10.1479167 7.109375,8.246875 9.46145833,8.246875 C10.6104167,8.246875 11.5697917,8.665625 12.3104167,9.35833333 L11.1572917,10.4708333 C10.840625,10.1666667 10.2885417,9.81458333 9.46145833,9.81458333 C8.009375,9.81458333 6.825,11.0177083 6.825,12.5010417 C6.825,13.984375 8.01041667,15.1875 9.46145833,15.1875 C11.1447917,15.1875 11.778125,13.9770833 11.8739583,13.3520833 L9.46145833,13.3520833 L9.46145833,11.89375 L13.4770833,11.89375 C13.5145833,12.10625 13.54375,12.31875 13.54375,12.5989583 C13.5447917,15.028125 11.915625,16.753125 9.46145833,16.753125 L9.46145833,16.753125 Z M19.7916667,13.1072917 L17.96875,13.1072917 L17.96875,14.9302083 L16.753125,14.9302083 L16.753125,13.1072917 L14.9302083,13.1072917 L14.9302083,11.8927083 L16.753125,11.8927083 L16.753125,10.0697917 L17.96875,10.0697917 L17.96875,11.8927083 L19.7916667,11.8927083 L19.7916667,13.1072917 L19.7916667,13.1072917 Z" id="Shape"></path>
</g>
</g>
</svg>
</a>
</li>
 <li class="social flex center">
<a class="flex center column col-xs-12" href="https://www.facebook.com/realmplatform/" title="Facebook">
<svg width="25px" height="25px" viewBox="0 0 25 25" class="footer-icon facebook">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="F_icon" transform="translate(1.000000, 1.000000)" fill="#1C233F">
<g id="Layer_1">
<path d="M21.6752355,22.9384595 C22.372695,22.9384595 22.9382819,22.3728726 22.9382819,21.6752355 L22.9382819,1.31535135 C22.9382819,0.617625483 22.3727838,0.0522162162 21.6752355,0.0522162162 L1.31535135,0.0522162162 C0.617625483,0.0522162162 0.0522162162,0.617625483 0.0522162162,1.31535135 L0.0522162162,21.6752355 C0.0522162162,22.3727838 0.61753668,22.9384595 1.31535135,22.9384595 L21.6752355,22.9384595 Z M15.8432703,22.9384595 L15.8432703,14.0756448 L18.8180849,14.0756448 L19.2635212,10.6216486 L15.8432703,10.6216486 L15.8432703,8.41649035 C15.8432703,7.41647876 16.1209575,6.73500386 17.5549498,6.73500386 L19.3839382,6.73420463 L19.3839382,3.64492278 C19.0676216,3.60283012 17.9819151,3.50878764 16.7187799,3.50878764 C14.0817722,3.50878764 12.2764054,5.11843243 12.2764054,8.07442085 L12.2764054,10.6216486 L9.29395367,10.6216486 L9.29395367,14.0756448 L12.2764054,14.0756448 L12.2764054,22.9384595 L15.8432703,22.9384595 Z" id="Combined-Shape"></path>
</g>
</g>
</g>
</svg>
</a>
</li>
<li class="social flex center">
<a class="flex center column col-xs-12" href="https://www.linkedin.com/company/realm-inc" title="LinkedIn">
<svg width="25px" height="24px" viewBox="0 0 25 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="linkedin" fill-rule="nonzero" fill="#1C233F">
<path d="M5.1875,2.60416667 C5.1875,4.04270833 4.03125,5.20833333 2.60416667,5.20833333 C1.17708333,5.20833333 0.0208333333,4.04270833 0.0208333333,2.60416667 C0.0208333333,1.16666667 1.17708333,0 2.60416667,0 C4.03125,0 5.1875,1.16666667 5.1875,2.60416667 Z M5.20833333,7.29166667 L0,7.29166667 L0,23.9583333 L5.20833333,23.9583333 L5.20833333,7.29166667 Z M13.5229167,7.29166667 L8.34791667,7.29166667 L8.34791667,23.9583333 L13.5239583,23.9583333 L13.5239583,15.209375 C13.5239583,10.3447917 19.8041667,9.946875 19.8041667,15.209375 L19.8041667,23.9583333 L25,23.9583333 L25,13.4052083 C25,5.196875 15.70625,5.49583333 13.5229167,9.53645833 L13.5229167,7.29166667 Z" id="logo"></path>
</g>
</g>
</svg>
</a>
</li>
<li class="social flex center">
<div class="btn-group dropup">
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#" data-toggle="dropdown" class="dropdown-toggle flex center column" aria-haspopup="true" aria-expanded="false">
<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M6.503,20.752 C6.503,22.546 5.047,24 3.252,24 C1.456,24 4.4408921e-16,22.546 4.4408921e-16,20.752 C4.4408921e-16,18.958 1.456,17.504 3.252,17.504 C5.047,17.505 6.503,18.958 6.503,20.752 Z M0,8.18 L0,12.991 C6.05,13.053 10.96,17.957 11.022,24 L15.839,24 C15.777,15.29 8.721,8.242 0,8.18 Z M0,4.812 C10.58,4.858 19.152,13.406 19.183,24 L24,24 C23.97,10.769 13.245,0.046 0,0 L0,4.812 Z" id="rss" fill="#1D2340" fill-rule="nonzero"></path>
</g>
</svg>
</a>
<ul class="dropdown-menu dropdown-menu-right" role="menu">
<li class="col-xs-12">
<a href="https://blog.realm.io/feed.xml" class="flex rss-link">
<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M6.503,20.752 C6.503,22.546 5.047,24 3.252,24 C1.456,24 4.4408921e-16,22.546 4.4408921e-16,20.752 C4.4408921e-16,18.958 1.456,17.504 3.252,17.504 C5.047,17.505 6.503,18.958 6.503,20.752 Z M0,8.18 L0,12.991 C6.05,13.053 10.96,17.957 11.022,24 L15.839,24 C15.777,15.29 8.721,8.242 0,8.18 Z M0,4.812 C10.58,4.858 19.152,13.406 19.183,24 L24,24 C23.97,10.769 13.245,0.046 0,0 L0,4.812 Z" id="rss" fill="#1D2340" fill-rule="nonzero"></path>
</g>
</svg>
<p>Realm Blog</p>
</a>
</li>
<li class="col-xs-12">
<a href="https://academy.realm.io/feed.xml" class="flex rss-link">
<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M6.503,20.752 C6.503,22.546 5.047,24 3.252,24 C1.456,24 4.4408921e-16,22.546 4.4408921e-16,20.752 C4.4408921e-16,18.958 1.456,17.504 3.252,17.504 C5.047,17.505 6.503,18.958 6.503,20.752 Z M0,8.18 L0,12.991 C6.05,13.053 10.96,17.957 11.022,24 L15.839,24 C15.777,15.29 8.721,8.242 0,8.18 Z M0,4.812 C10.58,4.858 19.152,13.406 19.183,24 L24,24 C23.97,10.769 13.245,0.046 0,0 L0,4.812 Z" id="rss" fill="#1D2340" fill-rule="nonzero"></path>
</g>
</svg>
<p>Realm Academy</p>
</a>
</li>
</ul>
</div>
</li>
</ul>
</li>
</ul>
</div>
<div class="col-xs-12 footer-sub mobile">
<button data-toggle="modal" data-target="#subbarBtnMobileFooter" class="btn btn-indigo flex center col-xs-12">
<svg width="27px" height="20px" viewBox="0 0 27 20" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="Artboard" fill-rule="nonzero" fill="#FFFFFF">
<path d="M13.4994368,11 L0,0 L27,0 L13.4994368,11 Z M7,8.96800256 L0,3 L0,17 L7,8.96800256 Z M20,8.96800256 L27,17 L27,3 L20,8.96800256 Z M17.8594924,10 L13.5,13.5431736 L9.1405076,10 L0,20 L27,20 L17.8594924,10 L17.8594924,10 Z" id="Shape"></path>
</g>
</g>
</svg>
Subscribe
</button>
<div id="subbarBtnMobileFooter" class="modal" tabindex="-1" role="dialog" aria-labelledby="sub-news">
<div class="modal-dialog" role="document">
<div class="modal-content col-xs-12">
<div class="modal-header col-xs-12">
<button type="button" class="close" data-dismiss="modal" aria-label="Close">
<span aria-hidden="true">×</span>
</button>
</div>
<div class="modal-body col-xs-12 text-center">
<div class="col-xs-12">
<p class="modal-title" id="subTitleText"></p><h3 id="get-the-latest-news-in-your-inbox-every-week">Get the latest news in your inbox every week</h3>
<p>Subscribe for Realm tutorials, new features, and company announcements</p>
<p></p>
<form action="https://go.pardot.com/l/210132/2017-08-09/9ddl8?success_location=https%3A%2F%2Facademy.realm.io%2Fposts%2Ftryswift-tim-oliver-advanced-graphics-with-core-animation%2F%3Fw%3D1" method="post" class="validate">
<div class="input-group input-group-lg col-xs-12"><input type="email" value="" name="email" required="" class="required email home-newsletter-email-input col-sm-12" style="min-height: 46px;" placeholder="Enter your email">
<span class="input-group-btn">
<button type="submit" name="subscribe" style="border-radius:6px;" class="btn btn-indigo btn-subscribe">Subscribe</button>
</span>
</div>
</form>
</div>
</div>
</div>
</div>
</div>
<ul class="social footer-links flex col-xs-12 center xs-column">
<li class="social flex center">
<a class="flex center column col-xs-12" href="https://realm.github.io/" title="GitHub">
<svg width="25px" height="25px" viewBox="0 0 25 25" class="footer-icon github">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M1,12.5 C1,17.5810833 4.29475,21.8916667 8.86504167,23.4125417 C9.43908333,23.5189167 9.625,23.1624167 9.625,22.8595833 L9.625,20.7186667 C6.42608333,21.4144167 5.76004167,19.3616667 5.76004167,19.3616667 C5.23679167,18.0324583 4.48258333,17.6788333 4.48258333,17.6788333 C3.43895833,16.964875 4.562125,16.9802083 4.562125,16.9802083 C5.71691667,17.0607083 6.3245,18.1656667 6.3245,18.1656667 C7.34991667,19.92325 9.01454167,19.4153333 9.671,19.121125 C9.77354167,18.3784167 10.0715833,17.8705 10.40125,17.5839583 C7.84729167,17.2916667 5.16204167,16.3055417 5.16204167,11.9000833 C5.16204167,10.6437083 5.6115,9.61829167 6.34654167,8.81329167 C6.22770833,8.52291667 5.83383333,7.35279167 6.45866667,5.769625 C6.45866667,5.769625 7.42466667,5.46104167 9.622125,6.948375 C10.53925,6.69345833 11.5225,6.566 12.5,6.56120833 C13.4775,6.566 14.4617083,6.69345833 15.38075,6.948375 C17.5762917,5.46104167 18.540375,5.769625 18.540375,5.769625 C19.1661667,7.35375 18.7722917,8.523875 18.6534583,8.81329167 C19.391375,9.61829167 19.837,10.6446667 19.837,11.9000833 C19.837,16.3170417 17.1469583,17.28975 14.5862917,17.574375 C14.998375,17.930875 15.375,18.6304583 15.375,19.7037917 L15.375,22.8595833 C15.375,23.1652917 15.559,23.5246667 16.142625,23.4115833 C20.7090833,21.8887917 24,17.5791667 24,12.5 C24,6.149125 18.850875,1 12.5,1 C6.15008333,1 1,6.149125 1,12.5 Z" id="GitHub" fill="#1C233F"></path>
</g>
</svg>
</a>
</li>
<li class="social flex center">
<a class="flex center column col-xs-12" href="https://twitter.com/realm" title="Twitter">
<svg width="25px" height="25px" viewBox="0 0 25 25" class="footer-icon twitter">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M24,5.42915 C23.1537917,5.80155 22.2443333,6.05235 21.2898333,6.1654 C22.2644583,5.58685 23.0129167,4.6701 23.364625,3.5776 C22.45325,4.1134 21.4431667,4.5029 20.3679167,4.71285 C19.5082917,3.8037 18.2806667,3.2356 16.9236667,3.2356 C13.877125,3.2356 11.6384583,6.0533 12.3265417,8.97835 C8.406,8.7836 4.92916667,6.9216 2.601375,4.09155 C1.365125,6.1939 1.96025,8.94415 4.06091667,10.33685 C3.2885,10.31215 2.56016667,10.1022 1.92479167,9.75165 C1.87304167,11.9186 3.43991667,13.9459 5.70925,14.39715 C5.045125,14.57575 4.31775,14.61755 3.57791667,14.47695 C4.17783333,16.33515 5.92008333,17.687 7.98625,17.725 C6.0025,19.26685 3.50316667,19.9556 1,19.663 C3.08820833,20.99015 5.56933333,21.7644 8.2335,21.7644 C16.9945833,21.7644 21.944375,14.42945 21.645375,7.8507 C22.5672917,7.19045 23.3675,6.3668 24,5.42915 L24,5.42915 Z" id="Twitter" fill="#1C233F"></path>
</g>
</svg>
</a>
</li>
<li class="social flex center">
<a class="flex center column col-xs-12" href="https://plus.google.com/+RealmPlatform" title="Google+">
<svg width="25px" height="25px" viewBox="0 0 25 25" class="footer-icon google-plus">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="iconmonstr-google-plus-4" fill="#1C233F">
<path d="M12.5,0 C5.596875,0 0,5.596875 0,12.5 C0,19.403125 5.596875,25 12.5,25 C19.403125,25 25,19.403125 25,12.5 C25,5.596875 19.403125,0 12.5,0 L12.5,0 Z M9.46145833,16.753125 C7.109375,16.753125 5.20833333,14.8520833 5.20833333,12.5 C5.20833333,10.1479167 7.109375,8.246875 9.46145833,8.246875 C10.6104167,8.246875 11.5697917,8.665625 12.3104167,9.35833333 L11.1572917,10.4708333 C10.840625,10.1666667 10.2885417,9.81458333 9.46145833,9.81458333 C8.009375,9.81458333 6.825,11.0177083 6.825,12.5010417 C6.825,13.984375 8.01041667,15.1875 9.46145833,15.1875 C11.1447917,15.1875 11.778125,13.9770833 11.8739583,13.3520833 L9.46145833,13.3520833 L9.46145833,11.89375 L13.4770833,11.89375 C13.5145833,12.10625 13.54375,12.31875 13.54375,12.5989583 C13.5447917,15.028125 11.915625,16.753125 9.46145833,16.753125 L9.46145833,16.753125 Z M19.7916667,13.1072917 L17.96875,13.1072917 L17.96875,14.9302083 L16.753125,14.9302083 L16.753125,13.1072917 L14.9302083,13.1072917 L14.9302083,11.8927083 L16.753125,11.8927083 L16.753125,10.0697917 L17.96875,10.0697917 L17.96875,11.8927083 L19.7916667,11.8927083 L19.7916667,13.1072917 L19.7916667,13.1072917 Z" id="Shape"></path>
</g>
</g>
</svg>
</a>
</li>
<li class="social flex center">
<a class="flex center column col-xs-12" href="https://www.facebook.com/realmplatform/" title="Facebook">
<svg width="25px" height="25px" viewBox="0 0 25 25" class="footer-icon facebook">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="F_icon" transform="translate(1.000000, 1.000000)" fill="#1C233F">
<g id="Layer_1">
<path d="M21.6752355,22.9384595 C22.372695,22.9384595 22.9382819,22.3728726 22.9382819,21.6752355 L22.9382819,1.31535135 C22.9382819,0.617625483 22.3727838,0.0522162162 21.6752355,0.0522162162 L1.31535135,0.0522162162 C0.617625483,0.0522162162 0.0522162162,0.617625483 0.0522162162,1.31535135 L0.0522162162,21.6752355 C0.0522162162,22.3727838 0.61753668,22.9384595 1.31535135,22.9384595 L21.6752355,22.9384595 Z M15.8432703,22.9384595 L15.8432703,14.0756448 L18.8180849,14.0756448 L19.2635212,10.6216486 L15.8432703,10.6216486 L15.8432703,8.41649035 C15.8432703,7.41647876 16.1209575,6.73500386 17.5549498,6.73500386 L19.3839382,6.73420463 L19.3839382,3.64492278 C19.0676216,3.60283012 17.9819151,3.50878764 16.7187799,3.50878764 C14.0817722,3.50878764 12.2764054,5.11843243 12.2764054,8.07442085 L12.2764054,10.6216486 L9.29395367,10.6216486 L9.29395367,14.0756448 L12.2764054,14.0756448 L12.2764054,22.9384595 L15.8432703,22.9384595 Z" id="Combined-Shape"></path>
</g>
</g>
</g>
</svg>
</a>
</li>
<li class="social flex center">
<a class="flex center column col-xs-12" href="https://www.linkedin.com/company/realm-inc" title="LinkedIn">
<svg width="25px" height="24px" viewBox="0 0 25 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<g id="linkedin" fill-rule="nonzero" fill="#1C233F">
<path d="M5.1875,2.60416667 C5.1875,4.04270833 4.03125,5.20833333 2.60416667,5.20833333 C1.17708333,5.20833333 0.0208333333,4.04270833 0.0208333333,2.60416667 C0.0208333333,1.16666667 1.17708333,0 2.60416667,0 C4.03125,0 5.1875,1.16666667 5.1875,2.60416667 Z M5.20833333,7.29166667 L0,7.29166667 L0,23.9583333 L5.20833333,23.9583333 L5.20833333,7.29166667 Z M13.5229167,7.29166667 L8.34791667,7.29166667 L8.34791667,23.9583333 L13.5239583,23.9583333 L13.5239583,15.209375 C13.5239583,10.3447917 19.8041667,9.946875 19.8041667,15.209375 L19.8041667,23.9583333 L25,23.9583333 L25,13.4052083 C25,5.196875 15.70625,5.49583333 13.5229167,9.53645833 L13.5229167,7.29166667 Z" id="logo"></path>
</g>
</g>
</svg>
</a>
</li>
<li class="social flex center">
<div class="btn-group dropup">
<a href="https://academy.realm.io/posts/tryswift-tim-oliver-advanced-graphics-with-core-animation/#" data-toggle="dropdown" class="dropdown-toggle flex center column" aria-haspopup="true" aria-expanded="false">
<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M6.503,20.752 C6.503,22.546 5.047,24 3.252,24 C1.456,24 4.4408921e-16,22.546 4.4408921e-16,20.752 C4.4408921e-16,18.958 1.456,17.504 3.252,17.504 C5.047,17.505 6.503,18.958 6.503,20.752 Z M0,8.18 L0,12.991 C6.05,13.053 10.96,17.957 11.022,24 L15.839,24 C15.777,15.29 8.721,8.242 0,8.18 Z M0,4.812 C10.58,4.858 19.152,13.406 19.183,24 L24,24 C23.97,10.769 13.245,0.046 0,0 L0,4.812 Z" id="rss" fill="#1D2340" fill-rule="nonzero"></path>
</g>
</svg>
</a>
<ul class="dropdown-menu dropdown-menu-right" role="menu">
<li class="col-xs-12">
<a href="https://blog.realm.io/feed.xml" class="flex rss-link">
<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M6.503,20.752 C6.503,22.546 5.047,24 3.252,24 C1.456,24 4.4408921e-16,22.546 4.4408921e-16,20.752 C4.4408921e-16,18.958 1.456,17.504 3.252,17.504 C5.047,17.505 6.503,18.958 6.503,20.752 Z M0,8.18 L0,12.991 C6.05,13.053 10.96,17.957 11.022,24 L15.839,24 C15.777,15.29 8.721,8.242 0,8.18 Z M0,4.812 C10.58,4.858 19.152,13.406 19.183,24 L24,24 C23.97,10.769 13.245,0.046 0,0 L0,4.812 Z" id="rss" fill="#1D2340" fill-rule="nonzero"></path>
</g>
</svg>
<p>Realm Blog</p>
</a>
</li>
<li class="col-xs-12">
<a href="https://academy.realm.io/feed.xml" class="flex rss-link">
<svg width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
<path d="M6.503,20.752 C6.503,22.546 5.047,24 3.252,24 C1.456,24 4.4408921e-16,22.546 4.4408921e-16,20.752 C4.4408921e-16,18.958 1.456,17.504 3.252,17.504 C5.047,17.505 6.503,18.958 6.503,20.752 Z M0,8.18 L0,12.991 C6.05,13.053 10.96,17.957 11.022,24 L15.839,24 C15.777,15.29 8.721,8.242 0,8.18 Z M0,4.812 C10.58,4.858 19.152,13.406 19.183,24 L24,24 C23.97,10.769 13.245,0.046 0,0 L0,4.812 Z" id="rss" fill="#1D2340" fill-rule="nonzero"></path>
</g>
</svg>
<p>Realm Academy</p>
</a>
</li>
</ul>
</div>
</li>
</ul>
</div>


<div class="col-xs-12 realm-inc">
<div class="col-xs-12">
<div class="row">
Realm: BUILD BETTER APPS FASTER
<br>
© <a href="https://realm.io/">Realm</a>
2014-2018, all rights reserved.
</div>
</div>
</div>
</div>


</footer>

<script>
        $.ajax({
            url: '/assets/share-buttons-eaa331c83c390d02f764ead6ec7a90bffa1d8a38e5d3ff8b2636c16ecbfda57b.js',
            dataType: 'script',
            cache: true, // otherwise will get fresh copy every page load
            success: function() {
                setupShareButtons({
                    facebook: "Advanced Graphics with Core Animation",
                    twitter: "Advanced Graphics with Core Animation LINK via @realm",
                    hackerNews: "Advanced Graphics with Core Animation",
                    reddit: "Advanced Graphics with Core Animation",
                    linkedin: "Advanced Graphics with Core Animation",
                    email: "Advanced Graphics with Core Animation",
                    pocket: "Advanced Graphics with Core Animation",
                });
            },
            error: function() {
                console.log("Couldn't load share button JS.");
            }
        });
    </script>
<script>
        $.ajax({
            url: '/assets/share-buttons-eaa331c83c390d02f764ead6ec7a90bffa1d8a38e5d3ff8b2636c16ecbfda57b.js',
            dataType: 'script',
            cache: true, // otherwise will get fresh copy every page load
            success: function() {
                setupShareButtons({
                    facebook: "Advanced Graphics with Core Animation",
                    twitter: "Advanced Graphics with Core Animation LINK via @realm",
                    hackerNews: "Advanced Graphics with Core Animation",
                    reddit: "Advanced Graphics with Core Animation",
                    linkedin: "Advanced Graphics with Core Animation",
                    email: "Advanced Graphics with Core Animation",
                    pocket: "Advanced Graphics with Core Animation",
                });
            },
            error: function() {
                console.log("Couldn't load share button JS.");
            }
        });
    </script>
<script src="./Advanced Graphics with Core Animation_files/presentz-1.2.2.js"></script>
<script src="./Advanced Graphics with Core Animation_files/video-post-cms-3246ba3fc39e0352cdf22cba9bf72e2e89374f73f80666f3ab7c14fb42d89ca2.js"></script>
<script src="./Advanced Graphics with Core Animation_files/E-v1.js"></script><style id="wistia_16_style" type="text/css" class="wistia_injected_style">
@font-face {
font-family: 'WistiaPlayerOverpassNumbers';
src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAARAQAABAAQRFNJRwAAAAEAAA7oAAAACEdQT1Ow+b/jAAAONAAAAKhHU1VCAAEAAAAADtwAAAAKT1MvMl1sVb8AAAe0AAAAYGNtYXAApwIpAAAIFAAAALJjdnQgAAAAAAAAClQAAAAEZnBnbUM+8IgAAAjIAAABCWdhc3AAGgAjAAAOJAAAABBnbHlmWNZE7QAAARwAAAXMaGVhZIS0XikAAAckAAAANmhoZWEF5gGwAAAHkAAAACRobXR4GNICwAAAB1wAAAA0bG9jYQi0CoYAAAcIAAAAHG1heHAAGQBKAAAG6AAAACBuYW1lGpIbcAAAClgAAAOPcG9zdAAPAKQAAA3oAAAAPHByZXBoUamTAAAJ1AAAAH8ACgBd/wYBmgLuAAMADwAVABkAIwApADUAOQA9AEgAAAUhESEHFTMVIxUzNSM1MzUHFTM1IzUHIzUzBxUzFSMVMzUzNQcVIxUzNQcVMzUzFSM1IxUzNQcVMzUHIzUzBxUzBxUzNSM3MzUBmv7DAT3yQUKmQkKmpkIiISFCQkJkQiGFpmQiIWQhpqamIWRkhUZGpmZGIPoD6EMhJSEhJSGBaCJGRiRhISUhRiE8QiJkejgXL1Bxca1xcVAvZyEvISEvIQAAAAIARv/0AiYCyAAVACUAAAQ3Njc2NTQmJyYjIgcGBwYVFBYXFjMmJyY1NDc2MzIXFhUUBwYjAY87MRgTGRo/flo7LxkTGRs9f1wqIR8pX1oqIR4pXgw9M1tJVkOAMnU9MV1IV0Z/MXQ/X0qCeUxmX0uBfEplAAAAAAEAKAAAAOUCvAAIAAATIwYGIxUzETPlLRBHOXdGArwwJyj9wwAAAAABAEcAAAISAsgAJAAAJSE2Nz4CNzY2NzY1NCYjIgcGBxc2MzIWFRQHBgcHBgYHBhUhAhL+fwszEjIhCDBDG0J0Z1c+OhE+HX9HUTMjUhMrOhhEActDPTARJRYFHjAcRFRbaisoQRxxSzs8NSM2DR0uHFJzAAEAMv/0AggCyAA0AAAENjc2NjU0Jic2NjU0JicmJiMiBwYHFzY3NjMyFhcWFRQGIyMVMzIWFRQHBiMiJicHFhcWMwFJViIiJT83Ki8fHBxMKlM7MRpBFR8rPBkvEidLPyUvS1EwLEg+TxpBGzM6YAwfGxxLK0RiFhdSMCdDGBcaLiZAGS4aJBEQIjk6RUBMQkIlIjxCG0spMAAAAAIAHgAAAiICvAAKAA0AACUzNSMRIwEVIRUzAxEjAbhqair+kAFURkb5vTwBw/4mJb0CQ/62AAAAAQBG//QCLgK8AC0AADYWFxYzMjY3NjY1NCYnJiYjIgYHNyE1IQMXNjc2MzIXFhYVFAYHBgYjIicmJwdTLh1ETjpfIyAiIx8fUy4tVCAoASz+nDk7FykzN0QuFBccGBlEJkIuKiQpPB8MHSkjIVUtMVMfHSEeHfQ//pUSGxIWMRc+IiE+GBgbFxUkMwACADz/9AIEAsgAIQA2AAAENjc2NjU0JicmJiMiBgc2Njc2Njc1BgYHBgYVFBYXFhYzEhcWFRQGBwYjIiYnJiY1NDY3NjYzAVFSHx8jIBwdTCo2UxoIMiUlWzFKhDExNh4dHlc4RS0rFxUsSCE7FRYZGBUVOyMMJB8gVTAnTh4fJCEfLFkoKDsPNxJaPz+RSjpjIyYpAYAtLUgiOhUuGBYVOyEjPBYVGAABACgAAAHLArwADAAANjc2NzUhFSEGBwYHM+ooN4L+XQFTdzMrAkamjsSWLjyXqIq3AAAAAwBG//QCEALIACMALwBCAAAABgcGBhUUFhcGBwYVFBYXFjMyNjc2NjU0Jic2NjU0JicmJiMCJjU0NjMyFhUUBiMCJyY1NDY3NjYzMhcWFhUUBwYjAQJJGxoeMCw1JCMiH0JiMFUfHyJEOS4vHhobSSk5RUc3N0dFOUQrLRYVFToiRC4UFi0rRALIHRkZQiQuThQTNTRCLE0cPCAcHE0sQmcVE04vJEIZGR3+0D8zOkVFOjM//pspK0gfOBYWGC4WOB9IKykAAAACADz/9AIEAsgAIAA0AAASBgcGBhUUFhcWFjMyNjcGBgcGBgcVNjY3NjY1NCYnJiMCJyY1NDc2MzIWFxYWFRQGBwYGI/RUICAkIBwbTCo3VRoGLCMkWDJKfy8uMhwbPG1NLSssLUchOxYWGBgVFTsjAsgjIB9WMClNHh4iIyEtXCgpPA83Elo/PpJKOWMlTv58Ly1IRC4vGRYWOyEjPBYWGQAAAAIAMv/yALAB4wALABcAABI2NTQmIyIGFRQWMxI2NTQmIyIGFRQWM4slJRoaJSUaGiUlGholJRoBZSYZGSYmGRkm/o0mGRkmJhkZJgABAAAADQBJAAoAAAAAAAEAAAAAAAEAAAAAAAAAAAAAAAAAYgBiAJ4AsgDsAToBVgGcAfACCgJuAsAC5gABAAAAARmZfAtXkV8PPPUAAwPoAAAAAE2yzjUAAAAA1Z4zgwAe/wYCLgLuAAAABwACAAAAAAAAAfQAXQAAAAACbABGAU4AKAJYAEcCTgAyAksAHgJ0AEYCSgA8AfMAKAJWAEYCSgA8AOIAMgABAAADtv8GAAACdAAAACgCLgABAAAAAAAAAAAAAAAAAAAADQADAhYBkAAFAAgCigJYAAAASwKKAlgAAAFeABQBMgAAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABERUxWAEAAIAA6Au7/BgEKA7YA+gAAAAEAAAAAAf8CvAAAACAAAgAAAAMAAAADAAAAigABAAAAAAAcAAMAAQAAAIoABgBuAAAACQAyAAEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAwAEAAUABgAHAAgACQAKAAsADAAEACgAAAAGAAQAAQACACAAOv//AAAAIAAw////4f/SAAEAAAAAAAAAALAALEAOBQYHDQYJFA4TCxIIERBDsAEVRrAJQ0ZhZEJDRUJDRUJDRUJDRrAMQ0ZhZLASQ2FpQkNGsBBDRmFksBRDYWlCQ7BAUHmxBkBCsQUHQ7BAUHmxB0BCsxAFBRJDsBNDYLAUQ2CwBkNgsAdDYLAgYUJDsBFDUrAHQ7BGUlp5swUFBwdDsEBhQkOwQGFCsRAFQ7ARQ1KwBkOwRlJaebMFBQYGQ7BAYUJDsEBhQrEJBUOwEUNSsBJDsEZSWnmxEhJDsEBhQrEIBUOwEUOwQGFQebIGQAZDYEKzDQ8MCkOwEkOyAQEJQxAUEzpDsAZDsApDEDpDsBRDZbAQQxA6Q7AHQ2WwD0MQOi0AAACxAAAAQrE7AEOwAFB5uP+/QBAAAQAAAwQBAAABAAAEAgIAQ0VCQ2lCQ7AEQ0RDYEJDRUJDsAFDsAJDYWpgQkOwA0NEQ2BCHLEtAEOwAVB5swcFBQBDRUJDsF1QebIJBUBCHLIFCgVDYGlCuP/NswABAABDsAVDRENgQhy4LQAdAAAAAAAAAAASAN4AAQAAAAAAAQAWAAAAAQAAAAAAAgAFABYAAQAAAAAAAwAnABsAAQAAAAAABAAcAEIAAQAAAAAABQAPAF4AAQAAAAAABgAcAG0AAQAAAAAACQAgAIkAAQAAAAAACgA4AKkAAwABBAkAAQA4AOEAAwABBAkAAgAOARkAAwABBAkAAwBOAScAAwABBAkABAA4AXUAAwABBAkABQAeAa0AAwABBAkABgA4AXUAAwABBAkACQBAAcsAAwABBAkACgBwAgsAAwABBAkAEAAsAnsAAwABBAkAEQAKAqdXaXN0aWEtUGxheWVyLU92ZXJwYXNzTGlnaHQxLjEwMDtERUxWO1dpc3RpYS1QbGF5ZXItT3ZlcnBhc3MtTGlnaHRXaXN0aWEtUGxheWVyLU92ZXJwYXNzIExpZ2h0VmVyc2lvbiAxLjAzMTAwV2lzdGlhLVBsYXllci1PdmVycGFzcy1MaWdodERlbHZlIFdpdGhyaW5ndG9uLCBUaG9tYXMgSm9ja2luQ29weXJpZ2h0IChjKSAyMDE0IGJ5IFJlZCBIYXQsIEluYy4gQWxsIHJpZ2h0cyByZXNlcnZlZC4AVwBpAHMAdABpAGEALQBQAGwAYQB5AGUAcgAtAE8AdgBlAHIAcABhAHMAcwAgAEwAaQBnAGgAdABSAGUAZwB1AGwAYQByADEALgAxADAAMAA7AEQARQBMAFYAOwBXAGkAcwB0AGkAYQAtAFAAbABhAHkAZQByAC0ATwB2AGUAcgBwAGEAcwBzAC0ATABpAGcAaAB0AFcAaQBzAHQAaQBhAC0AUABsAGEAeQBlAHIALQBPAHYAZQByAHAAYQBzAHMALQBMAGkAZwBoAHQAVgBlAHIAcwBpAG8AbgAgADEALgAwADMAMQAwADAARABlAGwAdgBlACAAVwBpAHQAaAByAGkAbgBnAHQAbwBuACwAIABUAGgAbwBtAGEAcwAgAEoAbwBjAGsAaQBuAEMAbwBwAHkAcgBpAGcAaAB0ACAAKABjACkAIAAyADAAMQA0ACAAYgB5ACAAUgBlAGQAIABIAGEAdAAsACAASQBuAGMALgAgAEEAbABsACAAcgBpAGcAaAB0AHMAIAByAGUAcwBlAHIAdgBlAGQALgBXAGkAcwB0AGkAYQAtAFAAbABhAHkAZQByAC0ATwB2AGUAcgBwAGEAcwBzAEwAaQBnAGgAdAAAAgAAAAAAAP+FABQAAAAAAAAAAAAAAAAAAAAAAAAAAAANAAAAAwATABQAFQAWABcAGAAZABoAGwAcAB0AAQADAAcACgATAAf//wAPAAEAAAAKAB4ALAABREZMVAAIAAQAAAAA//8AAQAAAAFrZXJuAAgAAAABAAAAAQAEAAIAAAABAAgAAQBmAAQAAAAIABoAIAAmADAAOgBIAFIAYAABAAb/7AABAAb/9gACAAn/9gAL//EAAgAJ//YAC//xAAMABP/7AAn/9gAL//YAAgAJ/+wAC//dAAMABv+6AAj/4gAJACMAAQAJ//YAAgABAAMACgAAAAEAAAAAAAAAAAAAAAAAAQAAAAA=);
}
</style>
<script src="./Advanced Graphics with Core Animation_files/side-callout-2cba9d9a7ed571666d48194c2266550a6749339827fc33eb352b24b099124f57.js" async="async"></script>
<script type="text/javascript">
  $(document).ready(function () {
    setupVideo("----------", "//assets.ctfassets.net/s72atsk5w5jo/asset_604/6446f40abb29fae69d1f7789cc3be852/trySwiftTimOliver");
  });
</script>

<script type="text/javascript"> _linkedin_data_partner_id = "10114";</script><script type="text/javascript"> (function(){var s = document.getElementsByTagName("script")[0]; var b = document.createElement("script"); b.type = "text/javascript";b.async = true; b.src = "https://snap.licdn.com/li.lms-analytics/insight.min.js"; s.parentNode.insertBefore(b, s);})(); </script>

<script>
$(document).ready(function(){
  $('form.validate').each(function(index,form) {
    var action = $(form).attr('action');
    var component = 'w=1';
    var combiner = window.location.hash.indexOf('?') ? '?' : '?'
    var success_location = encodeURIComponent(document.location.href+combiner+component);
    $(form).attr('action', action+'?success_location='+success_location);
  });
  
  // Add subscribed text when subscribed
  var url = window.location.href;
  var msgSubscribed = document.getElementsByClassName('modal-success');
  if(url.match(/w=(1)/)) {
    $(msgSubscribed).modal('show');
  }
});
</script>
<script>
  $(document).ready(function () {
    $("#subbarBtnFooter").click(function () {
      $("#sub-bar-news").modal('show');
    });
    
    $(".modal-backdrop").click(function () {
      $(this).hide();
    });
      
  });
</script>
<script>
  $(document).ready(function () {
    $("#subbarBtnMobileFooter").click(function () {
      $("#sub-bar-news").modal('show');
    });
    
    $(".modal-backdrop").click(function () {
      $(this).hide();
    });
      
  });
</script>

<div class="modal fadeIn modal-success" id="proLicense" tabindex="-1" role="dialog" aria-labelledby="proLicense">
<div class="modal-dialog" role="document">
<div class="modal-content">
<div class="modal-body text-center">
<h3 id="thanks-for-subscribing">Thanks for subscribing</h3>
<p>You will be receiving an email shortly with details on your subscription</p>
</div>
</div>
</div>
</div>
<div class="modal fadeIn modal-failure" id="proLicense" tabindex="-1" role="dialog" aria-labelledby="proLicense">
<div class="modal-dialog" role="document">
<div class="modal-content">
<div class="modal-body text-center">
<h3 id="oops-something-went-wrong">Oops something went wrong</h3>
<p>You will not be receiving an email shortly with details on your subscription</p>
</div>
</div>
</div>
</div>

<script src="./Advanced Graphics with Core Animation_files/saved_resource(7)" type="text/javascript"></script><iframe scrolling="no" frameborder="0" allowtransparency="true" src="./Advanced Graphics with Core Animation_files/widget_iframe.d30011b0f5ce05b98f24b01d3331b3c1.html" title="Twitter settings iframe" style="display: none;"></iframe></body></html>